[{"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\serviceWorker.js":"3","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\Logout.js":"4","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\Login.js":"5","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\Operator.js":"6","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\Admin.js":"7","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\Error.js":"8","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\CreateOrder.js":"9","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\Dashboard.js":"10","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\OrderList.js":"11","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\CustomSettlement.js":"12","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\Shipped.js":"13","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\BoxList.js":"14","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\globalConstants.js":"15","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\ReadyToShip.js":"16","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\CountryDetails.js":"17","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\ProductItemListCard.js":"18","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\OrderSelectionModal.js":"19","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\Success.js":"20","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\EditProductItem.js":"21","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\editOrder.js":"22","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\EditBoxModal.js":"23","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddCountry.js":"24","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddSlab.js":"25","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddCategory.js":"26","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddState.js":"27","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddFedexConsolidate.js":"28","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddBillingDetails.js":"29","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddWarehouse.js":"30","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddWarehouseOwner.js":"31","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddPrinterIP.js":"32","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\CustomerDetailCard.js":"33","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddPromotionalData.js":"34","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddLanguageTemplate.js":"35"},{"size":652,"mtime":1605614314793,"results":"36","hashOfConfig":"37"},{"size":799,"mtime":1605614314696,"results":"38","hashOfConfig":"37"},{"size":5086,"mtime":1605614314795,"results":"39","hashOfConfig":"37"},{"size":343,"mtime":1605614314721,"results":"40","hashOfConfig":"37"},{"size":4116,"mtime":1610454892216,"results":"41","hashOfConfig":"37"},{"size":7591,"mtime":1611732781072,"results":"42","hashOfConfig":"37"},{"size":4123,"mtime":1609747281626,"results":"43","hashOfConfig":"37"},{"size":425,"mtime":1605614314711,"results":"44","hashOfConfig":"37"},{"size":56900,"mtime":1610455281321,"results":"45","hashOfConfig":"37"},{"size":2043,"mtime":1605614314725,"results":"46","hashOfConfig":"37"},{"size":53623,"mtime":1611991373026,"results":"47","hashOfConfig":"37"},{"size":20965,"mtime":1611732781071,"results":"48","hashOfConfig":"37"},{"size":13030,"mtime":1610454892277,"results":"49","hashOfConfig":"37"},{"size":61101,"mtime":1611988922674,"results":"50","hashOfConfig":"37"},{"size":62,"mtime":1609747281662,"results":"51","hashOfConfig":"37"},{"size":7448,"mtime":1605614314749,"results":"52","hashOfConfig":"37"},{"size":18587,"mtime":1611732781001,"results":"53","hashOfConfig":"37"},{"size":3061,"mtime":1610018060172,"results":"54","hashOfConfig":"37"},{"size":10053,"mtime":1610454892272,"results":"55","hashOfConfig":"37"},{"size":403,"mtime":1605614314711,"results":"56","hashOfConfig":"37"},{"size":7152,"mtime":1611936525579,"results":"57","hashOfConfig":"37"},{"size":29238,"mtime":1611936345599,"results":"58","hashOfConfig":"37"},{"size":6135,"mtime":1610454892226,"results":"59","hashOfConfig":"37"},{"size":13897,"mtime":1610454892198,"results":"60","hashOfConfig":"37"},{"size":14129,"mtime":1611732781000,"results":"61","hashOfConfig":"37"},{"size":14168,"mtime":1609747281612,"results":"62","hashOfConfig":"37"},{"size":12800,"mtime":1609747281621,"results":"63","hashOfConfig":"37"},{"size":17731,"mtime":1609747281615,"results":"64","hashOfConfig":"37"},{"size":12783,"mtime":1609747281610,"results":"65","hashOfConfig":"37"},{"size":19779,"mtime":1609747281623,"results":"66","hashOfConfig":"37"},{"size":24269,"mtime":1609747281624,"results":"67","hashOfConfig":"37"},{"size":17470,"mtime":1609747281617,"results":"68","hashOfConfig":"37"},{"size":1990,"mtime":1605614314724,"results":"69","hashOfConfig":"37"},{"size":17907,"mtime":1611991372982,"results":"70","hashOfConfig":"37"},{"size":10465,"mtime":1611732780995,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"q7nm40",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"74"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"74"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"74"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"74"},"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\index.js",[],["169","170"],"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\serviceWorker.js",[],"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\Logout.js",["171"],"import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport Axios from \"axios\"\r\n\r\nexport default class Logout extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        // token removes\r\n        localStorage.removeItem(\"token\")\r\n    }\r\n\r\n   \r\n    render(){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n}","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\Login.js",[],"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\Operator.js",["172","173","174","175","176","177"],"// @ts-nocheck\r\nimport React, {Component,Fragment} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from \"materialize-css\";\r\nimport Axios from \"axios\";\r\nimport Error from '../AdminPanel/Error'\r\nimport { Image,Nav,Row,Col,Card,Container,Spinner} from 'react-bootstrap';\r\nimport Dashboard from './Dashboard';\r\nimport CreateOrder from './CreateOrder';\r\nimport OrderList from './OrderList';\r\nimport ReadyShip from './ReadyToShip';\r\nimport BoxList from './BoxList';\r\nimport CustomSettlement from './CustomSettlement';\r\nimport Shipped from \"./Shipped\";\r\nimport { base_url } from '../../globalConstants'\r\nimport './operator.css';\r\n\r\n\r\n\r\n\r\nclass Operator extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n// dummy Dashboard rows\r\n\r\n\r\n\r\n\r\n    let loggedIn = false\r\n     let dummydashboard =<Dashboard/>\r\n    //  let displayContent = <div></div>\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) loggedIn = true\r\n    this.logout = this.logout.bind(this)\r\n    // let order = [{ordernumber:'9874434',customerid:'Ezzy000111',country:\"India\",\r\n    // inboundnumber:\"1232400000434\",outboundnumber:\"0871111166\"}]\r\n    this.state = {\r\n        loggedIn:loggedIn,\r\n        displayContent:dummydashboard,\r\n        dummydashboard:dummydashboard,\r\n        showSpinner:false,\r\n    }\r\n    \r\n}\r\ncomponentDidMount() {\r\n  // Auto initialize all the things!\r\n  M.AutoInit();\r\n}\r\n\r\n\r\nlogout() {\r\n  this.setState({\r\n      loggedIn: false\r\n  })\r\n}\r\n\r\ndashboardDummy = ()=>{\r\n  \r\n  this.setState({displayContent:this.state.dummydashboard})\r\n}\r\n\r\ncreateOrder = ()=>{\r\n  this.setState({displayContent:<CreateOrder refresh={this.createOrder}/>})\r\n}\r\n\r\n customSettlement=()=>{\r\n  this.setState({displayContent: <CustomSettlement refresh={this.customSettlement}/>})\r\n}\r\n\r\n\r\nshipped=()=>{\r\n  this.setState({displayContent: <Shipped refresh={this.shipped}/>})\r\n}\r\n\r\nreadyToShip= ()=>{\r\n  let order = [{id:1,ordernumber:'456778',customerid:'Ezzy000228',country:\"India\",\r\n  inboundnumber:\"12324323434\",outboundnumber:\"08754456666\",orderstatus:\"Ready To Shipped\"},\r\n  {id:2,ordernumber:'123234',customerid:'Ezzy000556',country:\"India\",\r\n  inboundnumber:\"12324323434\",outboundnumber:\"08754456666\",orderstatus:\"Ready To Shipped\"}]\r\n  this.setState({displayContent: <ReadyShip orderdata = {order}/>})\r\n}\r\n\r\norderList = async ()=>{\r\n  await this.setState({\r\n    showSpinner:true\r\n  })\r\n\r\ntry{\r\n  const response = await Axios.get(base_url+\"boxes_received/\")\r\n      console.log(response.data)\r\n      console.log(\"COutnry data\"+response.data )\r\n      this.setState({\r\n        displayContent: <OrderList orderdata = {response.data}/>,\r\n        showSpinner:false\r\n      })\r\n}catch(err){\r\n \r\n  M.toast({html: 'Please Try Again!',classes:\"white-text red rounded\"});\r\n  \r\n  console.log(err)\r\n  this.setState({error:<Error/>})\r\n      }\r\n    \r\n}\r\n\r\n\r\nboxList = async ()=>{\r\n  await this.setState({\r\n    showSpinner:true\r\n  })\r\n\r\ntry{\r\n  const response = await Axios.get(base_url+\"boxes_out/\")\r\n      // console.log(response.data)\r\n      // console.log(\"COutnry data\"+response.data )\r\n      this.setState({\r\n        displayContent: <BoxList boxdata = {response.data} />,\r\n        showSpinner:false\r\n      })\r\n}catch(err){\r\n \r\n  M.toast({html: 'Please Try Again!',classes:\"white-text red rounded\"});\r\n  \r\n  console.log(err)\r\n  this.setState({error:<Error/>})\r\n      }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunctionalityNotAvailable= ()=>{\r\n\r\n    M.toast({html: 'Functionality Not Available',classes:\"white-text red rounded\"})\r\n  \r\n \r\n\r\n\r\n}\r\n\r\n\r\n\r\n  \r\n    \r\n    render() {\r\n\r\n      if (this.state.loggedIn === false){\r\n        return <Redirect to = \"/logout\"/>\r\n      }\r\n      \r\n        return(\r\n        <Fragment>\r\n           {/* Dropdown Structure */}\r\n<ul id=\"profile\" className=\"dropdown-content\">\r\n  <li><a onClick = { this.logout }href=\"\">Logout</a></li>\r\n</ul>\r\n    <nav className=\"white black-text \" role=\"navigation\">\r\n    <ul className=\"left \">\r\n        <li><a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger show-on-large\">\r\n          <i className=\"material-icons black-text\">menu</i></a>\r\n        </li>\r\n      </ul>\r\n\r\n    <div className=\"nav-wrapper  \"><p id=\"logo-container\"  className=\"brand-logo center compamny_title indigo-text \">Ezzy<span className=\"orange-text\">Ship</span></p>\r\n<ul className=\"right \">\r\n  <li className=\"grey-text text-darken-4\">Operator</li>\r\n<li><a className=\"dropdown-trigger \" href=\"#!\" data-target=\"profile\">\r\n  <Image src=\"assets/images/avatar.svg\" className=\"\" /></a></li>\r\n\r\n  </ul>      \r\n    </div>\r\n  </nav>\r\n  <ul id=\"slide-out\" className=\"sidenav sidenav-fixed \">\r\n    <br></br>\r\n      <li><Image src=\"assets/images/logo.png\" className=\"companylogo\" /></li>\r\n  \r\n      <Fragment> \r\n      <br></br>\r\n              \r\n\r\n  <Nav defaultActiveKey=\"/Dashboard\" className=\"flex-column \">\r\n            <Nav.Link href=\"\" onClick={this.dashboardDummy} className=\"sidenav_item_hover sidenav-close black-text\"><Image className=\"mr-2 \" src = \"assets/images/dashboard.png\"/>Dashboard</Nav.Link>\r\n                <Nav.Link href=\"\"\r\n                //  onClick={this.databaseOption.bind(this)} \r\n                onClick={this.functionalityNotAvailable}\r\n                className=\"sidenav_item_hover sidenav-close black-text\"><Image className=\"mr-2 \" src = \"assets/images/userprofile.svg\"/>Users</Nav.Link>\r\n                \r\n                <ul className=\"collapsible collapsible-accordion\">\r\n          <li className=\"sidenav_item_hover \">\r\n            <Nav.Link className=\"collapsible-header sidenav_item_hover black-text \"><Image className=\"mr-1\"  src = \"assets/images/ls_dropdown.svg\"/><Image className=\"mr-2 \"  src = \"assets/images/shopping-bags.svg\"/>Orders</Nav.Link>\r\n            <div className=\"collapsible-body\">\r\n              <ul className=\"center grey lighten-2\">\r\n                <li ><Nav.Link id=\"createorder\" onClick={this.createOrder} className=\"ml-3\" href=\"\" >Create Order</Nav.Link></li>\r\n                <li ><Nav.Link  onClick={this.orderList}>Order List</Nav.Link></li>\r\n                <li><Nav.Link onClick={this.boxList} className=\"mr-3\" href=\"\">Box List</Nav.Link></li>\r\n                {/* <li><Nav.Link onClick={this.readyToShip} className=\"ml-3\" href=\"\">Ready to Ship</Nav.Link></li> */}\r\n                <li><Nav.Link onClick={this.customSettlement} className=\"ml-3\" href=\"\">Custom Settlement</Nav.Link></li>\r\n                <li><Nav.Link onClick={this.shipped} className=\"ml-3\" href=\"\">Shipped</Nav.Link></li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n                {/* <Nav.Link eventKey=\"link-1\" className=\"sidenav_item_hover sidenav-close\"><Image className=\"mr-2 \"  src = \"assets/images/shopping-bags.svg\"/>Orders</Nav.Link> */}\r\n       \r\n                \r\n                </Nav>\r\n \r\n                {/* <Image src=\"assets/images/operatorside.png\" className=\"sidenav_botom_Image\"/> */}\r\n            \r\n            </Fragment>\r\n    </ul>\r\n    <main>\r\n    <div className=\" \">\r\n    <br></br>\r\n    <div className=\"\" >\r\n    {\r\n          this.state.showSpinner\r\n            ? < div className=\"center\">\r\n          \r\n            <Spinner animation=\"grow\" variant=\"primary\" size=\"sm\" />\r\n            <Spinner animation=\"grow\" variant=\"success\" size=\"sm\" />\r\n            <Spinner animation=\"grow\" variant=\"warning\" size=\"sm\" />\r\n          </div>\r\n            : null\r\n        }\r\n           {this.state.displayContent}\r\n   \r\n\r\n    </div>\r\n   <br></br>\r\n  </div>  \r\n      </main>\r\n  \r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Operator;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\Admin.js",["178","179"],"import React, {Component,Fragment} from 'react';\r\nimport { base_url } from '../../globalConstants';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Axios from \"axios\"\r\nimport DbCountry from './CountryDetails';\r\nimport Error from './Error';\r\nimport M from \"materialize-css\";\r\nimport { Image,Nav,Container} from 'react-bootstrap';\r\n\r\n\r\n\r\nclass Admin extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let loggedIn = false\r\n    let dboptionselected =<div></div>\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) loggedIn = true\r\n    this.logout = this.logout.bind(this)\r\n     \r\n    this.state = {\r\n        loggedIn:loggedIn,\r\n        dboptionselected:dboptionselected,\r\n        error:\"\"\r\n    }\r\n    \r\n}\r\n\r\nlogout() {\r\n  this.setState({\r\n      loggedIn: false\r\n  })\r\n}\r\ndatabaseOption(){\r\n//   this.setState({\r\n//     dboptionselected: <DbCountry countrydata=\"CountrydatafromParent\"/>\r\n// })\r\nthis.getCountryData()\r\n}\r\n\r\ngetCountryData = async ()=> {\r\n       \r\n  try{\r\n  const response = await Axios.get(base_url+'countries/')\r\n\r\nthis.setState({\r\n  dboptionselected: <DbCountry countrydata={response.data}/>\r\n  ,})\r\n\r\n}\r\ncatch(error){\r\n console.log(\"Error\",error);\r\n this.setState({error:<Error/>})\r\n}\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n\r\ncomponentDidMount() {\r\n  // Auto initialize all the things!\r\n  M.AutoInit();\r\n}\r\nfunctionalityNotAvailable= ()=>{\r\n\r\n  M.toast({html: 'Functionality Not Available',classes:\"white-text red rounded\"})\r\n\r\n\r\n\r\n\r\n}\r\n    render() {\r\n\r\n      if (this.state.loggedIn === false){\r\n        return <Redirect to = \"/logout\"/>\r\n      }\r\n      \r\n        return(\r\n        <Fragment>\r\n           {/* Dropdown Structure */}\r\n<ul id=\"profile\" className=\"dropdown-content\">\r\n  <li><a onClick = { this.logout }href=\"\">Logout</a></li>\r\n</ul>\r\n    <nav className=\"white black-text \" role=\"navigation\">\r\n    <ul className=\"left \">\r\n        <li><a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger show-on-large\">\r\n          <i className=\"material-icons black-text\">menu</i></a>\r\n        </li>\r\n        </ul>\r\n    <div className=\"nav-wrapper \"><p id=\"logo-container\"  className=\"brand-logo center  compamny_title indigo-text \">Ezzy<span className=\"orange-text\">Ship</span></p>\r\n<ul className=\"right \">\r\n  <li className=\"grey-text text-darken-4\">Admin</li>\r\n<li><a className=\"dropdown-trigger \" href=\"#!\" data-target=\"profile\">\r\n  <Image src=\"assets/images/avatar.svg\" className=\"\" /></a></li>\r\n\r\n  </ul>      \r\n    </div>\r\n  </nav>\r\n  <ul id=\"slide-out\" className=\"sidenav sidenav-fixed \">\r\n    <br></br>\r\n      <li><Image src=\"assets/images/logo.png\" className=\"companylogo\" /></li>\r\n  \r\n      <Fragment> \r\n      <br></br>\r\n              \r\n\r\n  <Nav defaultActiveKey=\"/Dashboard\" className=\"flex-column\">\r\n            <Nav.Link href=\"\" onClick={this.functionalityNotAvailable} className=\"sidenav_item_hover sidenav-close\"><Image className=\"mr-2 \" src = \"assets/images/dashboard.png\"/>Dashboard</Nav.Link>\r\n                <Nav.Link href=\"\" onClick={this.databaseOption.bind(this)} className=\"sidenav_item_hover sidenav-close\"><Image className=\"mr-2 \" src = \"assets/images/database.png\"/>Database</Nav.Link>\r\n                <Nav.Link onClick={this.functionalityNotAvailable} eventKey=\"link-1\" className=\"sidenav_item_hover sidenav-close\"><Image className=\"mr-2 \"  src = \"assets/images/user.png\"/>Access Control</Nav.Link>\r\n                <Nav.Link onClick={this.functionalityNotAvailable} eventKey=\"link-2\" className=\"sidenav_item_hover sidenav-close\"> <Image className=\"mr-2 \" src = \"assets/images/analytics.png\"/>Analytics</Nav.Link>\r\n                \r\n                </Nav>\r\n \r\n                <Image src=\"assets/images/ShopIllus.png\" className=\"sidenav_botom_Image\"/>\r\n            \r\n            </Fragment>\r\n    </ul>\r\n    <main>\r\n  <Container>\r\n  <div  id =\"\"className=\"flex-container \">\r\n    <br></br>\r\n    <div className=\"flex-item\" >\r\n    <br></br>\r\n    \r\n           {this.state.dboptionselected}\r\n           {this.state.error}\r\n\r\n\r\n    </div>\r\n   <br></br>\r\n  </div>\r\n    </Container>  \r\n      </main>\r\n  \r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\Error.js",[],"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\CreateOrder.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195"],"import React, {Component,} from 'react';\r\nimport {Redirect, useHistory } from 'react-router-dom';\r\nimport {Card,Button,ButtonGroup,Nav,Image,Row,Col,Container,Spinner} from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport Axios from \"axios\";\r\nimport Error from '../AdminPanel/Error'\r\nimport Success from '../AdminPanel/Success'\r\nimport ProductItemsList from './ProductItemListCard';\r\nimport OrderModal from './OrderSelectionModal';\r\nimport EditProduct from './EditProductItem';\r\n\r\n\r\n\r\n\r\nimport \"./createorder.css\";\r\n\r\n\r\nclass CustomerDetailCard extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n  this.state = ({title:\"***\",name:\"********\",\r\n              email:\"**********\",address:\"********\",phone:\"********\"\r\n\r\n              })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n      if (this.props.info.ezz_id !== prevProps.info.ezz_id) {\r\n        \r\n         this.setState({title:this.props.info.title,name:this.props.info.name,\r\n            email:this.props.info.email,address: this.props.info.address,phone:this.props.info.phone_number\r\n        \r\n        })\r\n\r\n      }\r\n    }\r\n\r\n\r\n    render(){ \r\n        return(\r\n            <Row>\r\n            <Col>\r\n            \r\n            <Card className=\"\" id=\"customerbasicdetailsCard\">\r\n        <Card.Body>\r\n            <Card.Text>\r\n                <Row>\r\n                    <Col xs={8}>\r\n        <h6 >Name:</h6><p className=\"inline\">{this.state.title + \" \" + this.state.name}</p>\r\n                    </Col>\r\n                    <Col className=\"\">\r\n                    <Image src=\"assets/images/avatar-big.svg\"/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={8}>\r\n                        <h6 >Address:</h6><p>{this.state.address}</p>\r\n                    </Col>\r\n                    <Col xs={4} className=\"right\">\r\n                    <h6 >Phone:</h6><p>{this.state.phone}</p>\r\n                    </Col>\r\n                    <Col className=\"\">\r\n                    <h6 >Email:</h6><p>{this.state.email}</p>\r\n                    </Col>\r\n                </Row>\r\n               \r\n            \r\n            </Card.Text>\r\n               \r\n\r\n\r\n               </Card.Body> \r\n        </Card>\r\n            </Col>\r\n        </Row>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass CreateOrder extends Component{\r\n    constructor(props){\r\n        super(props);\r\n     \r\n        var today = new Date();\r\n       \r\n    let date = today.getFullYear() +'-'+ (today.getMonth() + 1) + '-'+today.getDate()\r\n        this.state = ({\r\n          current_date: date,\r\n            productlist:new Array() ,\r\n            productlisthtml:<div></div> ,\r\n            product_name:\"\",product_price:0,product_quantity:0 ,\r\n            product_category_options :[],\r\n            product_edit_category :[],\r\n            product_category:\"\",ordernumber:\"\",\r\n         customer_id:\"\",order_date:date,\r\n        received_date:date,tracking_number:\"\",shiper_order_number:\"\",\r\n        weight:0,height:0,fedex_charge:0,width:0,length:0,actual_charge:0,\r\n        Weight_type:null,\r\n          orderStatusSelected:\"IM\",\r\n          paymentTypeSelected:\"card\",showSpinner:false,\r\n          customer_selected_data:{},\r\n          pendingOrders:[],ordersSelectedInModal:[],\r\n          createNewOrder:true,holdmergedorderstatus:\"RTM\",\r\n          ordernumbermerge:\"\",\r\n          error:\"\",\r\n          rowNumber:\"\",\r\n          selectItemDetails:{},\r\n      \r\n          \r\n      \r\n          \r\n          \r\n          })\r\n\r\n    }\r\n\r\n\r\n\r\n    openOrderModel = ()=>{\r\n      this.refs.ordermodel.openModal();\r\n    }\r\n\r\n\r\n    showSelectedModalOrders=(orderselected)=>{\r\n      console.log(`order selected ${orderselected}`)\r\n      this.setState({ordersSelectedInModal:orderselected})\r\n    }\r\n\r\n\r\n    getCategories = async (countryid)=>{\r\n\r\n      let token =localStorage.getItem(\"token\")\r\n      let header = {'Content-Type': 'multipart/form-data',\r\n      'Authorization':'Token '+token,\r\n\r\n      }\r\n\r\n      var url= `http://3.131.16.17/api/v1/ezzytrace/categories/?country=${countryid}`\r\n      var categories = await Axios.get(url,header)\r\n      console.log(categories.data)\r\n      \r\n     \r\n\r\n      await this.setState({product_category_options:categories.data})\r\n      await this.setState({product_edit_category:categories.data})\r\n\r\n    }\r\n\r\ngetPendingOrder= async (customerid,orderstatus)=>{\r\ntry{\r\n  let token =localStorage.getItem(\"token\")\r\n  let header = {'Content-Type': 'multipart/form-data',\r\n  'Authorization':'Token '+token,\r\n\r\n  }\r\n\r\n  var url= `http://3.131.16.17/api/v1/ezzytrace/products/?ezz_id=${customerid}&status=${orderstatus}`\r\n  let orders = await Axios.get(url,header)\r\n  console.log(orders.data)\r\n  await this.setState({pendingOrders: this.state.pendingOrders.concat(orders.data)})\r\n  // M.toast({html: 'Pending Ordersa fetched',classes:\"white-text orange rounded\"});\r\n  this.setState({error:\"\"})\r\n}catch(error){\r\n  console.log(error)\r\n  M.toast({html: 'Pending Ordersa cannot be fetched',classes:\"white-text red rounded\"});\r\n  this.setState({error:<Error/>})\r\n}\r\n\r\n}\r\n\r\nhandletableClick=(clickedrow)=>{\r\n  //console.log(clickedrow)\r\n // M.toast({html: 'Clicked row '+clickedrow,classes:\"white-text red rounded\"});\r\n let productdetail = this.state.productlist[clickedrow]\r\n let countryoptions = this.state.product_category_options\r\n //console.log(\"handle cat\",countryoptions)\r\n //console.log(\"handle cat\",this.state.product_edit_category)\r\n this.setState({rowNumber:clickedrow})\r\n this.setState({selectItemDetails:productdetail})\r\n\r\n \r\n   this.refs.editproduct.openModal(clickedrow,productdetail,countryoptions);\r\n}\r\n\r\nupdateProduct=(rownumber,item)=>{\r\n  console.log(\"updatig list\",rownumber,item)\r\nlet productlist = this.state.productlist\r\nproductlist.splice(rownumber, 1, item)\r\nthis.setState({productlist:productlist})\r\n// this.refs.editproduct.closeModal();\r\n// M.toast({html: 'item updated at row ' +rownumber,classes:\"white-text blue rounded\"});\r\n\r\n}\r\n\r\n    handleCustomerIDChange = async (ev)=>{\r\n    \r\n      const target = ev.target;\r\n      const name = target.name;\r\n\r\n      this.setState({\r\n        [name]: target.value,\r\n     \r\n      })\r\n\r\n      try{\r\n      \r\n        let token =localStorage.getItem(\"token\")\r\n        let header = {'Content-Type': 'multipart/form-data',\r\n        'Authorization':'Token '+token,\r\n\r\n        }\r\n\r\n        // Fetching user list on input change\r\n        var url= `http://3.131.16.17/api/v1/ezzytrace/customers/?ezz_id__icontains=${target.value}`\r\n        var customer_data = await Axios.get(url,header)\r\n        console.log(customer_data.data)\r\n        let ezzidlist = {}\r\n        let customerdataObject ={}\r\n        \r\n        document.getElementById(\"errCustomerNotAuthorized\").style.display = \"none\"\r\n        for (let customer of customer_data.data) {\r\n          ezzidlist[customer.ezz_id] = null;\r\n          customerdataObject[customer.ezz_id] = customer;\r\n        }\r\n        console.log(ezzidlist)\r\n        this.setState({customer_data:customerdataObject})\r\n        // Autoselect starts here\r\n        var context = this;\r\n        // /await context.setState({pendingOrders:[]})\r\n        const elems_auto_customer = document.getElementById('customer_id');\r\n        var options={\r\n          data:ezzidlist,\r\n          limit:20,\r\n          onAutocomplete : async function(select_customer) {\r\n          \r\n        \r\n        \r\n            context.setState({customer_id:select_customer})\r\n            context.setState({customer_selected_data:customerdataObject[select_customer]})\r\n            await context.setState({pendingOrders:[]})\r\n           \r\n            context.getCategories(customerdataObject[select_customer].country)\r\n                  await context.getPendingOrder(select_customer,\"IM\")\r\n                   await context.getPendingOrder(select_customer,\"YTA\")\r\n           \r\n           \r\n            //context.set\r\n         \r\n            // @TODO show model only when there is any orders pending \r\n            //like IM or BoX YET to arrive\r\n            if (context.state.pendingOrders.length >0){\r\n              context.openOrderModel();\r\n            }\r\n            // console.log(\"selected cust ID AUTH\", customerdataObject[select_customer].card_authorize  )\r\n           \r\n            const checkCustomerAuth = customerdataObject[select_customer].card_authorize\r\n\r\n            if(!checkCustomerAuth || checkCustomerAuth === \"card details missing\" )          \r\n              document.getElementById(\"errCustomerNotAuthorized\").style.display = \"inline-grid\"\r\n            else  \r\n              document.getElementById(\"errCustomerNotAuthorized\").style.display = \"none\"\r\n          },\r\n        \r\n          sortFunction:  function (a, b, inputString) {\r\n            return a.indexOf(inputString) - b.indexOf(inputString);\r\n          },\r\n        }\r\n        var instance = M.Autocomplete.init(elems_auto_customer,options)\r\n  \r\n      }catch(err){\r\n\r\n        M.toast({html: 'User data cannot be fetched',classes:\"white-text red rounded\"});\r\n        \r\n        console.log(err)\r\n        this.setState({error:<Error/>})\r\n      }\r\n\r\n    }\r\n   fillFormAutomatically=(data)=>{\r\n     console.log(`fill auto maticaly ${data}`)\r\n    this.setState({\r\n      ordernumber: data.order_id,\r\n      order_date: data.order_date,\r\n      received_date: data.received_date,\r\n      tracking_number: data.inbound_tracking_number,\r\n      shiper_order_number : data.shipper_number,\r\n      weight: data.weight,\r\n      height: data.height,\r\n      fedex_charge: data.freight_charge,\r\n      width: data.breadth,\r\n      length: data.length,\r\n      actual_charge: data.actual_charge,\r\n      orderStatusSelected: data.current_status,\r\n      paymentTypeSelected: data.billing_type,\r\n\r\n      \r\n    });\r\n    \r\n  \r\n  }\r\n\r\n  getfedexActualRate = async (weight,height,length,breadth)=>{\r\n    \r\n\r\n\r\n    try{\r\n  let token =localStorage.getItem(\"token\")\r\n\r\n\r\n  var config = {\r\n    headers: { \r\n      'Content-Type': 'multipart/form-data' , \r\n      'Authorization':'Token '+token},\r\n    \r\n  };\r\n  \r\n\r\n  // Fetching user list on input change\r\n  var url= `http://3.131.16.17/api/v1/ezzytrace/fedex_actual_rates/?weight=${weight}&height=${height}&breadth=${breadth}&length=${length}&ezz_id=${this.state.customer_id}`\r\n\r\n  var response = await Axios.get(url,config)\r\n  console.log(response.data)\r\n  return response.data\r\n}catch(error){\r\n\r\n  console.log(error.response.data)\r\n  \r\n   if (error.response.status ===503 ){\r\n    M.toast({html: \"\"+error.response.data.error,classes:\"white-text red rounded\"});\r\n   }\r\n   if (error.response.status === 403 ){\r\n    M.toast({html: \"\"+error.response.data.Error,classes:\"white-text red rounded\"});\r\n   }\r\n   \r\n  \r\n  // return response.data\r\n  return error.response.data\r\n}\r\n\r\n\r\n\r\n  }\r\n\r\n    handleFormChange= async (ev) =>{\r\n     \r\n      const target = ev.target\r\n      const name = target.name\r\n      console.log(ev.target.name)\r\n      console.log(ev.target.value)\r\n     \r\n      // hide and show on YTA\r\n      if (target.value === \"YTA\"){\r\n        this.setState({\r\n          [name]: target.value,\r\n          weight: 0,\r\n          height:0,\r\n          fedex_charge:0,\r\n          width:0,\r\n          length:0,\r\n          actual_charge:0\r\n        });\r\n      }else{\r\n\r\n        if(target.name ===\"weight\" || \r\n        target.name ===\"height\" || target.name === \"width\"\r\n      || target.name === \"length\"\r\n        ){\r\n\r\n        this.setState({\r\n            [name]: target.value\r\n          });\r\n\r\n          var weight = this.state.weight\r\n          var width = this.state.width\r\n          var height = this.state.height\r\n          var length = this.state.length\r\n          var field = target.name;\r\n\r\n          switch (field) {\r\n            case \"weight\":\r\n              weight = target.value;\r\n              break;\r\n            case \"height\" :\r\n              height = target.value;\r\n              break;\r\n            case \"width\" :\r\n              width = target.value;\r\n              break;\r\n            case \"length\" :\r\n              length = target.value;\r\n              break;\r\n              \r\n           \r\n          }\r\nif(width < 0 || height <0 || weight < 0 || length <0 || this.state.actual_charge <0){\r\n  M.toast({html: \"values can not be negative\",classes:\"white-text red rounded\"});\r\n  return;\r\n}\r\n\r\n          if((width.toString()!==\"\" && width!==0) && (height.toString() !==\"\"&& height!==0) && \r\n          (weight.toString() !==\"\"&& weight!==0) &&( length.toString()!==\"\"&& length !==0)){\r\n            await this.setState({\r\n              showSpinner:true\r\n            })\r\n            var response =  await this.getfedexActualRate(weight,height,length,width)\r\n            console.log(response[\"freight_charges\"] + response[\"actual_charges\"])\r\n              this.setState({\r\n                fedex_charge:response[\"freight_charges\"],\r\n                actual_charge: response[\"actual_charges\"],\r\n                Weight_type:response[\"Weight_type\"],\r\n                showSpinner:false\r\n              })\r\n          }\r\n         \r\n        }else{\r\n          this.setState({\r\n            [name]: target.value\r\n          });\r\n        }\r\n\r\n       \r\n     \r\n     \r\n     \r\n      }\r\n   \r\n     \r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n      \r\n        M.AutoInit();\r\n\r\n\r\n\r\n\r\n\r\n        console.log(\"is thissssssss working\");\r\n        \r\n\r\n        // var elems_recieved = document.getElementById('received_date');\r\n        var elems = document.querySelectorAll('.modal');\r\n        let model_options = {\r\n          dismissible:false,\r\n        }\r\n        var instances = M.Modal.init(elems, model_options);\r\n        \r\n        var elems_auto_customer = document.querySelectorAll('.autocomplete');\r\n\r\n        var options_auto_customer={\r\n      \r\n          data: {}, \r\n          limit:20,\r\n          onAutocomplete :function(select_customer) {\r\n           \r\n            // context.setState({ order_date: selecteddata});\r\n             console.log(\"slect autocomplete\",select_customer); \r\n          },\r\n        \r\n          sortFunction:  function (a, b, inputString) {\r\n            return a.indexOf(inputString) - b.indexOf(inputString);\r\n          },\r\n        } \r\n        var instances_auto = M.Autocomplete.init(elems_auto_customer, options_auto_customer);\r\n      \r\n\r\n         \r\n        var context = this;\r\n\r\n       \r\n        var elems_order = document.getElementById('order_date');\r\n      \r\n        var options_order={\r\n            //selectMonths: true, // Enable Month Selection\r\n            selectYears: 10, // Creates a dropdown of 10 years to control year\r\n            format:'yyyy-mm-dd',\r\n            autoClose :true,\r\n            defaultDate:new Date(),\r\n            setDefaultDate :true,\r\n            onSelect: function(date) {\r\n              let selecteddata =  date.getFullYear() +'-'+ (date.getMonth() + 1) + '-'+date.getDate()\r\n              context.setState({ order_date: selecteddata});\r\n              // console.log(\"order\",selecteddata); // Selected date is logged\r\n            },\r\n          }\r\n        var instances = M.Datepicker.init(elems_order, options_order);\r\n        var elems_recieved = document.getElementById('received_date');\r\n        var options_recieved={\r\n            //selectMonths: true, // Enable Month Selection\r\n            selectYears: 1, // Creates a dropdown of 10 years to control year\r\n            format:'yyyy-mm-dd',\r\n            autoClose :true,\r\n            defaultDate:new Date(),\r\n            setDefaultDate :true,\r\n            onSelect: function(date) {\r\n              let selecteddata =  date.getFullYear() +'-'+ (date.getMonth() + 1) +'-'+date.getDate()\r\n              context.setState({ received_date: selecteddata});\r\n              //  console.log(\"recived\"+ selecteddata); // Selected date is logged\r\n            },\r\n          }\r\n        var instances = M.Datepicker.init(elems_recieved, options_recieved);\r\n \r\n    \r\n    \r\n    }\r\n\r\n\r\n// @TODO: handlechange for create order is pending Please implement it\r\n\r\n\r\n     addProductTolist = ()=>{\r\n      console.log(this.state.productname + this.state.productprice +this.state.productquantity)\r\n       var prodname =this.state.product_name\r\n       var prodquant =this.state.product_quantity\r\n       var prodcat =this.state.product_category\r\n       console.log(\"prody\")\r\n       console.log(prodname + prodquant+prodcat )\r\n\r\n       if(prodname === \"\" || prodquant === 0 || prodcat ===\"\"){\r\n        M.toast({html: 'Incorrect or Empty details',classes:\"white-text red rounded\"});\r\n       }else{\r\n        var elem = document.getElementById('addProductModal')\r\n        var instance = M.Modal.getInstance(elem);\r\n        instance.close();\r\n        let totalproducts = this.state.productlist.length + 1\r\n        \r\n        let newitem = {id:'item_'+totalproducts,productName:this.state.product_name,\r\n        productPrice:this.state.product_price ,\r\n        productQuantity:this.state.product_quantity,\r\n      productCategory:this.state.product_category\r\n      }\r\n\r\n        console.log(\"Product List\",this.state.productlist)\r\n       this.state.productlist.push(newitem)\r\n        this.setState({productlist: this.state.productlist})\r\n        \r\n      try {\r\n        // this.setState({productlisthtml:<ProductItemsList products={this.state.productlist}/>})\r\n        this.setState({product_name:\"\",product_price:0,product_quantity:0 })\r\n       M.toast({html: 'Added in list successfully',classes:\"white-text orange rounded\"})\r\n      } catch (error) {\r\n        M.toast({html: 'Couldnt be added',classes:\"white-text orange rounded\"})\r\n      }\r\n       \r\n    \r\n       }\r\n\r\n    }\r\n\r\n  \r\n    cancelOrder = ()=>{\r\n        // @TODO fucntionality not clear yet\r\n        M.toast({html: 'Pending for Implemention',classes:\"white-text black rounded\"})\r\n        // return (<Redirect to=\"/Admin\"/>\r\n   }\r\n\r\n\r\nhandleMergeCheckbox= (event)=>{\r\n  // event.target.checked\r\n  console.log(this.state.holdmergedorderstatus)\r\n  console.log(event.target.checked)\r\n  const name = event.target.name\r\n  if (event.target.checked){\r\n    this.setState({[name]:\"WFC\"})\r\n  }else{\r\n    this.setState({[name]:\"RTM\"})\r\n  }\r\n}\r\n\r\nmergeOrder=()=>{\r\n  \r\n  // var elems = document.getElementById('merge_order_model');\r\n  // var instance = M.Modal.init(elems);\r\n  // instance.close();\r\n  this.createOrderMerged();\r\n\r\n\r\n\r\n}\r\nmergerOrderCancel = ()=>{\r\n\r\n\r\n\r\n  // var elems = document.getElementById('merge_order_model');\r\n  // var instance = M.Modal.init(elems);\r\n  // instance.close();\r\n  this.createOrderNormal();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n  createOrderMerged = async () => {\r\n    let token = localStorage.getItem(\"token\")\r\n    const header = {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Token ' + token,\r\n\r\n    }\r\n\r\n    if (this.state.createNewOrder) {\r\n\r\n      // new order creation\r\n      console.log(\"Deleting previous orders if any\")\r\n      this.state.productlist.forEach(async (item) => {\r\n        console.log(\"productlist Merged order-----\")\r\n        console.log(item)\r\n        try {\r\n\r\n          let urlfordeletion = `http://3.131.16.17/api/v1/ezzytrace/products/${item.id}/`\r\n          const response = await Axios.post(urlfordeletion,\r\n            header)\r\n          console.log(`deletion response ${response.data}`)\r\n          console.log(\"Product delete success\")\r\n          M.toast({ html: 'Product deletion Successful', classes: \"white-text red rounded\" });\r\n        } catch (error) {\r\n          M.toast({ html: 'No old products found', classes: \"white-text green rounded\" });\r\n          console.log(error)\r\n        }\r\n\r\n      });\r\n\r\n\r\n\r\n      const orderid = this.state.ordernumber\r\n      const existing_order = this.state.ordernumbermerge\r\n      // this.setState({ordernumber:orderid})\r\n\r\n      var current_status = this.state.holdmergedorderstatus\r\n      var Orderformdata = new FormData()\r\n      console.log(\"orderid\" + orderid)\r\n      console.log(this.state.fedex_charge)\r\n      console.log(this.state.actual_charge)\r\n      Orderformdata.append(\"order_id\", orderid.toString())\r\n      Orderformdata.append(\"ezz_id\", this.state.customer_id)\r\n      Orderformdata.append(\"shipper_number\", this.state.shiper_order_number)\r\n      Orderformdata.append(\"billing_id\", \"2121\")\r\n      Orderformdata.append(\"billing_type\", this.state.paymentTypeSelected)\r\n      Orderformdata.append(\"order_date\", this.state.order_date)\r\n      Orderformdata.append(\"received_date\", this.state.received_date)\r\n      Orderformdata.append(\"inbound_tracking_number\", this.state.tracking_number)\r\n      Orderformdata.append(\"weight\", this.state.weight)\r\n      Orderformdata.append(\"length\", this.state.length)\r\n      Orderformdata.append(\"breadth\", this.state.width)\r\n      Orderformdata.append(\"height\", this.state.height)\r\n      Orderformdata.append(\"charge_type\", \"VAT\")\r\n      Orderformdata.append(\"freight_charge\", this.state.fedex_charge)\r\n      Orderformdata.append(\"actual_charge\", this.state.actual_charge)\r\n      Orderformdata.append(\"current_status\", \"DISC\")\r\n      Orderformdata.append(\"previous_status\", \"DISC\")\r\n      Orderformdata.append(\"status\", \"Deactive\")\r\n      Orderformdata.append(\"flag\", \"1\")\r\n\r\n      console.log(JSON.stringify(Orderformdata))\r\n      console.log(JSON.stringify(this.state))\r\n\r\n      const orderstatus_merged = {\r\n        \"remarks\": \"discarded after merging with order\" + existing_order,\r\n        \"order_id\": orderid,\r\n        \"status_id\": \"DISC\"\r\n      }\r\n\r\n      const orderstatus_mergedwith = {\r\n        \"remarks\": \"\",\r\n        \"order_id\": existing_order,\r\n        \"status_id\": current_status\r\n      }\r\n\r\n      // @Todo: APi to be called to save data for state\r\n\r\n      try {\r\n\r\n        const response = await Axios.post(\"http://localhost:8000/api/v1/ezzytrace/boxes_received/\", Orderformdata,\r\n          header)\r\n        const response_newdiscrded = await Axios.post(\"http://localhost:8000/api/v1/ezzytrace/order_statuses/\", orderstatus_merged,\r\n          header)\r\n        const response_existingupdated = await Axios.post(\"http://localhost:8000/api/v1/ezzytrace/order_statuses/\", orderstatus_mergedwith,\r\n          header)\r\n\r\n        var existingOrderUpdateForm = new FormData()\r\n        existingOrderUpdateForm.append(\"current_status\", current_status)\r\n        let urlforexistingOrderStatusUpdate = `http://3.131.16.17/api/v1/ezzytrace/boxes_received/${existing_order}/`\r\n        await Axios.patch(urlforexistingOrderStatusUpdate, existingOrderUpdateForm, header)\r\n\r\n\r\n        this.state.productlist.forEach(async (item) => {\r\n          console.log(\"productitemmerged\")\r\n          console.log(item)\r\n          try {\r\n            var productformdata = new FormData()\r\n            productformdata.append(\"order_id\", existing_order)\r\n            productformdata.append(\"description\", item.productName)\r\n            productformdata.append(\"quantity\", item.productQuantity)\r\n            productformdata.append(\"unit_price\", item.productPrice)\r\n            productformdata.append(\"inspection_status\", \"okay\")\r\n            productformdata.append(\"status\", \"Active\")\r\n            productformdata.append(\"category\", item.productCategory)\r\n\r\n            const response_products = await Axios.post(\"http://3.131.16.17/api/v1/ezzytrace/products/\", productformdata,\r\n              header)\r\n\r\n            console.log(\"Product added Successfully\")\r\n            this.setState({ error: <Success message=\" Order Status Updated\" /> })\r\n            M.toast({ html: 'Product Addition Successfull', classes: \"white-text blue rounded\" });\r\n          } catch (error) {\r\n            M.toast({ html: 'Product Addition Failed', classes: \"white-text red rounded\" });\r\n            console.log(error)\r\n          }\r\n\r\n        });\r\n\r\n\r\nthis.setState({error:<Success message=\" New order for product items created\"/>})\r\n M.toast({html: 'Order created successfully',classes:\"white-text orange rounded\"})\r\nthis.setState({error:\"\"})    \r\n}catch(err){\r\n  \r\n    M.toast({html: 'Please Try Again!',classes:\"white-text red rounded\"});\r\n    \r\n    console.log(err)\r\n    this.setState({error:<Error/>})\r\n        }\r\n\r\n\r\n\r\n\r\n}else{\r\n\r\n\r\n  try{\r\n  \r\n    var orderupdateForm = new FormData()\r\n    orderupdateForm.append(\"shipper_number\",this.state.shiper_order_number)\r\n    // orderupdateForm.append(\"billing_id\",\"2121\")\r\n    orderupdateForm.append(\"billing_type\",this.state.paymentTypeSelected)\r\n    orderupdateForm.append(\"order_date\",this.state.order_date)\r\n    orderupdateForm.append(\"received_date\",this.state.received_date)\r\n    orderupdateForm.append(\"inbound_tracking_number\",this.state.tracking_number)\r\n    orderupdateForm.append(\"weight\",this.state.weight)\r\n    orderupdateForm.append(\"length\",this.state.length)\r\n    orderupdateForm.append(\"breadth\",this.state.width)\r\n    orderupdateForm.append(\"height\",this.state.height)\r\n    // orderupdateForm.append(\"charge_type\",\"VAT\")\r\n    orderupdateForm.append(\"freight_charge\",this.state.fedex_charge)\r\n    orderupdateForm.append(\"actual_charge\",this.state.actual_charge)\r\n    orderupdateForm.append(\"current_status\",this.state.orderStatusSelected)\r\n    let urlforOrderStatusUpdate = `http://3.131.16.17/api/v1/ezzytrace/boxes_received/${this.state.ordernumber}/`\r\n    const response = await Axios.patch(urlforOrderStatusUpdate,orderupdateForm,\r\n    header)\r\n\r\n    console.log(`order status update succesfully ${response.data}`)\r\n    this.setState({error:<Success message=\" Order Status Updated\"/>})\r\n    M.toast({html: 'Updated SUccessfull',classes:\"white-text orange rounded\"});\r\n  }catch(error){\r\n     M.toast({html: 'Updation Failed',classes:\"white-text red rounded\"});\r\n      console.log(error)\r\n      this.setState({error:<Error/>})\r\n  }\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncreateOrderNormal= async ()=>{\r\n     let token =localStorage.getItem(\"token\")\r\n    const  header = {'Content-Type': 'application/json',\r\n      'Authorization':'Token '+token,\r\n  \r\n      }\r\n\r\nconsole.log(\"create new order\"+this.state.createNewOrder)\r\n\r\n  if (this.state.createNewOrder){\r\n\r\n    // new order creation\r\n      console.log(\"Deleting previous orders if any\")\r\n      this.state.productlist.forEach(async(item)=>{\r\n        console.log(\"productlist -----\",item.id)\r\n        console.log(item)\r\n        try{\r\n         \r\n          let urlfordeletion = `http://3.131.16.17/api/v1/ezzytrace/products/${item.id}/`\r\n          const response = await Axios.delete(urlfordeletion,\r\n          header)\r\n          console.log(`deletion response ${response.data}`)\r\n          console.log(\"Product delete success\")\r\n          M.toast({html: 'Product deletion Successful',classes:\"white-text red rounded\"});\r\n        }catch(error){\r\n          M.toast({html: 'No old products found',classes:\"white-text green rounded\"});\r\n            console.log(error)\r\n        }\r\n       \r\n      });\r\n\r\n\r\n\r\n      // const orderid = Math.floor(1000 + Math.random() * 9000)\r\n      // this.setState({ordernumber:orderid})\r\n\r\n\r\n      \r\n\r\n      \r\n      \r\n      \r\n      var Orderformdata = new FormData()\r\n      // console.log(\"orderid\"+orderid)\r\n      console.log(this.state.fedex_charge)\r\n      console.log(this.state.actual_charge)\r\n      // Orderformdata.append(\"order_id\",orderid.toString())\r\n      Orderformdata.append(\"ezz_id\",this.state.customer_id)\r\n      Orderformdata.append(\"shipper_number\",this.state.shiper_order_number)\r\n      Orderformdata.append(\"billing_id\",\"2121\")\r\n      Orderformdata.append(\"billing_type\",this.state.paymentTypeSelected)\r\n      Orderformdata.append(\"order_date\",this.state.order_date)\r\n      Orderformdata.append(\"received_date\",this.state.received_date)\r\n      Orderformdata.append(\"inbound_tracking_number\",this.state.tracking_number)\r\n      Orderformdata.append(\"weight\",this.state.weight)\r\n      Orderformdata.append(\"length\",this.state.length)\r\n      Orderformdata.append(\"breadth\",this.state.width)\r\n      Orderformdata.append(\"height\",this.state.height)\r\n      Orderformdata.append(\"charge_type\",\"VAT\")\r\n      Orderformdata.append(\"freight_charge\",this.state.fedex_charge)\r\n      Orderformdata.append(\"actual_charge\",this.state.actual_charge)\r\n      Orderformdata.append(\"current_status\",this.state.orderStatusSelected)\r\n      Orderformdata.append(\"previous_status\",this.state.orderStatusSelected)\r\n      Orderformdata.append(\"status\",\"Active\")\r\n      Orderformdata.append(\"flag\",\"1\")\r\n\r\n    // console.log(JSON.stringify(Orderformdata))\r\n    // console.log(\"-------------------\")\r\n    // console.log(JSON.stringify(this.state))\r\n    // console.log(\"-------------------\")\r\n    \r\n      \r\n      // @Todo: APi to be called to save data for state\r\n    \r\n   try{\r\n    \r\n  const response = await Axios.post(\"http://3.131.16.17/api/v1/ezzytrace/boxes_received/\",Orderformdata,\r\n  header)\r\n  \r\n  const orderid = response.data.order_id\r\n  console.log(\"orderid\"+orderid)\r\n  this.state.productlist.forEach(async(item)=>{\r\n    console.log(\"productitem\")\r\n    console.log(item)\r\n    try{\r\n      var productformdata = new FormData()\r\n      productformdata.append(\"order_id\",orderid.toString())\r\n      productformdata.append(\"description\",item.productName)\r\n      productformdata.append(\"quantity\",item.productQuantity)\r\n      productformdata.append(\"unit_price\",item.productPrice)\r\n      productformdata.append(\"inspection_status\",\"okay\")\r\n      productformdata.append(\"status\",\"Active\")\r\n      productformdata.append(\"category\",item.productCategory)\r\n\r\n      const response_products = await Axios.post(\"http://3.131.16.17/api/v1/ezzytrace/products/\",productformdata,\r\n      header)\r\n      // alert(response.data)\r\n      console.log(\"Product added Successfully\")\r\n      this.setState({error:<Success message=\" Order Status Updated\"/>})\r\n      M.toast({html: 'Product Addition Successfull',classes:\"white-text blue rounded\"});\r\n    }catch(error){\r\n      M.toast({html: 'Product Addition Failed',classes:\"white-text red rounded\"});\r\n        console.log(error)\r\n    }\r\n   \r\n  });\r\n  \r\n\r\n  try{\r\n    var email_subject = \"invoice_missing\"\r\n     const status = this.state.orderStatusSelected\r\n     switch(status){\r\n       case \"IM\":\r\n        email_subject =\"invoice_missing\";\r\n        break;\r\n       case \"WFC\":\r\n        email_subject =\"consolidation\";\r\n        break;\r\n  }\r\n    if (status===  \"IM\" || status === \"WFC\"){\r\n      const  emaildata= {\"type\" : email_subject,\r\n      \"ezz_id\" : this.state.customer_id,\r\n      \"order_id\" : orderid}\r\n\r\n\r\n      Axios({\r\n        method:'post',\r\n        url: 'http://3.131.16.17/api/v1/ezzytrace/status_printer',\r\n        data: {\r\n          \"order_id\": orderid\r\n        }\r\n      }).then(function(response){\r\n        console.log(response)\r\n        console.log(\"printer APi success\");\r\n      }).catch(function(response){\r\n        console.log(response)\r\n        console.log('printer API failed');\r\n      })\r\n\r\n      Axios({\r\n        method:'post',\r\n        url:'http://3.131.16.17/api/v1/ezzytrace/whatsapp_templates',\r\n        data: emaildata,\r\n      }).then(\r\n        function(response){ \r\n          console.log(response)\r\n          console.log(\"whatsapp sent done\");\r\n        }\r\n      ).catch(\r\n        function(response){ \r\n          console.log(response)\r\n          console.log(\"whatsapp sent Failure\");\r\n        }\r\n      )\r\n\r\n      const response = await Axios.post(\"http://3.131.16.17/api/v1/ezzytrace/send_email/\",emaildata,\r\n    header)\r\n    console.log(response)\r\n    M.toast({html: 'Email Sent to '+response.data[\"Email to\"],classes:\"white-text red rounded\"});\r\n    }\r\n   \r\n  }catch(error){\r\n\r\n    M.toast({html: 'Email Sending Failed to'+ this.state.customer_id ,classes:\"white-text red rounded\"});\r\n  }\r\n\r\n\r\n\r\n  this.setState({error:<Success message=\" New order foproduct items created\"/>})\r\n   M.toast({html: 'Order created successfully',classes:\"white-text orange rounded\"})\r\n  this.setState({error:\"\"})    \r\n}catch(err){\r\n     \r\n      M.toast({html: 'Please Try Again!',classes:\"white-text red rounded\"});\r\n      \r\n      console.log(err)\r\n      this.setState({error:<Error/>})\r\n          }\r\n\r\n\r\n\r\n\r\n  }else{\r\n\r\n\r\n    try{\r\n      let token =localStorage.getItem(\"token\")\r\n      const  header = {'Content-Type': 'application/json',\r\n      'Authorization':'Token '+token,\r\n  \r\n      }\r\n      var orderupdateForm = new FormData()\r\n      orderupdateForm.append(\"shipper_number\",this.state.shiper_order_number)\r\n      // orderupdateForm.append(\"billing_id\",\"2121\")\r\n      orderupdateForm.append(\"billing_type\",this.state.paymentTypeSelected)\r\n      orderupdateForm.append(\"order_date\",this.state.order_date)\r\n      orderupdateForm.append(\"received_date\",this.state.received_date)\r\n      orderupdateForm.append(\"inbound_tracking_number\",this.state.tracking_number)\r\n      orderupdateForm.append(\"weight\",this.state.weight)\r\n      orderupdateForm.append(\"length\",this.state.length)\r\n      orderupdateForm.append(\"breadth\",this.state.width)\r\n      orderupdateForm.append(\"height\",this.state.height)\r\n      // orderupdateForm.append(\"charge_type\",\"VAT\")\r\n      orderupdateForm.append(\"freight_charge\",this.state.fedex_charge)\r\n      orderupdateForm.append(\"actual_charge\",this.state.actual_charge)\r\n      orderupdateForm.append(\"current_status\",this.state.orderStatusSelected)\r\n      let urlforOrderStatusUpdate = `http://3.131.16.17/api/v1/ezzytrace/boxes_received/${this.state.ordernumber}/`\r\n      const response = await Axios.patch(urlforOrderStatusUpdate,orderupdateForm, header)\r\n\r\n      console.log(`order status update succesfully ${response.data}`)\r\n      this.setState({error:<Success message=\" Order Status Updated\"/>})\r\n      M.toast({html: 'Updated SUccessfull',classes:\"white-text orange rounded\"});\r\n    }catch(error){\r\n      M.toast({html: 'Updation Failed',classes:\"white-text red rounded\"});\r\n        console.log(error)\r\n        this.setState({error:<Error/>})\r\n    }\r\n\r\n  }\r\n\r\n}\r\n   addOrderToDB = async ()=>{\r\n              let token =localStorage.getItem(\"token\")\r\n              const  header = {'Content-Type': 'application/json',\r\n              'Authorization':'Token '+token,\r\n            \r\n              }\r\n            \r\n                  //@TODO: FOR FUTUREjust umcomment the code for merge ,discard and hold fucntionality \r\n     \r\n\r\n              // check whether there is any order which is in state of WAITING FOR CONSOLIDATION\r\n              // try {\r\n              //   let url_wfc_check = `http://3.131.16.17/api/v1/ezzytrace/boxes_received/?ezz_id=${this.state.customer_id}&current_status=WFC`\r\n              //   var  wfcResponse = await Axios.get(url_wfc_check,header)\r\n              //   console.log(`WFC Response ${wfcResponse.data}`)\r\n              //   if (wfcResponse.data.length >0){\r\n              //     console.log(wfcResponse.data[0].order_id)\r\n              //     this.setState({ordernumbermerge:wfcResponse.data[0].order_id})\r\n              //     var elems = document.getElementById('merge_order_model');\r\n              //     var instance = M.Modal.init(elems);\r\n              //     instance.open()\r\n\r\n              //     const orderid = Math.floor(1000 + Math.random() * 9000)\r\n              //     this.setState({ordernumber:orderid})\r\n\r\n              //   }else{\r\n                  this.createOrderNormal()\r\n                  var btn = document.getElementById('createorder')\r\n                  btn.click()\r\n                 // window.location.reload(false);\r\n              // this.props.refresh();\r\n              //   }\r\n                \r\n              // } catch (error) {\r\n              //   console.log(error)\r\n              // }\r\n\r\n\r\n\r\n            \r\n\r\n\r\n            \r\n\r\n\r\n\r\n  }\r\n\r\nrender(){\r\n  const opts={};\r\n   opts['readOnly'] = 'readOnly';\r\n  const catlist = this.state.product_category_options;\r\n  if (catlist.length >0){\r\n    var categoryList = catlist.map((item, i) => {\r\n      return (\r\n        <option className=\"black-text\" key={i} value={item.category_id}>{item.category_name}</option>\r\n      )\r\n    }, this);\r\n  }\r\n  \r\n\r\n    return(\r\n        <Container>\r\n{/* Edit product Table items */}\r\n<EditProduct ref=\"editproduct\" rowNumber={this.state.rowNumber}\r\nproductDetails={this.state.selectItemDetails}\r\n productcategory={this.state.product_edit_category}\r\n updateBtnClick={this.updateProduct}\r\n\r\n disablePrice= {this.state.orderStatusSelected ===\"IM\"} \r\n />\r\n\r\n\r\n\r\n\r\n        {/* Model for adding products STARTS here */}\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addProductModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n            <h4 className=\"center orange-text\"> Add Product </h4>\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"product_name\" id=\"product_name\" type=\"text\" value={this.state.product_name} onChange={this.handleFormChange} className=\"\" />\r\n                        <label htmlFor=\"product_name\" className=\"black-text\" >Product Name</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter a valid Product Name</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"product_price\" disabled={this.state.orderStatusSelected === \"IM\"} id=\"product_price\" min=\"0\" type=\"number\" value={this.state.product_price} onChange={this.handleFormChange} className=\"\" />\r\n                        <label htmlFor=\"product_price\" className=\"black-text\">Product Price</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter numbers</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"product_quantity\" id=\"product_quantity\" min=\"0\" type=\"number\" value={this.state.product_quantity} onChange={this.handleFormChange} className=\"\" />\r\n                        <label htmlFor=\"product_quantity\" className=\"black-text\">Quantity</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter number of products items</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n\r\n                  <Row>\r\n                    <Col>\r\n\r\n                      <div id=\"categroydiv\" className=\"input-field col s6 offset-s3 center\">\r\n                        {/* <p>Select Category</p> */}\r\n                        <select id='category_name_select' name=\"product_category\" className=\"browser-default\" onChange={this.handleFormChange}>\r\n                          <option value=\"\" disabled selected>Choose Category</option>\r\n\r\n                          {categoryList}\r\n\r\n                        </select>\r\n                        {/* <label>Select Category</label> */}\r\n\r\n                      </div>\r\n\r\n\r\n                    </Col>\r\n\r\n                  </Row>\r\n\r\n\r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\" >\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id=\"cancelItemAddBtn\" variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Cancel</Button>\r\n              <Button id=\"addItemBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addProductTolist}> Add</Button>\r\n\r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {/* Model for adding produts ENDS here */}\r\n\r\n      {/* Model for merge starts here */}\r\n    <div id=\"merge_order_model\" className=\"modal mergeordermodel modal-fixed-footer\">\r\n      <div className=\"modal-content\">\r\n        <br></br>\r\n      <h5 className=\"center orange-text\"> There is an order with status Waiting for Consolidation. \r\n                    <br></br>Do you want to merge this order with existing order?   </h5>\r\n                    \r\n                    <form>\r\n                    <Row>\r\n                      <Col>\r\n                      <p className=\"center\">\r\n            <label>\r\n                <input name=\"holdmergedorderstatus\" value=\"WFC\" type=\"checkbox\" \r\n                checked={this.state.holdmergedorderstatus ===\"WFC\"} onChange={this.handleMergeCheckbox}/>\r\n                <span className=\"red-text\">Put it on Hold</span>\r\n            </label>\r\n            </p>\r\n                      </Col>\r\n                    </Row>\r\n                    </form>\r\n        \r\n      </div>\r\n      <div className=\"modal-footer\" >\r\n    \r\n  <ButtonGroup className=\"mr-2\" aria-label=\"Merge group\">\r\n    <Button id=\"cancelMergeAddBtn\" variant=\"outline-secondary\" onClick={this.mergerOrderCancel} className=\"mr-4 btn  modal-close \"  >Don't Merge</Button> \r\n    <Button id =\"MergeBtn\" variant=\"outline-primary\" onClick={this.mergeOrder} className=\"mr-2 btn  modal-close\" > Merge</Button>\r\n\r\n  </ButtonGroup>\r\n \r\n    </div>\r\n    </div>\r\n        {/* Model for merge ends here */}\r\n\r\n            {/* OrderModel code starts here */}\r\n          \r\n            <OrderModal ref=\"ordermodel\" orders={this.state.pendingOrders}\r\n             onOrderSelection={ v => {this.setState({ordersSelectedInModal: v})\r\n              console.log(\"hey world\")  \r\n              console.log(v.order)\r\n              console.log(v.perordersdata[v.order])\r\n              if (v.selectedproductId.length < v.perordersdata[v.order].length){\r\n                 \r\n                  \r\n                  this.setState({createNewOrder:true})\r\n\r\n              }else{\r\n                this.setState({createNewOrder:false})\r\n              }\r\n              this.fillFormAutomatically(v.orderdetails) \r\n              for (let item in v.selectedproductId){\r\n                console.log(v.selectedproductId[item])\r\n                let product = v.orderid[parseInt(v.selectedproductId[item])]\r\n                console.log(`product orderid ${product}`)\r\n\r\n                // let totalproducts = this.state.productlist.length + 1\r\n        \r\n                let newitem = {id:product.id,productName:product.description,\r\n                productPrice:product.unit_price,productQuantity:product.quantity,\r\n                productCategory:product.category\r\n              }\r\n\r\n              const producttemp = this.state.productlist;\r\n              const isIDsame = (Productkey) => Productkey.id === product.id;\r\n          let index  = producttemp.findIndex(isIDsame)\r\n          if( this.state.productlist.length ===0 ){\r\n              console.log('index is working-------')\r\n            this.state.productlist.push(newitem)\r\n                  this.setState({productlist: this.state.productlist})\r\n                  \r\n                      }else if(index === -1 &&  this.state.productlist.length > 0){\r\n                        \r\n                        this.state.productlist.push(newitem)\r\n                  this.setState({productlist: this.state.productlist})\r\n                      }else if(index !== -1){\r\n                        M.toast({html: ' Product(s)  already in the table', classes:\"white-text red rounded\"})\r\n                      }\r\n\r\n                 // console.log(\"Product List\",this.state.productlist)\r\n                  \r\n\r\n        \r\n                  this.setState({productlisthtml:<ProductItemsList products={this.state.productlist}/>})\r\n              }\r\n\r\n\r\n              console.log(v.selectedproductId)\r\n\r\n             }}/>\r\n            {console.log(this.state.ordersSelectedInModal)}\r\n            {/* OrderModel code ends here */}\r\n\r\n\r\n<div className=\"row\">\r\n          <div className=\"col s3\">\r\n          <h4 className=\" orange-text\">Create Order</h4>\r\n          </div>\r\n       \r\n</div>\r\n                <Row>\r\n\r\n                       <Col xs={12}md={7} lg={7}>\r\n                    <div className=\"row\">\r\n    <form className=\"col s12\">\r\n      {this.state.error}\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s6\">\r\n          <input name=\"customer_id\" id=\"customer_id\" type=\"text\" className=\"autocomplete\"\r\n            value={this.state.customer_id} onChange={this.handleCustomerIDChange}\r\n          />\r\n          <label htmlFor=\"customer_id\">Enter Customer Id</label>\r\n            <span id=\"errCustomerNotAuthorized\" class=\"helper-text center yellow red-text \" \r\n                  data-error=\"wrong\" data-success=\"\" \r\n                  style= {{ fontSize: \"small\", display: \"none\", fontWeight: \"500\" }} >Customer Not Authorized</span>\r\n          <span className=\"helper-text\" data-error=\"wrong\" data-success=\"\">Customer Ezzid ex: Ezz000000</span>\r\n        </div>\r\n      \r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s6\">\r\n        \r\n          <input name=\"order_date\" id=\"order_date\" type=\"text\"  className=\"datepicker\" \r\n          value={this.state.order_date} onChange={this.handleFormChange}\r\n          />\r\n          \r\n          <label htmlFor=\"order_date\"><i className=\"material-icons right\">date_range</i>Order Date </label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" data-success=\"\">Select the date </span>\r\n        </div>\r\n        <div className=\"input-field col s6\">\r\n          <input name=\"received_date\" id=\"received_date\" type=\"text\" className=\"datepicker\"\r\n           value={this.state.received_date} onChange={this.handleFormChange}\r\n          />\r\n          <label htmlFor=\"received_date\"><i className=\"material-icons right\">date_range</i> Receive Date</label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" data-success=\"\">Select date, the order arrived at warehouse</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s6\">\r\n          <input name=\"tracking_number\" id=\"tracking_number\" type=\"text\" className=\"\"\r\n           value={this.state.tracking_number} onChange={this.handleFormChange}\r\n          />\r\n          <label htmlFor=\"tracking_number\">Enter Tracking Number</label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" data-success=\"\">Enter Tracking inbound Number</span>\r\n\r\n        </div>\r\n        <div className=\"input-field col s6\">\r\n          <input name=\"shiper_order_number\" id=\"shiper_order_number\" type=\"text\" className=\"\"\r\n           value={this.state.shiper_order_number} onChange={this.handleFormChange}\r\n          />\r\n          <label htmlFor=\"shiper_order_number\">Enter Shipper Number</label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" >Enter Shipper Order Number</span>\r\n        </div> \r\n\r\n      </div>\r\n      {\r\n          this.state.showSpinner\r\n            ? < div className=\"center\">\r\n          \r\n            <Spinner animation=\"grow\" variant=\"primary\" size=\"sm\" />\r\n            <Spinner animation=\"grow\" variant=\"success\" size=\"sm\" />\r\n            <Spinner animation=\"grow\" variant=\"warning\" size=\"sm\" />\r\n          </div>\r\n            : null\r\n        }\r\n      {this.state.orderStatusSelected !==\"YTA\" ?\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s4\">\r\n          <input name=\"weight\" id=\"weight\" min=\"0\" type=\"number\" className=\"\"\r\n           value={this.state.weight} onChange={this.handleFormChange}\r\n          />\r\n          <label htmlFor=\"weight\">Weight</label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" >Enter Weight in pounds</span>\r\n        </div>\r\n        <div className=\"input-field col s4\">\r\n          <input name=\"height\" id=\"height\" min=\"0\" type=\"number\" className=\"\"\r\n           value={this.state.height} onChange={this.handleFormChange}\r\n          />\r\n          <label htmlFor=\"height\">Height</label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" >Enter Height in inches</span>\r\n        </div>\r\n        <div className=\"input-field col s4\">\r\n          <input name=\"fedex_charge\" id=\"fedex_charge\" min=\"0\" type=\"number\" className=\"\"\r\n           value={this.state.fedex_charge} onChange={this.handleFormChange} {...opts} \r\n          />\r\n          <label htmlFor=\"fedex_charge\">Fedex Charge </label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" >Auto generated</span>\r\n        </div>\r\n      </div> : null}\r\n      {this.state.orderStatusSelected !==\"YTA\" ?\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s4\">\r\n          <input name=\"width\" id=\"width\" min=\"0\" type=\"number\" className=\"\"\r\n           value={this.state.width} onChange={this.handleFormChange}\r\n          />\r\n          <label htmlFor=\"width\">Width</label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" >Enter Width in inches</span>\r\n        </div>\r\n        <div className=\"input-field col s4\">\r\n          <input name=\"length\"  id=\"length\" min=\"0\" type=\"number\" className=\"\"\r\n           value={this.state.length} onChange={this.handleFormChange}\r\n          />\r\n          <label htmlFor=\"length\">Length</label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" >Enter Length in inches</span>\r\n        </div>\r\n        <div className=\"input-field col s4\">\r\n          <input placeholder=\"\" name=\"actual_charge\" id=\"actual_charge\" type=\"number\"  className=\"\"\r\n          value={this.state.actual_charge} onChange={this.handleFormChange} min=\"0\" \r\n          />\r\n          <label htmlFor=\"actual_charge\">Actual charges </label>\r\n          <span className=\"helper-text\" data-error=\"wrong\" >Auto generated</span>\r\n          <span className=\"helper-text green-text\" >{this.state.Weight_type}</span>\r\n        </div>\r\n      </div> : null}\r\n      <div className=\"row\">\r\n        <div className=\"col s6\">\r\n            {/* Order Status Radio Buttons */}\r\n                <h4>Order Status</h4>\r\n                <p>\r\n            <label>\r\n                <input name=\"orderStatusSelected\" value=\"IM\" type=\"radio\" \r\n                checked={this.state.orderStatusSelected ===\"IM\"} onChange={this.handleFormChange}/>\r\n                <span>Invoice Missing</span>\r\n            </label>\r\n            </p>\r\n            <p>\r\n            <label>\r\n                <input name=\"orderStatusSelected\" value=\"YTA\" type=\"radio\" \r\n                 checked={this.state.orderStatusSelected ===\"YTA\"} onChange={this.handleFormChange}/>\r\n                <span>Order Yet to Arrive</span>\r\n            </label>\r\n            </p>\r\n            <p>\r\n            <label>\r\n                <input name=\"orderStatusSelected\" value =\"RTM\" type=\"radio\" \r\n                 checked={this.state.orderStatusSelected ===\"RTM\"} onChange={this.handleFormChange}\r\n                />\r\n                <span>Ready to Manifest</span>\r\n            </label>\r\n            </p>\r\n            <p>\r\n            <label>\r\n                <input name=\"orderStatusSelected\" value =\"WFC\" type=\"radio\" \r\n                 checked={this.state.orderStatusSelected ===\"WFC\"} onChange={this.handleFormChange}\r\n                />\r\n                <span>Wait for Consolidation</span>\r\n            </label>\r\n            </p>\r\n\r\n\r\n            <p>\r\n            <label>\r\n                <input name=\"orderStatusSelected\" value =\"UID\" type=\"radio\" \r\n                 checked={this.state.orderStatusSelected ===\"UID\"} onChange={this.handleFormChange}\r\n                />\r\n                <span>Box UnIdentified</span>\r\n            </label>\r\n            </p>\r\n    \r\n        </div>\r\n        <div className=\"col s6\">\r\n            {/* Payment Tyoe Radio Buttons */}\r\n            <h4>Payment Type</h4>\r\n                <p>\r\n            <label>\r\n                <input name=\"paymentTypeSelected\" value=\"cash\" type=\"radio\"  \r\n                  checked={this.state.paymentTypeSelected ===\"cash\"} onChange={this.handleFormChange}\r\n                />\r\n                <span>Cash</span>\r\n            </label>\r\n            </p>\r\n            <p>\r\n            <label>\r\n                <input name=\"paymentTypeSelected\" value=\"card\" type=\"radio\" \r\n                  checked={this.state.paymentTypeSelected ===\"card\"} onChange={this.handleFormChange} />\r\n                <span>Card</span>\r\n            </label>\r\n            </p>\r\n            {/* {this.state.orderStatusSelected} */}\r\n            {/* {this.state.paymentTypeSelected} */}\r\n            {/* {this.state.order_date} */}\r\n            {/* {this.state.received_date} */}\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  \r\n  </div>\r\n                    </Col>\r\n                    {/* right side column starts here */}\r\n                    <Col xs={12}md={5} lg={5}>\r\n\r\n\r\n                            <CustomerDetailCard \r\n                            info = {this.state.customer_selected_data}\r\n                             />\r\n\r\n                        <Row>\r\n                        <Col>\r\n                        <h5>Product Details</h5>\r\n                        </Col>\r\n                        <Col>\r\n                        <Nav className=\"right\">\r\n            <Nav.Link className=\"red-text modal-trigger \"  href=\"#addProductModal\">\r\n                Add<Image className=\"red-text ml-1\" src=\"assets/images/plus-circle-red.svg\"/></Nav.Link>\r\n        </Nav>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* product card to be shown here */}\r\n                    {/* <div className=\"productlistDiv \">{this.state.productlisthtml}</div> */}\r\n                    <div className=\"productlistDiv \"><ProductItemsList products={this.state.productlist} rowclick={this.handletableClick}/></div>\r\n                    <div className=\"right\"><b>Total Price: </b>$\r\n                    {\r\n                    ( ()=>{\r\n                      var totalprice =0;\r\n                      this.state.productlist.forEach(function(item){\r\n                        totalprice = totalprice + parseInt(item.productPrice ) *parseInt(item.productQuantity ) \r\n                      })\r\n                      return totalprice\r\n                    })()\r\n                      \r\n                      }\r\n                      \r\n                      {/* this.state.productlist */}\r\n                       </div>\r\n                    {/* <ButtonGroup aria-label=\"create order buttons\" className=\"right\">\r\n                        <Button id=\"cancelOrderBtn\"onClick={this.cancelOrder} variant=\"secondary\"  className=\"mr-2 \">Cancel</Button>\r\n                        <Button id=\"saveOrderBtn\" onClick={this.addOrderToDB} variant=\"primary\"  >Create Order</Button>\r\n                        \r\n                    </ButtonGroup> */}\r\n                    </Col>\r\n\r\n                    {/* right side columns ends here */}\r\n      \r\n                </Row> \r\n\r\n            <Row>\r\n              <Col>\r\n              <div className=\"center\">\r\n              <ButtonGroup aria-label=\"create order buttons\" className=\"\">\r\n                      <Button id=\"cancelOrderBtn\"onClick={this.cancelOrder} variant=\"secondary\"  className=\"\">Cancel</Button>\r\n                        <Button className=\"ml-5 \" id=\"saveOrderBtn\" onClick={this.addOrderToDB} variant=\"primary\"  >Create Order</Button>\r\n                        \r\n                    </ButtonGroup>\r\n              </div>\r\n              </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default CreateOrder;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\Dashboard.js",["196"],"import React,{Component} from 'react';\r\nimport {Row, Col,Card,Container} from 'react-bootstrap'\r\n\r\nclass Dashboard extends Component{\r\n    constructor(props){\r\n        super (props);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n             <Container>\r\n            <Row>\r\n              <Col>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Text className=\"center\">\r\n                      <h1>34</h1>\r\n                      <p>Total Orders</p>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Text className=\"center\">\r\n                      <h1>24</h1>\r\n                      <p>Ready to Ship</p>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Text className=\"center\">\r\n                      <h1>14</h1>\r\n                      <p>Waiting for Consolidation</p>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Text className=\"center dashboardDummy\">\r\n                      <h4>Graph</h4>\r\n                      <p></p>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Text className=\"center dashboardDummy\">\r\n                      <h4>Operator Status</h4>\r\n                      \r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n          \r\n            </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\OrderList.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\CustomSettlement.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232"],"import React from 'react'\r\nimport { base_url } from '../../globalConstants'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport { Row, Col, InputGroup, FormControl, Table, Spinner, Form, ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport { ButtonGroup, Button, ModalHeader, ModalBody, ModalFooter, Modal  } from 'reactstrap';\r\nimport M from \"materialize-css\";\r\nimport { Print } from \"@material-ui/icons\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport \"./temp.css\";\r\nimport Axios from \"axios\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function CustomSettlement() {\r\n\r\n  const [shippedData, setShippedData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [boxId, setBoxId] = useState('');\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [captureAmountValue, setCaptureAmountValue] = useState('')\r\n    \r\n  const [capture, setCapture] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n    setOpen(!open)\r\n    var elem = document.getElementById(`captureAmount${boxId}`)\r\n    console.log(\"ELEM\", `captureAmount${boxId}`)\r\n    // elem.checked = false\r\n  }\r\n\r\n  const viewShippedDetails = (tempBoxId) => {\r\n    setBoxId(tempBoxId)\r\n    toggle()\r\n  }\r\n\r\n  //<<NOT IN USE\r\n  const calculateTime = (tempTime) => {\r\n    var calculatedTime\r\n    // calculatedTime = ` ${days} d, ${hours}, h, ${mins} m`\r\n    // console.log(temp_time)\r\n    // console.log(calculatedTime)\r\n    // return temp_time\r\n  }\r\n  //NOT IN USE>>\r\n\r\n  const timeLeft = (shipped_data) => {\r\n    var tempTime = {}\r\n    var timeLeft\r\n    \r\n    // console.log(shipped_data)\r\n    shipped_data.filter(key => !key.custom_charge_transaction_id && key.box_details )\r\n                .filter(filterkey1 => filterkey1.box_details.box_status === \"Shipped\"  )\r\n                .map( filterkey => {\r\n                  if (filterkey.onhold_transactions) {\r\n                    tempTime[filterkey.box_id] = filterkey.onhold_transactions.time_left\r\n                    timeLeft = filterkey.onhold_transactions.time_left * 86400\r\n                    if (timeLeft <= 2.592e+6 || timeLeft > 1.728e+6)\r\n                      // console.log(`rowBoxId${key.box_id}`)\r\n                      document.getElementById(`rowBoxId${filterkey.box_id}`).style.backgroundColor = \"#ffa500e0\"\r\n                    if (timeLeft == 1.728e+6 || timeLeft > 864000)\r\n                      // console.log(`rowBoxId${key.box_id}`)\r\n                      document.getElementById(`rowBoxId${filterkey.box_id}`).style.backgroundColor = \"#ffff00cc\"\r\n                    if (timeLeft <= 864000)\r\n                      // console.log(`rowBoxId${key.box_id}`)\r\n                      document.getElementById(`rowBoxId${filterkey.box_id}`).style.backgroundColor = \"#9acd32d1\"\r\n                  }\r\n                  else {\r\n                    tempTime[filterkey.box_id] = \"grey\"\r\n                    document.getElementById(`rowBoxId${filterkey.box_id}`).style.backgroundColor = \"#0000000d\"\r\n                  }\r\n                })\r\n    setShowSpinner(false)\r\n    // console.log(tempTime)\r\n  }\r\n\r\n  const boxDetails = (event) => {\r\n    var checkFreightNull = shippedData[event.target.value].custom_charge_transaction_id\r\n    setBoxId(event.target.name);\r\n    console.log(\"Selected Box ID: \", boxId);   \r\n    console.log(\"KEYKEY: \", event.target.value);   \r\n    console.log(\"Value at index: \", checkFreightNull ); \r\n    console.log(\"Capture: \", capture) \r\n    if(checkFreightNull) {\r\n      setCapture(true)\r\n    }else{\r\n      setCapture(false)\r\n    }\r\n    console.log(\"Capture: \", capture) \r\n    toggle()\r\n  }\r\n\r\n  const captureValue = (event) => {\r\n    var tempAmount = event.target.value\r\n    setCaptureAmountValue(tempAmount)\r\n    console.log(captureAmountValue)\r\n  }\r\n  \r\n  const captureAmount = async () => {\r\n    // alert(\"done\")\r\n\r\n    // var tempBoxId = boxId\r\n    console.log(\"BOX ID\",boxId);\r\n    // console.log(\"BOX ID from variable\",tempBoxId);\r\n    let capture_amount = captureAmountValue\r\n    console.log(capture_amount);\r\n\r\n    let token = localStorage.getItem(\"token\")\r\n    let header = {\r\n      'Content-Type': 'multipart/form-data',\r\n      'Authorization': 'Token ' + token,\r\n\r\n    }\r\n    var config = {\r\n      headers: { 'Content-Type': 'multipart/form-data', 'Authorization': 'Token ' + token },\r\n\r\n    };\r\n\r\n    try {\r\n\r\n      var captureAmountData = new FormData()\r\n      captureAmountData.append(\"box_id\", boxId)\r\n      captureAmountData.append(\"amount\", capture_amount)\r\n\r\n      let captureAmounturl = base_url+`capture_amount`\r\n\r\n      const captureAmount_response = await Axios.post(captureAmounturl, captureAmountData, config)\r\n      // console.log(captureAmount_response.data)\r\n      M.toast({\r\n        html: 'Captured amount $' + capture_amount + ' for BoxID: ' + boxId , classes: \"white-text green rounded\"\r\n      })\r\n\r\n      toggle()\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.log(error.response)\r\n      console.log(error.response.data)\r\n      var tempErrorCode = error.response.status\r\n      if( tempErrorCode === 403 || tempErrorCode === 404 || tempErrorCode === 408 ){\r\n        M.toast({ html: error.response.data.Error, classes: \"white-text red rounded\" });\r\n      }else if( tempErrorCode === 410  ){\r\n        M.toast({ html: error.response.data.Message, classes: \"white-text red rounded\" });\r\n        M.toast({ html: error.response.data.Description, classes: \"white-text red rounded\" });\r\n      }else {\r\n        M.toast({ html: 'Failed to Capture Amount', classes: \"white-text orange rounded\" });\r\n        console.log(error.response.data.statusText)        \r\n        M.toast({ html: error.response.data.statusText, classes: \"white-text red rounded\" });\r\n      }\r\n    }\r\n\r\n  } \r\n\r\n  const fetchDetails = async () => {\r\n    setShowSpinner(true)\r\n    const response = await Axios.get(base_url+`custom_settlement_details`)\r\n    const { data } = response;\r\n    // console.log(data);\r\n    setShowSpinner(false)\r\n    setShippedData(data);\r\n    timeLeft(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchDetails();\r\n  }, [])\r\n\r\n  M.AutoInit();\r\n\r\n  return (\r\n    <div style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\r\n      {\r\n        showSpinner\r\n          ?\r\n          < div className=\"center\">\r\n\r\n            <Spinner animation=\"grow\" variant=\"primary\" size=\"sm\" />\r\n            <Spinner animation=\"grow\" variant=\"success\" size=\"sm\" />\r\n            <Spinner animation=\"grow\" variant=\"warning\" size=\"sm\" />\r\n          </div>\r\n          :\r\n          null\r\n      }\r\n      <Row >\r\n        <Col>\r\n          <h3 className=\"orange-text\">Custom Settlement</h3>\r\n        </Col>\r\n        <Col xs={5}>\r\n\r\n        </Col>\r\n        <Col>\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroup-sizing-lg\"><SearchIcon /></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col >\r\n          <Table striped bordered hover size=\"lg\">\r\n            <thead>\r\n              <tr style = {{ backgroundColor: \"dimgray\", color: \"white\" }}>\r\n                <th>S.No.</th>\r\n                <th>Box Id</th>\r\n                <th>Customer Id</th>\r\n                <th>Order Id</th>\r\n                <th>Country</th>\r\n                <th>Shipped on</th>\r\n                <th>Outbound No.</th>\r\n                <th>Time Left</th>\r\n                <th>Status</th>\r\n                <th>Capture</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                shippedData.filter(key => (!key.custom_charge_transaction_id && key.box_details ))\r\n                           .filter(filterkey1 => filterkey1.box_details.box_status === \"Shipped\"  ) \r\n                           .map((filterkey,index) => (\r\n                             <tr key={filterkey.id} id={`rowBoxId${filterkey.box_id}`} >\r\n                               <th scope=\"row\" >{index + 1}</th>\r\n                               <td>{filterkey.box_id}</td>\r\n                               <td>\r\n                                 {\r\n                                   filterkey.customer_details !== null\r\n                                     ? filterkey.customer_details.ezz_id\r\n                                     : \"\"\r\n                                 }\r\n                               </td>\r\n                               <td>\r\n                                 {\r\n                                   filterkey.orders.length > 0\r\n                                     ? filterkey.orders[0].order_id\r\n                                     : \"\"\r\n                                 }\r\n                               </td>\r\n                               {/* <td></td> */}\r\n                               <td>\r\n                                 {\r\n                                   filterkey.customer_details !== null\r\n                                     ? filterkey.customer_details.country\r\n                                     : \"\"\r\n                                 }\r\n                               </td>\r\n                               <td>{filterkey.date_created.split('T')[0]} <br /> {filterkey.date_created.split('T')[1].split('.')[0]}</td>\r\n                               <td>\r\n                                 {\r\n                                   filterkey.box_details\r\n                                     ? filterkey.box_details.outbound_tracking_number\r\n                                     : \"-\"\r\n                                 }\r\n                               </td>\r\n                               <td>\r\n                                 {\r\n                                   filterkey.onhold_transactions\r\n                                     ?\r\n                                     <> {30 - parseInt(Math.round(filterkey.onhold_transactions.time_left))} Days </>\r\n                                     //  calculateTime( filterkey.onhold_transactions.time_left ) \r\n                                     :\r\n                                     \"n/a\"\r\n                                 }\r\n                               </td>\r\n                               <td>\r\n                                 { filterkey.box_details.box_status }\r\n                               </td>\r\n                               <td>\r\n                                 <span title=\"Capture Amount\">\r\n                                   <InfoIcon\r\n                                     style={{ cursor: \"pointer\" }}\r\n                                     onClick={() => viewShippedDetails(filterkey.box_id)} />\r\n                                 </span>\r\n                               </td>\r\n                               {/* <td><label>\r\n                      <input \r\n                      type=\"checkbox\" \r\n                      id={ `captureAmount${filterkey.box_id}` } \r\n                      name={filterkey.box_id} value={index} \r\n                      onChange={boxDetails} />\r\n                      <span className=\"orange-text\"></span>\r\n                    </label></td> */}\r\n                             </tr>\r\n                ))\r\n              }\r\n\r\n            </tbody>\r\n          </Table>\r\n          \r\n          <Modal id=\"captureAmountModal\" className = \"captureAmountModal\" size=\"lg\" isOpen={modal} toggle={toggle} >\r\n            <ModalBody id=\"captureAmountModalBody\" className = \"captureAmountModalBody\" >\r\n              <h4 className=\"center orange-text\">Box Details\r\n                <span className=\"black-text right\" style= {{ fontSize: \"medium\", padding: \"1%\" }} > Box Id: \r\n                  <span className = \"green-text\"> { boxId }</span>\r\n                </span>\r\n              </h4><br/>\r\n              <div>\r\n                <Table >\r\n                {\r\n                  shippedData.filter(key=>key.box_id==boxId).map(filterkey=>(\r\n                    <>\r\n                    <tbody>\r\n                        <tr >\r\n                          <th scope=\"row\" style={{ width: \"50%\" }} >Customer Id</th>\r\n                          <td style={{ width: \"1%\" }} >:</td>\r\n                          <td>\r\n                            {\r\n                              filterkey.customer_details\r\n                              ?filterkey.customer_details.ezz_id\r\n                              :\"\"\r\n                            }\r\n                          </td>\r\n                        </tr>\r\n                        <tr >\r\n                          <th >Customer Name</th>\r\n                          <td>:</td>\r\n                          <td>\r\n                            {\r\n                              filterkey.customer_details\r\n                              ?filterkey.customer_details.customer_name\r\n                              :\"\"\r\n                            }\r\n                          </td>\r\n                        </tr>\r\n                        <tr >\r\n                          <th >Outbound Tracking No.</th>\r\n                          <td>:</td>\r\n                          <td>\r\n                            <span>\r\n                              {\r\n                                filterkey.box_details\r\n                                  ? filterkey.box_details.outbound_tracking_number\r\n                                  : \"-\"\r\n                              }\r\n                              {/* {filterkey.box_details.outbound_tracking_number} */}\r\n                            </span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr >\r\n                          <th >Billing Id</th>\r\n                          <td>:</td>\r\n                          <td><span>{\r\n                                filterkey.box_details\r\n                                  ? filterkey.box_details.billing_id\r\n                                  : \"-\"\r\n                              }</span></td>\r\n                        </tr>\r\n                        <tr >\r\n                          <th >Promotion Applied</th>\r\n                          <td>:</td>\r\n                          <td><span>-----</span></td>\r\n                        </tr>\r\n                        <tr >\r\n                          <th >Discount Applied</th>\r\n                          <td>:</td>\r\n                          <td><span>-----</span></td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </>                      \r\n                  ))\r\n                }                \r\n                </Table><br/>\r\n\r\n                <table className=\"table table-hover\" id=\"\" >\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"row\" >Sr. No.</th>\r\n                      <th scope=\"row\" >Order No.</th>\r\n                      <th scope=\"row\" >Inbound Tracking No.</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      shippedData.filter(key => key.box_id == boxId).map(filterkey => {\r\n                        if (filterkey.orders.length > 0) {\r\n                          return(\r\n                            filterkey.orders.map((element, index) => (\r\n                            <tr>\r\n                              <td>{index + 1}</td>\r\n                              <td>{element.order_id}</td>\r\n                              <td>{element.inbound_tracking_number}</td>\r\n                            </tr>\r\n                          ))\r\n                          )                          \r\n                        }\r\n                        else {\r\n                          return <tr><td></td></tr>\r\n                        }\r\n                      })\r\n                    }\r\n                  </tbody>\r\n                  </table><br/>\r\n                  \r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Description</th>\r\n                        <th>Charge amount</th>\r\n                        <th>Charged on</th>\r\n                        <th>Invoice No.</th>\r\n                        <th>Transaction No.</th>\r\n                      </tr>\r\n                    </thead>\r\n                  {\r\n                    shippedData.filter(key => key.box_id == boxId).map(filterkey => (\r\n                      <tbody>\r\n                        <tr>\r\n                          <td style = {{ width:\"30%\" }}>Shipment Charges</td>\r\n                          <td>{filterkey.freight_charge_transaction_amount }</td>\r\n                          <td>{filterkey.date_created.split('T')[0]} <br/> { filterkey.date_created.split('T')[1].split('.')[0] }</td>\r\n                          <td><i>INV---</i></td>\r\n                          <td>{filterkey.freight_charge_transaction_id}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>CustomDuty Charge on hold</td>\r\n\r\n                            {\r\n                              filterkey.onhold_transactions\r\n                              ?\r\n                               <>\r\n                                  <td>{filterkey.onhold_transactions.amount}</td>\r\n                                  <td>\r\n                                      {filterkey.onhold_transactions.date_created.split('T')[0]}\r\n                                      <br />\r\n                                      {filterkey.onhold_transactions.date_created.split('T')[1].split('.')[0]}                                   \r\n                                  </td>\r\n                                  <td>INV---</td>\r\n                                  <td>{filterkey.onhold_transactions.transaction_id}</td>\r\n                               </>                              \r\n                              :\r\n                                <>\r\n                                 <td>null</td>\r\n                                 <td>null</td>\r\n                                 <td>null</td>\r\n                                 <td>null</td>\r\n                                </>\r\n                            }\r\n                        </tr>\r\n                        <tr >\r\n                          <td>Capture Amount</td>\r\n                          {\r\n                            filterkey.custom_charge_transaction_id\r\n                            ?<> \r\n                              {\r\n                                  <>\r\n                                    <td>{filterkey.custom_charge_transaction_amount}</td>\r\n                                    <td>\r\n                                        {filterkey.custom_charge_date.split('T')[0]}\r\n                                        <br />\r\n                                        {filterkey.custom_charge_date.split('T')[1].split('.')[0]}\r\n                                    </td>\r\n                                    <td>INV---</td>\r\n                                    <td>{filterkey.custom_charge_transaction_id}</td>\r\n                                  </>\r\n                              }\r\n                             </>\r\n                            :<>\r\n                              {\r\n                                <>\r\n                                  <td colSpan=\"2\" >\r\n                                    <form>\r\n                                      <input type=\"number\"\r\n                                        placeholder=\"  Enter amount to be captured...\"\r\n                                        value={captureAmountValue}\r\n                                        onChange={captureValue}\r\n                                        required />\r\n                                    </form>\r\n                                  </td>\r\n                                  <td></td>\r\n                                  <td></td>\r\n                                </>                                  \r\n                              }\r\n                              </>\r\n                          }\r\n                        </tr>\r\n                      </tbody>\r\n                    ))\r\n                  }                      \r\n                  </table><br/>\r\n              </div>\r\n              <div className=\"right\">\r\n              {\r\n                capture\r\n                ?<Button color=\"primary\" type=\"submit\" onClick={toggle} > OK </Button>\r\n                : <Button color=\"primary\" type=\"submit\" onClick={ ()=> captureAmount()}>OK</Button>\r\n              }            \r\n              {' '}     \r\n              <Button color=\"danger\" onClick={toggle} style={{ marginLeft: \"5px\" }}>Cancel</Button>\r\n              </div>\r\n              \r\n            </ModalBody>          \r\n          </Modal>\r\n        </Col>\r\n      </Row>              \r\n\r\n      <div id=\"tempModal\" className=\"modal tempModal  modal-fixed-footer\">\r\n        <div className=\"modal-content \">\r\n\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\Shipped.js",["233","234","235","236","237","238","239","240","241","242","243","244","245"],"import React from 'react'\r\nimport { base_url } from '../../globalConstants'\r\nimport { useState, useEffect, useContext} from 'react'\r\nimport { Row, Col, InputGroup, FormControl, Table, Spinner, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport M from \"materialize-css\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport \"./temp.css\";\r\nimport Axios from \"axios\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default function Shipped() {\r\n\r\n    const [shippedData, setShippedData] = useState([]);  \r\n    const [open, setOpen] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const [boxId, setBoxId] = useState('')\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n    \r\n    const toggle = () => setModal(!modal);\r\n    \r\n    const viewShippedDetails = (tempBoxId) => {\r\n      // alert(tempBoxId)\r\n      setBoxId(tempBoxId)\r\n      toggle()\r\n    }\r\n\r\n    const fetchDetails = async () => {\r\n      setShowSpinner(true)\r\n      \r\n      // let url = 'http://3.131.16.17/api/v1/ezzytrace/custom_settlement_details'\r\n      let url = base_url+'custom_settlement_details'\r\n      \r\n      const response = await Axios.get(url)\r\n      // console.log(response);\r\n      const { data } = response \r\n      // console.log(data);\r\n      console.log(base_url);\r\n      setShowSpinner(false)\r\n      setShippedData(data);\r\n    }\r\n    \r\n    useEffect(() => {\r\n      fetchDetails();\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\r\n        {\r\n          showSpinner\r\n            ?\r\n            < div className=\"center\">\r\n\r\n              <Spinner animation=\"grow\" variant=\"primary\" size=\"sm\" />\r\n              <Spinner animation=\"grow\" variant=\"success\" size=\"sm\" />\r\n              <Spinner animation=\"grow\" variant=\"warning\" size=\"sm\" />\r\n            </div>\r\n            :\r\n            null\r\n        }\r\n      <Row >\r\n        <Col>\r\n          <h3 className=\"orange-text\">Shipped</h3>\r\n        </Col>\r\n        <Col xs={5}>\r\n\r\n        </Col>\r\n        <Col>\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroup-sizing-lg\"><SearchIcon/></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col >\r\n          <Table bordered hover size=\"lg\">\r\n            <thead>\r\n              <tr style = {{ backgroundColor: \"#676760\", color: \"white\"  }} >\r\n                <th>S.No.</th>\r\n                <th>Box Id</th>\r\n                <th>Customer Id</th>\r\n                <th>Order Id</th>\r\n                <th>Country</th>\r\n                <th>Shipped on</th>\r\n                <th>Outbound No.</th>\r\n                <th>Status</th>\r\n                <th>Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                shippedData.filter(key => key.custom_charge_transaction_id).map((filterkey, index) => (\r\n                  <tr key={filterkey.id}>\r\n                      <th scope = \"row\">{index + 1}</th>\r\n                      <td>{filterkey.box_id}</td>\r\n                      <td>\r\n                        {\r\n                          filterkey.customer_details !== null\r\n                            ? filterkey.customer_details.ezz_id\r\n                            : \"\"\r\n                        }\r\n                      </td>\r\n                      <td>\r\n                        {\r\n                          filterkey.orders.length > 0\r\n                          ?filterkey.orders.map( element => (\r\n                            <> {element.order_id} <br/></> \r\n                          ))\r\n                          :\"\"\r\n                        }\r\n                        {/* {filterkey.orders[0].order_id} */}\r\n                      </td>\r\n                      <td>\r\n                        {\r\n                          filterkey.customer_details !== null\r\n                          ? filterkey.customer_details.country\r\n                          : \"\"\r\n                        }\r\n                      </td>\r\n                      <td>\r\n                        {filterkey.date_created.split('T')[0]}\r\n                        <br/>\r\n                        {filterkey.date_created.split('T')[1].split('.')[0]}\r\n                      </td>\r\n                      <td>\r\n                      {\r\n                        filterkey.box_details\r\n                        ?filterkey.box_details.outbound_tracking_number\r\n                        :\"-\" \r\n                      }\r\n                      </td>\r\n                      <td>SHIPPED</td>\r\n                      <td>\r\n                        <span title = \"View Details\">\r\n                          <InfoIcon \r\n                            style={{ cursor: \"pointer\" }}                              \r\n                            onClick = { () => viewShippedDetails(filterkey.box_id) } />\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                ))               \r\n              }\r\n            </tbody>\r\n          </Table>\r\n          <Modal id=\"captureAmountModal\" className = \"captureAmountModal\" size=\"lg\" isOpen={modal} toggle={toggle} >\r\n            <ModalBody id=\"captureAmountModalBody\" className = \"captureAmountModalBody\" >\r\n              <h4 className=\"center orange-text\">Box Details\r\n                <span className=\"black-text right\" style= {{ fontSize: \"medium\", padding: \"1%\" }} > Box Id: \r\n                  <span className = \"green-text\"> { boxId }</span>\r\n                </span>\r\n              </h4><br/>\r\n              <div>\r\n\r\n                <Table >\r\n                    {\r\n                      shippedData.filter(key => key.box_id == boxId).map(filterkey => (\r\n                        <tbody>\r\n                          <tr>\r\n                            <th scope=\"row\" style={{ width: \"50%\" }} >Customer Id</th>\r\n                            <td style={{ width: \"1%\" }} >:</td>                           \r\n                            <td>\r\n                            {\r\n                              filterkey.customer_details\r\n                              ?filterkey.customer_details.ezz_id\r\n                              :\"\"\r\n                            }\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Customer Name</th>\r\n                            <td>:</td>\r\n                            <td>\r\n                            {\r\n                              filterkey.customer_details\r\n                              ?filterkey.customer_details.customer_name\r\n                              :\"\"\r\n                            }\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Inbound Tracking No.</th>\r\n                            <td>:</td>\r\n                            <td>\r\n                                {\r\n                                  filterkey.orders.length > 0\r\n                                    ? filterkey.orders[0].order_id\r\n                                    : \"\"\r\n                                }\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Outbound Tracking No.</th>\r\n                            <td>:</td>\r\n                            <td>\r\n                              {\r\n                                filterkey.box_details\r\n                                  ? filterkey.box_details.outbound_tracking_number\r\n                                  : \"-\"\r\n                              }\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Billing Id</th>\r\n                            <td>:</td>\r\n                            <td>\r\n                              {\r\n                                filterkey.box_details\r\n                                  ? filterkey.box_details.billing_id\r\n                                  : \"-\"\r\n                              }\r\n                              {/* { filterkey.box_details.billing_id } */}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Promotion Applied</th>\r\n                            <td>:</td>\r\n                            <td>-----</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Discount Applied</th>\r\n                            <td>:</td>\r\n                            <td>-----</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      ))\r\n                    }\r\n                </Table><br/>\r\n                \r\n                <table className=\"table table-hover\" id=\"\" >\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Sr. No.</th>\r\n                      <th>Order No.</th>\r\n                      <th>Inbound Tracking No.</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      {\r\n                        shippedData.filter(key => key.box_id == boxId).map(filterkey => {\r\n                          if (filterkey.orders.length > 0) {\r\n                            filterkey.orders.map((element, index) => (\r\n                              <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{element.order_id}</td>\r\n                                <td>{element.inbound_tracking_number}</td>\r\n                              </tr>\r\n                            ))\r\n                          }\r\n                          else {\r\n                            return <tr><td></td></tr>\r\n                          }\r\n                        })\r\n                      }\r\n                  </tbody>\r\n                </table><br/>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Description</th>\r\n                      <th>Charged amount</th>\r\n                      <th>Charged on</th>\r\n                      <th>Invoice No.</th>\r\n                      <th>Transaction No.</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {                      \r\n                      shippedData.filter(key => key.box_id == boxId).map( filterkey => (\r\n                        <>\r\n                          <tr>\r\n                            <td>Shipment Charges</td>\r\n                            <td>{ filterkey.freight_charge_transaction_amount }</td>\r\n                            <td>\r\n                              { filterkey.date_created.split('T')[0] }\r\n                                <br/>\r\n                              { filterkey.date_created.split('T')[1].split('.')[0] }\r\n                            </td>\r\n                            <td>INV----</td>\r\n                            <td>{ filterkey.freight_charge_transaction_id }</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>CustomDuty Charge on hold</td>\r\n                            <td>{ filterkey.onhold_transactions.amount }</td>\r\n                            <td>\r\n                              { filterkey.onhold_transactions.date_created.split('T')[0] }\r\n                                <br/>\r\n                              { filterkey.onhold_transactions.date_created.split('T')[1].split('.')[0] }\r\n                            </td>\r\n                            <td>INV----</td>\r\n                            <td>{ filterkey.onhold_transactions.transaction_id }</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>Captured Amount</td>\r\n                            <td>{ filterkey.custom_charge_transaction_amount }</td>\r\n                            <td>\r\n                              { filterkey.custom_charge_date.split('T')[0] }\r\n                                <br/>\r\n                              { filterkey.custom_charge_date.split('T')[1].split('.')[0] }\r\n                            </td>\r\n                            <td>INV----</td>\r\n                            <td>{ filterkey.custom_charge_transaction_id }</td>\r\n                          </tr>\r\n                        </>                        \r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </table><br/>                \r\n              </div>\r\n              <div className=\"right\">\r\n                <Button color=\"danger\" onClick={toggle} > Close </Button>\r\n                {/* <Button color=\"danger\" onClick={toggle} style={{ marginLeft: \"5px\" }}>Cancel</Button> */}\r\n              </div>  \r\n            </ModalBody>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n    )\r\n}\r\n","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\BoxList.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\globalConstants.js",[],"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\ReadyToShip.js",["263","264","265"],"import React, {Component,Fragment,useContext} from 'react';\r\nimport {Card,Button,Nav,Image,Row,Col,Container,Accordion} from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\n// import CountryFrag from './Country';\r\n import './readytoship.css';\r\n\r\n\r\nclass ReadyShip extends Component{\r\n    constructor(props){\r\n        super (props);\r\n        //  this.state=({country:<CountryFrag countrytable = {this.props.countrydata}/>})\r\n      // this.fetchCountryData =  this.fetchCountryData.bind(this)\r\n      console.log(this.props.orderdata);\r\n      this.state=({\r\n        orderslist: this.props.orderdata,\r\n        ordershiplist:[],\r\n        })\r\n\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n      // Auto initialize all the things!\r\n      M.AutoInit();\r\n  }\r\n\r\n  onChangeSelectManifest = (event)=>{\r\n    console.log(event.target.checked, event.target.value);\r\n    if (event.target.checked){\r\n      let mani = this.state.ordershiplist.push(event.target.value)\r\n      this.setState({ordershiplist:this.state.ordershiplist})\r\n      console.log(\"Selected \"+this.state.ordershiplist)\r\n    }else{ \r\n      let selectedlist = this.state.ordershiplist\r\n      //remove unselected\r\n      let removedUnselected = selectedlist.filter(function(item) { return  item != event.target.value; })\r\n      this.setState({ordershiplist:removedUnselected})\r\n      console.log(\"remainnng\"+removedUnselected)\r\n      console.log(\"After unselecting \"+this.state.ordershiplist)\r\n\r\n    }\r\n\r\n}\r\n\r\nshipOrders= ()=>{\r\n    // @TODO Update database and take all other necessary steps and Makethe ready to ship\r\n    if(this.state.ordershiplist.length === 0){\r\n      M.toast({html: 'No Order selected! Please select atleast one to Ship '+this.state.ordershiplist,classes:\"white-text red rounded\"})\r\n    }else{\r\n      M.toast({html: 'Pending for Implementation '+this.state.ordershiplist,classes:\"white-text orange rounded\"})\r\n    }\r\n   \r\n  \r\n  \r\n  }\r\n  \r\n\r\n    render(){\r\n\r\n         const orderCardList=  this.state.orderslist.map((order)=>{\r\n           return(\r\n              <Card key={order.id} className=\"orderItemdetailsCard\">\r\n               <Card.Header className=\"smallheader\">\r\n               <Row >\r\n                      <Col>\r\n                      <Card.Text>{order.ordernumber}</Card.Text>\r\n                      </Col>\r\n                      <Col>\r\n                      <Card.Text>{order.customerid}</Card.Text>\r\n                      </Col>\r\n                      <Col>\r\n                      <Card.Text>\r\n                      {order.country}\r\n                      </Card.Text>\r\n                      </Col>\r\n                      <Col>\r\n                      <Card.Text>\r\n                      {order.inboundnumber}\r\n                      </Card.Text>\r\n                      </Col>\r\n                      <Col>\r\n                      <Card.Text>\r\n                      {order.outboundnumber}\r\n                      </Card.Text>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                      {(()=>{\r\n                        // Function to set icons with respect to order status\r\n                        if (order.orderstatus === \"Failed\"){\r\n                          return (<p className=\"red-text\"><Image  className=\"ml-1\" src=\"assets/images/wrong.svg\"/> {order.orderstatus}</p>)\r\n                        }else{\r\n                          return (<p className=\"black-text\"><Image  className=\"ml-1\" src=\"assets/images/black-circle.svg\"/> {order.orderstatus}</p>)\r\n                        }\r\n                      })()}\r\n                      </Col>\r\n                      <Col className=\" \">\r\n\r\n                        {/* @TODO loading for manifest must be implemented */}\r\n                        {\r\n                          (()=>{\r\n                            // function to disable Select button if already shipped\r\n                            if (order.orderstatus === \"Ready To Shipped\"){\r\n                              return ( <>\r\n                               <p className=\"right red-text\">\r\n      <label>\r\n        <input type=\"checkbox\" value={order.ordernumber}  onChange={this.onChangeSelectManifest} />\r\n        <span className=\"red-text\">Select to Ship</span>\r\n      </label>\r\n    </p>\r\n                                                           </>)\r\n                            }\r\n                            else{\r\n                                return( \r\n                                  <p className=\"right red-text\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" value={order.ordernumber} onChange={this.onChangeSelectManifest} />\r\n                                    <span className=\"red-text\">Select to Manifest</span>\r\n                                  </label>\r\n                                </p>\r\n                               \r\n                                \r\n                                )\r\n                            }\r\n                          })()\r\n                        }\r\n                       \r\n                  <Accordion.Toggle className=\"right inline alignmore_details\" as={Nav.Link} variant=\"link\" eventKey={order.id}>\r\n        More Details<Image  className=\"ml-1 \" src=\"assets/images/plus-circlesmall.svg\"/>\r\n      </Accordion.Toggle>\r\n                      </Col>\r\n                    </Row>\r\n                 \r\n                 </Card.Header> \r\n                \r\n                \r\n                <Card.Body>\r\n                \r\n               \r\n                 \r\n                    <Accordion.Collapse eventKey={order.id}>\r\n      <Card.Body>Hello! I'm the body</Card.Body>\r\n    </Accordion.Collapse>\r\n\r\n                </Card.Body>\r\n\r\n              </Card>\r\n           );\r\n         });\r\n\r\n        return(\r\n<Container>\r\n\r\n<div className=\"row\">\r\n          <div className=\"col s4 l4 m4\">\r\n          <h4 className=\" orange-text\">Ready To Ship Orders </h4>\r\n          </div>\r\n          <div className=\"col s3 l3 offset-m7 offset-l7\">\r\n            {/* hide Manifest button because we not using selection things RN */}\r\n          <Button variant=\"outline-primary \" onClick={this.shipOrders}>Ship Orders</Button>\r\n          </div>\r\n</div>\r\n\r\n\r\n<Row>\r\n  <Col xs={12} lg={12}>\r\n  <div>\r\n        \r\n        <div id=\"orderlistdiv\" >\r\n                  <Row id=\" orderlistrow\">\r\n                      <Col>\r\n                      <p> <Image className=\"mr-1\" src=\"assets/images/down.svg\"/>Order Number</p>\r\n                      </Col>\r\n                      <Col>\r\n                      <p> <Image className=\"mr-1\" src=\"assets/images/down.svg\"/>Customer Id</p>\r\n                      </Col>\r\n                      <Col>\r\n                      <p> <Image className=\"mr-1\" src=\"assets/images/down.svg\"/>Country</p>\r\n                      </Col>\r\n                      <Col>\r\n                      <p> <Image className=\"mr-1\" src=\"assets/images/down.svg\"/>Inbound No.</p>\r\n                      </Col>\r\n                      <Col>\r\n                      <p> <Image className=\"mr-1\" src=\"assets/images/down.svg\"/>Outbound No.</p>\r\n                      </Col>\r\n\r\n                  </Row>\r\n                  <div className=\"divider\"></div>\r\n          </div>\r\n          <Accordion>\r\n            <form>\r\n            { orderCardList}\r\n            </form>\r\n          \r\n          </Accordion>\r\n       \r\n\r\n  </div>\r\n  </Col>\r\n\r\n \r\n</Row>\r\n\r\n</Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReadyShip;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\CountryDetails.js",["266","267","268","269","270","271","272"],"import React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants';\r\nimport Axios from \"axios\"\r\nimport { ButtonToolbar, ButtonGroup, Button, Row, Col, Container } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport CountryFrag from './AddCountry';\r\nimport StateFrag from './AddState';\r\nimport SlabFrag from './AddSlab'\r\nimport WarehouseFrag from './AddWarehouse'\r\nimport WarehouseOwnerFrag from './AddWarehouseOwner'\r\nimport CategoryFrag from './AddCategory'\r\nimport FedexConsolidateFrag from './AddFedexConsolidate'\r\nimport BillingFrag from './AddBillingDetails'\r\nimport PrinterFrag from './AddPrinterIP'\r\nimport DiscountFrag from './AddPromotionalData'\r\nimport LanguageFrag from './AddLanguageTemplate'\r\nimport Error from './Error'\r\nimport './countrydetail.css';\r\n// import { getJSON, parseJSON } from 'jquery';\r\n\r\n\r\nclass DbCountry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      fragmentdiv: <CountryFrag countrytable={this.props.countrydata} />,\r\n      error: '',\r\n      tableHeader: \"Country Master\"\r\n    })\r\n    this.fetchCountryData = this.fetchCountryData.bind(this)\r\n  }\r\n\r\n\r\n\r\n  getCountryData = async () => {\r\n\r\n    try {\r\n      const response = await Axios.get(base_url+'countries/')\r\n      console.log(response.data)\r\n      console.log(\"COutnry data\" + response.data)\r\n\r\n      this.setState({ fragmentdiv: <CountryFrag countrytable={response.data} /> })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: \"<h1 className= 'red-text'>${error}></h1>\" })\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  getStateData = async () => {\r\n    console.log()\r\n    try {\r\n      const response = await Axios.get(base_url+'states/')\r\n      const response_countrylist = await Axios.get(base_url+'countries/?list=True')\r\n      // console.log(response.data)\r\n      console.log(response_countrylist.data)\r\n      let countrylist = []\r\n      let country_codelist = []\r\n      for (var key in response_countrylist.data) {\r\n        console.log(\"state key\", key)\r\n\r\n\r\n        country_codelist.push(response_countrylist.data[key].country_id)\r\n        countrylist.push(response_countrylist.data[key].country_name)\r\n      }\r\n      console.log(\"codelist\", country_codelist)\r\n      console.log(\"namelist\", countrylist)\r\n      this.setState({\r\n        fragmentdiv: <StateFrag statedata={response.data}\r\n          countrylist={countrylist} country_code_list={country_codelist} />\r\n      })\r\n      this.setState({ error: <></> })\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  getSlabData = async () => {\r\n    console.log()\r\n    try {\r\n\r\n      let token = localStorage.getItem(\"token\")\r\n      let header = {\r\n        'Content-Type': 'multipart/form-data',\r\n        'Authorization': 'Token ' + token,\r\n\r\n      }\r\n\r\n\r\n      const response = await Axios.get(base_url+'slabcodes/', header)\r\n      const response_countrylist = await Axios.get(base_url+'countries/?list=True', header)\r\n\r\n      let countrylist = []\r\n      let country_codelist = []\r\n      console.log(\"country resp\", response_countrylist.data)\r\n      for (var key in response_countrylist.data) {\r\n        console.log(\"key\", key)\r\n        country_codelist.push(response_countrylist.data[key].country_id)\r\n        countrylist.push(response_countrylist.data[key].country_name)\r\n      }\r\n      console.log(\"codelist\", country_codelist)\r\n      console.log(\"namelist\", countrylist)\r\n      this.setState({\r\n        fragmentdiv: <SlabFrag slabdata={response.data}\r\n          countrylist={countrylist} country_code_list={country_codelist} />\r\n      })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  // Category data fetch to display\r\n\r\n  getCategoryData = async () => {\r\n    console.log()\r\n    try {\r\n      const response = await Axios.get(base_url+'categories/')\r\n      const response_countrylist = await Axios.get(base_url+'countries/?list=True')\r\n\r\n      let countrylist = []\r\n      let country_codelist = []\r\n      for (var key in response_countrylist.data) {\r\n\r\n        country_codelist.push(response_countrylist.data[key].country_id)\r\n        countrylist.push(response_countrylist.data[key].country_name)\r\n      }\r\n\r\n      this.setState({\r\n        fragmentdiv: <CategoryFrag categorydata={response.data}\r\n          countrylist={countrylist} country_code_list={country_codelist} />\r\n      })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  // Warehouse data fetch to display\r\n\r\n  getWareHouseData = async () => {\r\n\r\n    try {\r\n      const response = await Axios.get(base_url+'warehouses/')\r\n      const response_countryStatelist = await Axios.get(base_url+'country_state_details/')\r\n\r\n      let countrylist = []\r\n      let country_codelist = []\r\n      let state_list = []\r\n      let stateCode_list = []\r\n      for (var key in response_countryStatelist.data) {\r\n\r\n        country_codelist.push(response_countryStatelist.data[key].country_id)\r\n        countrylist.push(response_countryStatelist.data[key].name)\r\n        state_list.push(response_countryStatelist.data[key].states)\r\n        \r\n        console.log(response_countryStatelist.data[key].country_id)\r\n        console.log(response_countryStatelist.data[key].name)\r\n        console.log(response_countryStatelist.data[key].states)\r\n        console.log(response_countryStatelist.data[key].states[2])\r\n      }\r\n      // console.log(\"statelist warehouse \", state_list)\r\n      // for (var i in state_list){\r\n      //   stateCode_list.push(state_list.states[i])\r\n      //   console.log(state_list.states[i])\r\n      // }\r\n      // for (var i in state_list){\r\n      //   stateCode_list.push(state_list[i])\r\n      // }\r\n      console.log(\"stateCodelist warehouse \", stateCode_list)\r\n      this.setState({\r\n        fragmentdiv: <WarehouseFrag warehousedata={response.data}\r\n          countrylist={countrylist} country_code_list={country_codelist}\r\n          statedata={state_list}\r\n        />\r\n      })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  //NEW ADMIN TABS START\r\n\r\n  //Warehouse Owner Data fetch to display\r\n  getWarehouseOwnerData = async () => {\r\n    try {\r\n      const response = await Axios.get(base_url+'warehouse_owner/')\r\n      const response_warehouseList = await Axios.get(base_url+'warehouses/')\r\n      const response_countryStatelist = await Axios.get(base_url+'country_state_details/')\r\n\r\n      let warehouseIDList = []\r\n      let countrylist = []\r\n      let country_codelist = []\r\n      let state_list = []\r\n\r\n      for (var key in response_warehouseList.data) {\r\n        warehouseIDList.push(response_warehouseList.data[key].warehouse_id)       \r\n      }\r\n\r\n      for (var key in response_countryStatelist.data) {\r\n\r\n        country_codelist.push(response_countryStatelist.data[key].country_id)\r\n        countrylist.push(response_countryStatelist.data[key].name)\r\n        state_list.push(response_countryStatelist.data[key].states)\r\n        console.log(response_countryStatelist.data[key].country_id)\r\n        console.log(response_countryStatelist.data[key].name)\r\n        console.log(response_countryStatelist.data[key].states)\r\n      }\r\n      console.log(\"statelist warehouse \", state_list)\r\n      // console.log(\"warehouse list\", state_list)\r\n      console.log(\"warehouse ID list\", warehouseIDList)\r\n      this.setState({\r\n        fragmentdiv: <WarehouseOwnerFrag warehouse_ownerdata={response.data}\r\n          countrylist={countrylist} country_code_list={country_codelist}\r\n          statedata={state_list} warehouseIDList = {warehouseIDList}\r\n        />\r\n      })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n    \r\n  }\r\n\r\n  //Fedex Consolidate fetch to display\r\n  getFedexConsolidateData = async () => {\r\n    console.log()\r\n    try {\r\n      const response = await Axios.get(base_url+'fedex_consolidate/')\r\n      const response_countrylist = await Axios.get(base_url+'countries/?list=True')\r\n      const response_countryStatelist = await Axios.get(base_url+'country_state_details/')\r\n  \r\n      let countrylist = []\r\n      let country_codelist = []\r\n      let state_list = []\r\n      for (var key in response_countryStatelist.data) {\r\n\r\n        country_codelist.push(response_countryStatelist.data[key].country_id)\r\n        countrylist.push(response_countryStatelist.data[key].name)\r\n        state_list.push(response_countryStatelist.data[key].states)\r\n        console.log(response_countryStatelist.data[key].country_id)\r\n        console.log(response_countryStatelist.data[key].name)\r\n        console.log(response_countryStatelist.data[key].states)\r\n      }\r\n\r\n      this.setState({\r\n        fragmentdiv: <FedexConsolidateFrag fedexConsolidatedata={response.data}\r\n          countrylist={countrylist} country_code_list={country_codelist}\r\n          />\r\n      })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n  }\r\n\r\n\r\n  //Billing Data fetch to display\r\n  getBillingData = async () => {\r\n    console.log()\r\n    try {\r\n      const response = await Axios.get(base_url+'cash_billing/')\r\n      const response_countrylist = await Axios.get(base_url+'countries/?list=True')\r\n      const response_ownerList = await Axios.get(base_url+'warehouse_owner/')\r\n\r\n      let countrylist = []\r\n      let country_codelist = []\r\n      let ownerList = []\r\n\r\n      for (var key in response_countrylist.data) {\r\n\r\n        country_codelist.push(response_countrylist.data[key].country_id)\r\n        countrylist.push(response_countrylist.data[key].country_name)\r\n      }\r\n\r\n      for (var key in response_ownerList.data) {\r\n        ownerList.push(response_ownerList.data[key].owner_id)       \r\n      }\r\n\r\n      this.setState({\r\n        fragmentdiv: <BillingFrag billingdata={response.data}\r\n          countrylist={countrylist} country_code_list={country_codelist}\r\n          ownerList = {ownerList}/>\r\n      })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n  }\r\n\r\n  //Printer IP Data fetch to display\r\n  getPrinterIPdata = async () => {\r\n    console.log()\r\n    try {\r\n      const response = await Axios.get(base_url+'printer_ip/')\r\n      const response_countrylist = await Axios.get(base_url+'countries/?list=True')\r\n      const response_warehouseList = await Axios.get(base_url+'warehouses/')\r\n      \r\n      let warehouseIDList = []\r\n      let countrylist = []\r\n      let country_codelist = []\r\n\r\n      for (var key in response_countrylist.data) {\r\n\r\n        country_codelist.push(response_countrylist.data[key].country_id)\r\n        countrylist.push(response_countrylist.data[key].country_name)\r\n      }\r\n\r\n      for (var key in response_warehouseList.data) {\r\n        warehouseIDList.push(response_warehouseList.data[key].warehouse_id)       \r\n      }\r\n     \r\n      this.setState({\r\n        fragmentdiv: <PrinterFrag printerIPdata={response.data}\r\n          countrylist={countrylist} country_code_list={country_codelist}\r\n          warehouseIDList = {warehouseIDList}/>\r\n      })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n  }\r\n\r\n  //Promotional/Discount Data Fetch to Display\r\n  getDiscountData = async () => {\r\n    try {\r\n      const response = await Axios.get(base_url+'promotions/')\r\n      const response_countrylist = await Axios.get(base_url+'countries/?list=True')\r\n      \r\n      let countrylist = []\r\n      let country_codelist = []\r\n      let country_name = {}\r\n\r\n      for (var key in response_countrylist.data) {\r\n\r\n        country_codelist.push(response_countrylist.data[key].country_id)\r\n        countrylist.push(response_countrylist.data[key].country_name)\r\n\r\n        country_name[response_countrylist.data[key].country_id] = response_countrylist.data[key].country_name\r\n      }\r\n\r\n      // console.log('COUNTRY NAME', country_name);\r\n\r\n      this.setState({\r\n        fragmentdiv: <DiscountFrag discountdata = { response.data }\r\n        countrylist={countrylist} \r\n        country_code_list={country_codelist}\r\n        country_name = { country_name } />\r\n      })  \r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n  }\r\n  \r\n  getLanguageTemplateData = async () => {\r\n\r\n    try {\r\n      const response = await Axios.get(base_url+'countries/')\r\n      const response_countrylist = await Axios.get(base_url+'countries/?list=True')\r\n      \r\n      let countrylist = []\r\n      let country_codelist = []\r\n      let default_lang_list = []\r\n\r\n      for (var key in response_countrylist.data) {\r\n        country_codelist.push(response_countrylist.data[key].country_id)\r\n        countrylist.push(response_countrylist.data[key].country_name)        \r\n      }\r\n      \r\n      for (var key in response.data) {\r\n        default_lang_list.push(response.data[key].default_language)\r\n      }     \r\n      console.log('DEF LANG', default_lang_list);\r\n\r\n      this.setState({\r\n        fragmentdiv: <LanguageFrag languageData = { response.data }\r\n        default_langList = { default_lang_list }\r\n        countrylist={countrylist} \r\n        country_code_list={country_codelist}  />\r\n      }) \r\n\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(\"Error\", error);\r\n      this.setState({ error: <Error /> })\r\n    }\r\n    \r\n   \r\n  }\r\n\r\n  //NEW ADMIN TABS END\r\n\r\n  componentDidMount() {\r\n\r\n    M.AutoInit();\r\n\r\n    this.getCountryData()\r\n\r\n  }\r\n\r\n\r\n  functionalityNotAvailable = () => {\r\n\r\n    M.toast({ html: 'Functionality Not Available', classes: \"white-text red rounded\" })\r\n\r\n  }\r\n\r\n  fetchCountryData() {\r\n    this.setState({\r\n      tableHeader: \"Country Master\"\r\n    })\r\n    this.setState({\r\n      fragmentdiv: <CountryFrag countrytable={this.props.countrydata} />,\r\n    })\r\n  }\r\n\r\n  fetchStateData = () => {\r\n    this.setState({\r\n      tableHeader: \"State Master\"\r\n    })\r\n    this.getStateData()\r\n  }\r\n\r\n\r\n  fetchSlabData = () => {\r\n    this.setState({\r\n      tableHeader: \"Freight Slab Rates\"\r\n    })\r\n    this.getSlabData()\r\n  }\r\n\r\n  fetchWareHouseData = () => {\r\n    this.setState({\r\n      tableHeader: \"Warehouse Master\"\r\n    })\r\n    this.getWareHouseData()\r\n  }\r\n  fetchCategoryData = () => {\r\n    this.setState({\r\n      tableHeader: \"Category Master\"\r\n    })    \r\n    this.getCategoryData()\r\n  }\r\n\r\n  //NEW ADMIN TABS START\r\n\r\n\r\n  fetchWarehouseOwnerData = () => {\r\n    this.setState({\r\n      tableHeader: \"Warehouse Owner\"\r\n    })\r\n    this.getWarehouseOwnerData()\r\n  }\r\n\r\n  fetchBillingData = () => {\r\n    this.setState({\r\n      tableHeader: \"Billing\"\r\n    })\r\n    this.getBillingData()\r\n  }\r\n  \r\n  fetchFedexConsolidateData = () => {\r\n    this.setState({\r\n      tableHeader: \"Consolidated Invoice Recipient\"\r\n    })\r\n    this.getFedexConsolidateData()\r\n  }\r\n\r\n  fetchPrinterIPdata = () => {\r\n    this.setState({\r\n      tableHeader: \"Printer IP\"\r\n    })\r\n    this.getPrinterIPdata()\r\n  }\r\n  \r\n  fetchDiscountData = () => {\r\n    this.setState({\r\n      tableHeader: \"Discount\"\r\n    })\r\n    this.getDiscountData()\r\n  }\r\n\r\n  fetchLanguageTemplateData = () => {\r\n    this.setState({\r\n      tableHeader: \"Language Template\"\r\n    })\r\n    this.getLanguageTemplateData()\r\n  }\r\n\r\n  //NEW ADMIN TABS END\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n\r\n\r\n\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12}>\r\n            {/* Todo searchbar  */}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} lg={12} className=\"\" >\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              <Row>\r\n                <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n\r\n                  <Col xs sm md lg={12}>\r\n\r\n                    <Button onClick={this.fetchCountryData} className=\"mr-3 \" variant=\"outline-primary\" >Country Master</Button>\r\n                    <Button onClick={this.fetchStateData} variant=\"outline-primary\" className=\"mr-3 \">State Master</Button>\r\n                    <Button onClick={this.fetchSlabData} variant=\"outline-primary\" className=\"mr-3 \">Freight Slab Rates</Button>\r\n                    <Button onClick={this.fetchCategoryData} variant=\"outline-primary\" className=\"mr-3\">Category Master</Button>\r\n                    <Button onClick={this.fetchWareHouseData} variant=\"outline-primary\" className=\"mr-3\">Warehouse Master</Button>\r\n                  </Col>\r\n                </ButtonGroup>\r\n              </Row>\r\n\r\n              <Row>\r\n                <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n\r\n                  <Col xs sm md lg={12}>\r\n\r\n                    <Button onClick={this.fetchWarehouseOwnerData} variant=\"outline-primary\" className=\"mr-3\">Warehouse Owner</Button>\r\n                    <Button onClick={this.fetchFedexConsolidateData} variant=\"outline-primary\"  className=\"mr-3\">Consolidated Invoice Recipient</Button>\r\n                    <Button onClick={this.fetchDiscountData} variant=\"outline-primary\"  className=\"mr-3\">Discount</Button>\r\n                    <Button onClick={this.fetchLanguageTemplateData} variant=\"outline-primary\"  className=\"mr-3\">Language Template</Button>\r\n                  </Col>\r\n                </ButtonGroup>\r\n              </Row>\r\n              {/* <Row>\r\n                <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                  <Col xs sm md lg={12}>\r\n                    <Button variant=\"outline-primary\" className=\"mr-3 \" disabled>Operator</Button>\r\n                    <Button variant=\"outline-primary\" className=\"mr-3 \" disabled>Order Status Master</Button>\r\n                    <Button onClick={this.fetchBillingData} variant=\"outline-primary\" className=\"mr-3\">Billing</Button>\r\n                    <Button onClick={this.fetchPrinterIPdata} variant=\"outline-primary\" className=\"mr-3\">Printer IP</Button>\r\n                  </Col>\r\n                </ButtonGroup>\r\n              </Row> */}\r\n\r\n            </ButtonToolbar>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n        <Row>\r\n          <Col xs={12} lg={12}>\r\n            <h3 className = \"orange-text center\">{ this.state.tableHeader }</h3>\r\n            <div className=\"operation-dataDiv\">\r\n              {this.state.fragmentdiv}\r\n              {this.state.error}\r\n            </div>\r\n          </Col>\r\n\r\n\r\n        </Row>\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DbCountry;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\ProductItemListCard.js",[],"C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\OrderSelectionModal.js",["273","274","275","276","277","278"],"import React from 'react';\r\nimport M from 'materialize-css';\r\nimport Axios from 'axios';\r\nimport {Button,ButtonGroup,Row,Col,Image,Card} from 'react-bootstrap';\r\n\r\n// css of this is in createOrder.css\r\n\r\nclass OrderModal extends React.Component {\r\n\r\nconstructor(props, context){\r\n    super (props, context);\r\n    this.state =({showModel:true,\r\n        orders:this.props.orders,\r\n        orderSelectedlist:[],\r\n        previouSelectedOrder:\"\",\r\n        ordernumber:{},\r\n        orderautoid:{},\r\n        disableChangeStatus: false,\r\n        context :context\r\n    })\r\n\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n\r\n\r\n    if (this.props.orders !== prevProps.orders) {\r\n        \r\n        this.setState({orders:this.props.orders,\r\n            \r\n    \r\n        })\r\n\r\n     }\r\n\r\n\r\n  }\r\n\r\n\r\ncomponentDidMount(){\r\nconst context = this.state.context\r\n   M.AutoInit();\r\n}\r\n\r\n\r\nopenModal = ()=>{\r\n    var elems = document.getElementById('orderselectionmodal');\r\n    var instance = M.Modal.init(elems);\r\n    instance.open()\r\n    // orderselectionmodal\r\n}\r\ncloseModal = ()=>{\r\n    var elems = document.getElementById('orderselectionmodal');\r\n    var instance = M.Modal.init(elems);\r\n    instance.close()\r\n}\r\n\r\n\r\nonChangeSelectManifest = (event)=>{\r\n    console.log(event.target.checked, event.target.value);\r\n    console.log(event.target.name)\r\n    if (this.state.previouSelectedOrder ===\"\" && event.target.name){\r\n            console.log(\"first time \" + event.target.name)\r\n            this.state.orderSelectedlist.push(event.target.value)\r\n                    \r\n            this.setState({orderSelectedlist:this.state.orderSelectedlist})\r\n            console.log(\"Selected \"+this.state.orderSelectedlist)\r\n            this.setState({previouSelectedOrder:event.target.name})\r\n            this.setState({disableChangeStatus: false});\r\n    }\r\n    else{\r\n        console.log(\"In else \" + event.target.name)\r\n        console.log(\"In else \" + this.state.previouSelectedOrder)\r\n        this.setState({disableChangeStatus: false})\r\n        if (this.state.previouSelectedOrder === event.target.name ){\r\n                // selected id code starts here\r\n\r\n                if (event.target.checked){\r\n                    this.state.orderSelectedlist.push(event.target.value)\r\n                    \r\n                    this.setState({orderSelectedlist:this.state.orderSelectedlist})\r\n                    console.log(\"Selected \"+this.state.orderSelectedlist)\r\n                    this.setState({disableChangeStatus : false})\r\n        \r\n                // order_orderIdSelect\r\n                            // this.state.order_orderIdSelect.push(event.target.value)\r\n                                \r\n                            // this.setState({order_orderIdSelect:this.state.order_orderIdSelect})\r\n                            // console.log(\"Selected \"+this.state.order_orderIdSelect)\r\n                    }else{ \r\n                    let selectedlist = this.state.orderSelectedlist\r\n                    //remove unselected\r\n                    let removedUnselected = selectedlist.filter(function(item) { return  item != event.target.value; })\r\n                    this.setState({orderSelectedlist:removedUnselected})\r\n                    console.log(\"remainnng\"+removedUnselected)\r\n                    console.log(\"After unselecting \"+this.state.orderSelectedlist)\r\n                    this.setState({disableChangeStatus : false});\r\n        \r\n                    }\r\n\r\n                    \r\n        }else{\r\n            if(event.target.checked && this.state.previouSelectedOrder !== event.target.name){\r\n                M.toast({html: 'Select Products from SAME Order',classes:\"white-text orange rounded\"})\r\n                this.setState({disableChangeStatus : true});\r\n            }\r\n            \r\n        }\r\n    }      \r\n\r\n}\r\n\r\nchangeStatus= async()=>{\r\n    // var orderssel = this.state.orderSelectedlist\r\n\r\n// http://127.0.0.1:8000/api/v1/ezzytrace/boxes_received/order_100/\r\nvar orderDetails ={}\r\ntry{\r\n    let token =localStorage.getItem(\"token\")\r\n    \r\n    let config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token}\r\n        \r\n      };\r\n  \r\n    var url= `http://3.131.16.17/api/v1/ezzytrace/boxes_received/${this.state.previouSelectedOrder}/`\r\n\r\n    let ordersresppnse = await Axios.get(url,config)\r\n    console.log(ordersresppnse.data)\r\n    orderDetails = ordersresppnse.data\r\n    // await this.setState({pendingOrders: this.state.pendingOrders.concat(orders.data)})\r\n    // M.toast({html: 'Pending Ordersa fetched',classes:\"white-text orange rounded\"});\r\n    // this.setState({error:\"\"})\r\n  }catch(error){\r\n    console.log(`Failed to fetch selected order data ${error}`)\r\n    // M.toast({html: 'Pending Ordersa cannot be fetched',classes:\"white-text red rounded\"});\r\n    // this.setState({error:<Error/>})\r\n  }\r\n\r\n    console.log(\"clicked\")\r\n    const productselectiondata = {\r\n        order :this.state.previouSelectedOrder,\r\n        orderdetails: orderDetails,\r\n        orderid : this.state.orderautoid,\r\n        perordersdata : this.state.ordernumber,\r\n        selectedproductId : this.state.orderSelectedlist\r\n    }\r\n    this.props.onOrderSelection(productselectiondata)\r\n    this.closeModal()\r\n}\r\n\r\n    render(){\r\n\r\n        // var orderslist =[{id:1,order_id:\"12343\",description:\"Macbook\",quantity:1,unit_price:\"300\"},\r\n        // {id:2,order_id:\"12343\",description:\"Macbook\",quantity:1,unit_price:\"300\"}]\r\n        var orderslist = this.state.orders\r\n        var ordernumber = {}\r\n        var orderautoid = {}\r\n        // var uniquekey = 0\r\n\r\n        var srNo = 0\r\n\r\n        let previousid =0\r\n        console.log( 'CHECKING ORDER LIST',orderslist);\r\n        const orderCardList=  orderslist.map((order)=>{\r\n            \r\n                let orderid =order.order_id\r\n                \r\n                if (!ordernumber[orderid]) { // Initial object property creation.\r\n                    ordernumber[orderid] =[order]\r\n                    this.state.ordernumber[orderid] = [order]; // Create an array for that property.\r\n                } else { // Same occurrences found.\r\n                     //if (previousid !== order.id){\r\n                        this.state.ordernumber[orderid].push(order); // Fill the array.\r\n                     //}\r\n                   \r\n                }\r\n                // previousid = order.id\r\n                this.state.orderautoid[order.id] =order \r\n\r\n                srNo = srNo + 1\r\n                \r\n            return(\r\n               <Card key={order.id} className=\"orderItemCard\">\r\n                <Card.Body className=\"cardheader\">\r\n                <Row >\r\n                       <Col>\r\n                       <Card.Text className=\"ml-5\">{srNo}</Card.Text>\r\n                       </Col>\r\n                       <Col>\r\n                       <Card.Text>{order.order_id}</Card.Text>\r\n                       </Col>\r\n                       <Col>\r\n                       <Card.Text>\r\n                       {order.description}\r\n                       </Card.Text>\r\n                       </Col>\r\n                       <Col>\r\n                       <Card.Text>\r\n                       {order.quantity}\r\n                       </Card.Text>\r\n                       </Col>\r\n                       <Col>\r\n                       <Card.Text>\r\n                       {order.unit_price}\r\n                       </Card.Text>\r\n                       </Col>\r\n                       <Col>\r\n                       <p className=\"center red-text\">\r\n      <label>\r\n        <input className='red-text' name={order.order_id} type=\"checkbox\" value={order.id}  onChange={this.onChangeSelectManifest} />\r\n        <span className=\"red-text\">\r\n            {/* Select to change ChangeStatus */}\r\n        </span>\r\n      </label>\r\n    </p>\r\n             \r\n                       </Col>\r\n                     </Row>\r\n            \r\n                  \r\n                  </Card.Body> \r\n                 \r\n                 \r\n            \r\n \r\n               </Card>\r\n            );\r\n          });\r\n\r\n\r\n        return (<>\r\n\r\n\r\n  <div id=\"orderselectionmodal\" className=\"modal orderpopmodel modal-fixed-footer\">\r\n    <div className=\"modal-content\">\r\n    <h4 className=\"center orange-text\"> Pending Existing Orders </h4>\r\n    <Row>\r\n  <Col xs={12} lg={12}>\r\n  <div>\r\n        \r\n        <div id=\"orderlistdiv\" >\r\n                  <Row id=\" orderlistrow\">\r\n                      <Col>\r\n                      <p> <Image className=\"ml-5\" src=\"assets/images/down.svg\"/>Sr. No.</p>\r\n                      </Col>\r\n                      <Col>\r\n                      <p> <Image className=\"mr-1\" src=\"assets/images/down.svg\"/>Order Id.</p>\r\n                      </Col>\r\n                      <Col>\r\n                      <p> <Image className=\"mr-1\" src=\"assets/images/down.svg\"/>Product Name</p>\r\n                      </Col>\r\n                      <Col>\r\n                      <p> <Image className=\"mr-1\" src=\"assets/images/down.svg\"/>Quantity</p>\r\n                      </Col>\r\n                      <Col>\r\n                      <p> <Image className=\"mr-1\" src=\"assets/images/down.svg\"/>Price</p>\r\n                      </Col>\r\n                      <Col> Select Order(s)</Col>\r\n\r\n                  </Row>\r\n                  <div className=\"divider\"></div>\r\n          </div>\r\n\r\n        \r\n            { orderCardList}\r\n         \r\n       \r\n\r\n  </div>\r\n  </Col>\r\n\r\n \r\n</Row>\r\n    </div>\r\n    <div className=\"modal-footer\">\r\n   \r\n    <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n    <Button id=\"closeOrderBtn\" variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Close</Button> \r\n   {this.state.disableChangeStatus ? <Button disabled id =\"addItemBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.changeStatus}> ChangeStatus</Button> : <Button id =\"addItemBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.changeStatus}> ChangeStatus</Button> }\r\n\r\n  </ButtonGroup>\r\n    </div>\r\n  </div>\r\n      \r\n\r\n\r\n\r\n\r\n\r\n        </>)\r\n    }\r\n}\r\nexport default OrderModal;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\Success.js",["279"],"import React ,{Component} from 'react';\r\n\r\nimport {Alert} from 'react-bootstrap';\r\n\r\n\r\nclass Success extends Component{\r\nconstructor(props){\r\n    super (props);\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <Alert variant=\"success\">\r\n  <Alert.Heading>YAY! Operation Successful!</Alert.Heading>\r\n  <p>\r\n  {this.props.message}\r\n  </p>\r\n \r\n\r\n</Alert>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Success;\r\n\r\n","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\EditProductItem.js",["280"],"import React, {Component} from 'react';\r\nimport {Row, Col,ButtonGroup,Button,Spinner} from 'react-bootstrap';\r\nimport M from 'materialize-css';\r\n// import Axios from \"axios\";\r\n\r\n//css is in orderlist.css\r\n\r\nclass EditProduct extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n           \r\n            row_number:this.props.rowNumber,\r\n            product_details :{},\r\n            product_category_options:[],\r\n            product_name:\"\",\r\n            product_price:0,\r\n            product_quantity:0 ,\r\n            product_category:\"\",\r\n\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        M.AutoInit()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n\r\n        if (this.props.productDetails !== prevProps.productDetails )  {\r\n                let product = this.props.productDetails;\r\n                this.setState({\r\n                    row_number:this.props.rowNumber,\r\n                    product_details :this.props.productDetails,\r\n                    product_category_options:this.props.productcategory,\r\n                    product_name:product.productName,\r\n                    product_price:product.productPrice,\r\n                    product_quantity:product.productQuantity,\r\n                    product_category:product.productCategory,\r\n\r\n                })\r\n                console.log(\"Row for updatation\",this.props.rowNumber)\r\n                product = this.props.productDetails;\r\n        }\r\n    }\r\n    openModal =  (rowNum,prodDetails,countryoptions)=>{\r\n        console.log(\"inside update Product no. \",rowNum);\r\n       //  console.log(orderdata);\r\n       var elems = document.getElementById(\"updateProductModal\");\r\n       var instance = M.Modal.init(elems);\r\n       console.log(\"categlry\",this.state.countryoptions)\r\n       console.log(this.props.rowNumber);\r\n        this.setState({row_number:this.props.rowNumber,\r\n        product_details :prodDetails,\r\n        product_category_options:countryoptions\r\n        })\r\n       instance.open()\r\n       // orderselectionmodal\r\n   }\r\n   closeModal = ()=>{\r\n       var elems = document.getElementById(\"updateProductModal\");\r\n       var instance = M.Modal.init(elems);\r\n       instance.close()\r\n   }\r\n\r\n   handleFormChange=(event)=>{\r\n    const name = event.target.name\r\n    const value = event.target.value\r\n    console.log(value)\r\n    this.setState(\r\n            { [name]:value }\r\n        )\r\n\r\n   }\r\n   updateItemInlist = ()=>{\r\n    \r\n    // M.toast({html: 'item updation clicked'+this.state.product_details.id,classes:\"white-text blue rounded\"});\r\n    let rowNum =  this.state.row_number\r\n    console.log(\"ID OF proudct\",this.state.product_details.id)\r\n    let updatedItem ={\r\n        id:this.state.product_details.id,\r\n        productName:this.state.product_name,\r\n        productPrice:this.state.product_price,\r\n        productQuantity:this.state.product_quantity,\r\n        productCategory:this.state.product_category,\r\n        \r\n    }\r\n   // M.toast({html: 'item updation clicked'+rowNum + updatedItem,classes:\"white-text blue rounded\"})\r\n    this.props.updateBtnClick(rowNum,updatedItem)\r\n\r\n   }\r\n\r\n\r\n   \r\nrender(){\r\n    const product  = this.state.product_details;\r\n    console.log(product);\r\n    console.log(\"categlry\",this.state.product_category_options)\r\n    const catlist = this.state.product_category_options;\r\n    var categoryList;\r\n    try {\r\n        \r\n\r\n        if (catlist.length >0){\r\n             categoryList = catlist.map((item, i) => {\r\n              return (\r\n                <option className=\"black-text\" key={i} value={item.category_id}>{item.category_name}</option>\r\n              )\r\n            }, this);\r\n          }\r\n\r\n    } catch (error) {\r\n        console.log(\"categories can't be added in product\")\r\n    }   \r\n  \r\n\r\n\r\n\r\n    return(\r\n    \r\n        <div id=\"updateProductModal\" className=\"modal modal-fixed-footer\">\r\n        <div className=\"modal-content\">\r\n          <h4 className=\"center orange-text\"> Edit Product Details </h4>\r\n           <Row>\r\n               <Col xs={12} >\r\n               <form>\r\n                   <Row>\r\n                       <Col className=\" rowdivPading \" xs={12}>\r\n                       <div className=\"input-field col s6 offset-s3 center\">\r\n              <input name=\"product_name\" id=\"product_name\" type=\"text\" value={this.state.product_name} onChange={this.handleFormChange} className=\"\"/>\r\n              \r\n              <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter a valid Product Name</span>\r\n            </div>\r\n                       </Col>\r\n                   </Row>\r\n                   <Row>\r\n                       <Col className=\" rowdivPading \">\r\n                       <div className=\"input-field col s6 offset-s3 center\">\r\n                       <label htmlFor=\"weight\" style={{marginLeft:'20%'}}>Enter price</label>\r\n              <input name=\"product_price\" disabled={this.props.status === \"IM\"} id=\"product_price\" min=\"0\" type=\"number\" value={this.state.product_price} onChange={this.handleFormChange} className=\"\"/>\r\n             \r\n              <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter Price</span>\r\n            </div>\r\n                       </Col>\r\n                   </Row>\r\n                   <Row>\r\n                       <Col className=\" rowdivPading \">\r\n                       <div className=\"input-field col s6 offset-s3 center\">\r\n                       <label htmlFor=\"weight\" style={{marginLeft:'20%'}}>Number of products</label>\r\n              <input name=\"product_quantity\" id=\"product_quantity\" min=\"0\" type=\"number\" value={this.state.product_quantity} onChange={this.handleFormChange}className=\"\"/>\r\n             \r\n              <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter number of products items</span>\r\n            </div>\r\n                       </Col>\r\n                   </Row>\r\n    \r\n    \r\n    <Row>\r\n      <Col>\r\n    \r\n      <div id=\"categroydiv\" className=\"input-field col s6 offset-s3 center\">\r\n      {/* <p>Select Category</p> */}\r\n       <select id='category_name_select' value={this.state.product_category} name=\"product_category\" className=\"browser-default\" onChange={this.handleFormChange}>\r\n       <option value=\"\" disabled selected>Choose Category</option>\r\n         \r\n            {categoryList}\r\n    \r\n        </select>\r\n        {/* <label>Select Category</label> */}\r\n    \r\n      </div>\r\n    \r\n    \r\n      </Col>\r\n     \r\n    </Row>\r\n    \r\n    \r\n               </form>\r\n               </Col>\r\n           </Row>\r\n        </div>\r\n        <div className=\"modal-footer\" >\r\n          {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n        \r\n    \r\n    \r\n      <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n        <Button id=\"cancelItemAddBtn\" variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Cancel</Button> \r\n        <Button id =\"addItemBtn\" variant=\"outline-primary\" className=\"mr-2 btn modal-close\" onClick={this.updateItemInlist}> Update</Button>\r\n    \r\n      </ButtonGroup>\r\n     \r\n        </div>\r\n      </div> \r\n\r\n     \r\n    )\r\n}\r\n\r\n}\r\nexport default EditProduct;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\editOrder.js",["281","282","283","284","285","286","287"],"import React, {Component} from 'react';\r\nimport {Row, Col,ButtonGroup,Button,Spinner,Nav,Image} from 'react-bootstrap';\r\nimport M from 'materialize-css';\r\nimport Axios from \"axios\";\r\nimport Error from '../AdminPanel/Error'\r\nimport Success from '../AdminPanel/Success'\r\nimport ProductItemsList from './ProductItemListCard';\r\nimport EditProduct from './EditProductItem';\r\nimport CustomerDetailCard from './CustomerDetailCard'\r\nimport { base_url } from '../../globalConstants';\r\nclass EditOrder extends Component{\r\n\r\n\r\nconstructor(props, context){\r\n        super (props, context);\r\n        console.log(\"construct \",this.props.productlist)\r\n        this.state =({\r\n            order:this.props.order,\r\n            // current_date: date,\r\n           \r\n            productlist:new Array() ,\r\n            productlisthtml:<div></div> ,\r\n            product_name:\"\",product_price:\"\",product_quantity:\"\" ,\r\n            product_category_options :<></>,\r\n            product_category:\"\",ordernumber:\"\",\r\n         customer_id:\"\",order_date:\"\",\r\n        received_date:\"\",tracking_number:\"\",shiper_order_number:\"\",\r\n        weight:\"\",height:\"\",fedex_charge:\"\",width:\"\",length:\"\",actual_charge:\"\",\r\n          orderStatusSelected:\"\",\r\n          paymentTypeSelected:\"\",showSpinner:false,\r\n          customerinfo:{},\r\n          error:\"\",\r\n          selectItemDetails:{},\r\n      \r\n        \r\n        })\r\n    \r\n    }\r\n\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n\r\n\r\n    if (this.props.orderdata.id !== prevProps.orderdata.id) {\r\n      console.log(\"Product error\",this.props.productlist)\r\n      console.log(\"customerinfo\",this.props.customerinfo)\r\n      console.log(\"catefory options\",this.props.productCategory)\r\n        this.setState({order:this.props.orderdata,\r\n            //   current_date: this.props.orderdata.order_date,\r\n            orderid :this.props.orderdata.id,\r\n            customerinfo:this.props.customerinfo,\r\n            productlist:this.props.productlist ,\r\n            productlisthtml:this.props.productlisthtml ,\r\n            product_name:\"\",product_price:\"\",product_quantity:\"\" ,\r\n            product_category_options :this.props.productCategory,\r\n            // showSpinner:false,\r\n            product_category:\"\",ordernumber:this.props.orderdata.order_id,\r\n         customer_id:this.props.orderdata.ezz_id,order_date:this.props.orderdata.order_date,\r\n        received_date:this.props.orderdata.received_date,tracking_number:this.props.orderdata.inbound_tracking_number,\r\n        shiper_order_number:this.props.orderdata.shipper_number,\r\n        weight:this.props.orderdata.weight,height:this.props.orderdata.height,\r\n        fedex_charge:this.props.orderdata.freight_charge, width:this.props.orderdata.breadth,\r\n        length:this.props.orderdata.length,actual_charge:this.props.orderdata.actual_charge,\r\n          orderStatusSelected:this.props.orderdata.current_status,\r\n          paymentTypeSelected:this.props.orderdata.billing_type,\r\n\r\n          error:\"\",\r\n\r\n\r\n      \r\n    \r\n        })\r\n \r\n\r\n     }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\nhandletableClick=(clickedrow)=>{\r\n  console.log(clickedrow)\r\n  // M.toast({html: 'Clicked row '+clickedrow,classes:\"white-text red rounded\"});\r\n let productdetail = this.state.productlist[clickedrow]\r\n let categoryoptions = this.state.product_category_options\r\n let order_id = this.state.orderid\r\n console.log(\"handle product category\",categoryoptions)\r\n\r\n this.setState({rowNumber:clickedrow})\r\n this.setState({selectItemDetails:productdetail})\r\n\r\n \r\n   this.refs.editproduct.openModal(clickedrow,productdetail,categoryoptions);\r\n}\r\n\r\nupdateProduct= async (rownumber,item)=>{\r\n  console.log(\"UPDATING LIST HERE \",rownumber,item)\r\nlet productlist = this.state.productlist\r\nproductlist.splice(rownumber, 1, item)\r\nawait this.setState({productlist:productlist})\r\n// this.refs.editproduct.closeModal();\r\nM.toast({html: 'item updated at row ' +rownumber,classes:\"white-text blue rounded\"});\r\n\r\n\r\n}\r\n\r\n\r\n// @TODO: updateOrderProdcts Method will used to update products in future\r\nupdateOrderProducts=async(header)=>{\r\n    this.state.productlist.forEach(async(item)=>{\r\n      // rowclick={this.handletableClick}\r\n        console.log(item)\r\n        try{\r\n          var productformdata = new FormData()\r\n          productformdata.append(\"id\",item.id)\r\n          productformdata.append(\"description\",item.productName)\r\n          productformdata.append(\"quantity\",item.productQuantity)\r\n          productformdata.append(\"unit_price\",item.productPrice)\r\n          productformdata.append(\"inspection_status\",\"okay\")\r\n          productformdata.append(\"status\",\"Active\")\r\n          productformdata.append(\"category\",item.productCategory)\r\n    \r\n          const response_products = await Axios.patch(base_url+\"products/\",productformdata,\r\n          header)\r\n          // alert(response.data)\r\n          console.log(\"Product added Successfully\")\r\n          this.setState({error:<Success message=\" Order Status Updated\"/>})\r\n          M.toast({html: 'Product Addition Successfull',classes:\"white-text blue rounded\"});\r\n        }catch(error){\r\n          M.toast({html: 'Product Addition Failed',classes:\"white-text red rounded\"});\r\n            console.log(error)\r\n        }\r\n       \r\n      });\r\n}\r\n\r\nstartRefresh=async()=>{\r\nthis.props.refreshpage();\r\n}\r\n\r\nupdateOrder= async(header)=>{\r\n  const  orderid= this.state.ordernumber\r\n    try{\r\n        \r\n        var orderupdateForm = new FormData()\r\n        orderupdateForm.append(\"order_id\",this.state.ordernumber)\r\n        orderupdateForm.append(\"ezz_id\",this.state.customer_id)\r\n        orderupdateForm.append(\"shipper_number\",this.state.shiper_order_number)\r\n        orderupdateForm.append(\"billing_id\",\"2121\")\r\n        orderupdateForm.append(\"billing_type\",this.state.paymentTypeSelected)\r\n        orderupdateForm.append(\"order_date\",this.state.order_date)\r\n        orderupdateForm.append(\"received_date\",this.state.received_date)\r\n        orderupdateForm.append(\"inbound_tracking_number\",this.state.tracking_number)\r\n        orderupdateForm.append(\"weight\",this.state.weight)\r\n        orderupdateForm.append(\"length\",this.state.length)\r\n        orderupdateForm.append(\"breadth\",this.state.width)\r\n        orderupdateForm.append(\"height\",this.state.height)\r\n        orderupdateForm.append(\"charge_type\",\"VAT\")\r\n        orderupdateForm.append(\"freight_charge\",this.state.fedex_charge)\r\n        orderupdateForm.append(\"actual_charge\",this.state.actual_charge)\r\n        orderupdateForm.append(\"current_status\",this.state.orderStatusSelected)\r\n        orderupdateForm.append(\"previous_status\",this.props.orderdata.current_status)\r\n        orderupdateForm.append(\"status\",\"Deactive\")\r\n        orderupdateForm.append(\"flag\",\"1\")\r\n        orderupdateForm.append(\"current_status\",this.state.orderStatusSelected)\r\n        let urlforOrderStatusUpdate = base_url+`boxes_received/${this.state.ordernumber}/`\r\n        const response = await Axios.patch(urlforOrderStatusUpdate,orderupdateForm, header)\r\n  \r\n        console.log(`order status update succesfully ${response.data}`)\r\n        this.setState({error:<Success message=\" Order Updated\"/>})\r\n      \r\n        M.toast({html: 'Order Updated Successfull',classes:\"white-text orange rounded\"});\r\n\r\n\r\n        //Updating The Product \r\n\r\n        this.state.productlist.forEach(async(item)=>{\r\n          console.log(\"productitem\")\r\n          console.log(item)\r\n          console.log(item.id, 'I AM THE ITEM GETTING UPDATED!!!!!!!!!!!!!!')\r\n\r\n          \r\n\r\n          try{\r\n            var productformdata = new FormData()\r\n            productformdata.append(\"order_id\",this.state.ordernumber)\r\n            productformdata.append(\"description\",item.productName)\r\n            productformdata.append(\"quantity\",item.productQuantity)\r\n            productformdata.append(\"unit_price\",item.productPrice)\r\n            productformdata.append(\"inspection_status\",\"okay\")\r\n            productformdata.append(\"status\",\"Active\")\r\n            productformdata.append(\"category\",item.productCategory)\r\n\r\n            if( typeof(item.id) === \"number\"  ){\r\n              const response_products = await Axios.patch(base_url+`products/${item.id}/`, productformdata,\r\n                header)\r\n              // alert(response.data)\r\n              console.log(\"Product added Successfully\")\r\n              this.setState({ error: <Success message=\" Order Status Updated\" /> })\r\n              M.toast({ html: 'Product Updation Successfull', classes: \"white-text blue rounded\" });\r\n              \r\n            }else{\r\n              \r\n              const response_addProduct = await Axios.post(base_url+`products/`, productformdata,\r\n              header )\r\n\r\n              M.toast({ html: 'Product Addition Successfull', classes: \"white-text blue rounded\" });\r\n              \r\n            }\r\n\r\n            \r\n            \r\n          }catch(error){\r\n            M.toast({html: 'Product Updation Failed',classes:\"white-text red rounded\"});\r\n              console.log(error)\r\n          }\r\n         \r\n        });\r\n        \r\n\r\n\r\n\r\n     \r\n        try{\r\n          var email_subject = \"invoice_missing\"\r\n           const status = this.state.orderStatusSelected\r\n           switch(status){\r\n             case \"IM\":\r\n              email_subject =\"invoice_missing\";\r\n              break;\r\n             case \"WFC\":\r\n              email_subject =\"consolidation\";\r\n              break;\r\n      \r\n      \r\n               \r\n           }\r\n          if (status===  \"IM\" || status === \"WFC\"){\r\n            const  emaildata= {\"type\" : email_subject,\r\n            \"ezz_id\" : this.state.customer_id,\r\n            \"order_id\" : orderid}\r\n\r\n\r\n            Axios({\r\n              method:'post',\r\n              url: base_url+'status_printer',\r\n              data: {\r\n                \"order_id\": orderid\r\n              }\r\n            }).then(function(response){\r\n              console.log(response)\r\n              console.log(\"printer APi success\");\r\n            }).catch(function(response){\r\n              console.log(response)\r\n              console.log('printer API failed');\r\n            })\r\n\r\n            Axios({\r\n              method:'post',\r\n              url: base_url+'whatsapp_templates',\r\n              data: emaildata,\r\n            }).then(\r\n              function(response){ \r\n                console.log(response)\r\n                console.log(\"whatsapp sent done\");\r\n              }\r\n            ).catch(\r\n              function(response){ \r\n                console.log(response)\r\n                console.log(\"whatsapp sent Failure\");\r\n              }\r\n            )\r\n\r\n\r\n            const response = await Axios.post(base_url+\"send_email/\",emaildata,\r\n          header)\r\n          console.log(response)\r\n          M.toast({html: 'Email Sent to '+response.data[\"Email to\"],classes:\"white-text red rounded\"});\r\n    \r\n          }\r\n         \r\n        }catch(error){\r\n      \r\n          M.toast({html: 'Email Sending Failed to'+ this.state.customer_id ,classes:\"white-text red rounded\"});\r\n        }\r\n      \r\n\r\n\r\n\r\n\r\n        // window.location.reload(false);\r\n      }catch(error){\r\n        M.toast({html: 'Order Updation Failed',classes:\"white-text red rounded\"});\r\n          console.log(error)\r\n          this.setState({error:<Error/>})\r\n      }\r\n\r\n      this.startRefresh();\r\n}\r\n\r\nupdateOrderDB=()=>{\r\n    let token =localStorage.getItem(\"token\")\r\n    const  header = {'Content-Type': 'application/json',\r\n    'Authorization':'Token '+token,\r\n    }\r\n    this.updateOrder(header)\r\n\r\n\r\n}\r\n\r\ngetfedexActualRate = async (weight,height,length,breadth)=>{\r\n    \r\n\r\n\r\n  try{\r\nlet token =localStorage.getItem(\"token\")\r\nlet config={ headers : {'Content-Type': 'multipart/form-data',\r\n'Authorization':'Token '+token,\r\n}\r\n}\r\n\r\n// Fetching user list on input change\r\nvar url= base_url+`fedex_actual_rates/?weight=${weight}&height=${height}&breadth=${breadth}&length=${length}&ezz_id=${this.state.customer_id}`\r\nvar response = await Axios.get(url,config)\r\nconsole.log(response.data)\r\nreturn response.data\r\n}catch(error){\r\n\r\n\r\n\r\nconsole.log(error.response.data)\r\n  \r\nif (error.response.status ===503 ){\r\n M.toast({html: \"\"+error.response.data.error,classes:\"white-text red rounded\"});\r\n}\r\n\r\n// return response.data\r\nreturn error.response.data\r\n}\r\n\r\n}\r\n\r\nhandleFormChange= async (ev) =>{\r\n  const target = ev.target\r\n  const name = target.name\r\n  console.log(ev.target.name)\r\n  console.log(ev.target.value)\r\n \r\n  // hide and show on YTA\r\n  if (target.value === \"YTA\"){\r\n    this.setState({\r\n      [name]: target.value,\r\n      weight: 0,\r\n      height:0,\r\n      fedex_charge:0,\r\n      width:0,\r\n      length:0,\r\n      actual_charge:0\r\n    });\r\n  }else{\r\n\r\n    if(target.name ===\"weight\" || \r\n    target.name ===\"height\" || target.name === \"width\"\r\n  || target.name === \"length\"\r\n    ){\r\n\r\n    this.setState({\r\n        [name]: target.value\r\n      });\r\n\r\n      var weight = this.state.weight\r\n      var width = this.state.width\r\n      var height = this.state.height\r\n      var length = this.state.length\r\n      var field = target.name;\r\n\r\n      switch (field) {\r\n        case \"weight\":\r\n          weight = target.value;\r\n          break;\r\n        case \"height\" :\r\n          height = target.value;\r\n          break;\r\n        case \"width\" :\r\n          width = target.value;\r\n          break;\r\n        case \"length\" :\r\n          length = target.value;\r\n          break;\r\n       \r\n      }\r\n\r\n      if(width < 0 || height <0 || weight < 0 || length <0 || this.state.actual_charge <0){\r\n        M.toast({html: \"values can not be negative\",classes:\"white-text red rounded\"});\r\n        return;\r\n      }\r\n\r\n\r\n      if((width!==\"\" && parseInt(width)!==0) && (height !==\"\" && parseInt(height) !==0) && (width !==\"\" && parseInt(width) !==0 ) && (length!==\"\" && parseInt(length)!==0)){\r\n        await this.setState({\r\n          showSpinner:true\r\n        })\r\n        var response =  await this.getfedexActualRate(weight,height,length,width)\r\n        console.log(response[\"freight_charges\"] + response[\"actual_charges\"])\r\n          this.setState({\r\n            fedex_charge:response[\"freight_charges\"],\r\n            actual_charge: response[\"actual_charges\"],\r\n            showSpinner:false\r\n          })\r\n      }\r\n     \r\n    }else{\r\n      this.setState({\r\n        [name]: target.value\r\n      });\r\n    }\r\n\r\n \r\n  }\r\n\r\n \r\n}\r\n\r\n\r\n\r\naddProductTolist = ()=>{\r\n  console.log(this.state.productname + this.state.productprice +this.state.productquantity)\r\n   var prodname =this.state.product_name\r\n   var prodquant =this.state.product_quantity\r\n   var prodcat =this.state.product_category\r\n   console.log(\"prody\")\r\n   console.log(prodname + prodquant+prodcat )\r\n\r\n   if(prodname === \"\" || prodquant === 0 || prodcat ===\"\"){\r\n    M.toast({html: 'Incorrect or Empty details',classes:\"white-text red rounded\"});\r\n   }else{\r\n    var elem = document.getElementById('addProductModal')\r\n    var instance = M.Modal.getInstance(elem);\r\n    instance.close();\r\n    let totalproducts = this.state.productlist.length + 1\r\n    \r\n    let newitem = {id:'item_'+totalproducts,productName:this.state.product_name,\r\n    productPrice:this.state.product_price ,\r\n    productQuantity:this.state.product_quantity,\r\n  productCategory:this.state.product_category\r\n  }\r\n\r\n    console.log(\"Product List\",this.state.productlist)\r\n   this.state.productlist.push(newitem)\r\n    this.setState({productlist: this.state.productlist})\r\n    \r\n  try {\r\n    // this.setState({productlisthtml:<ProductItemsList products={this.state.productlist}/>})\r\n    this.setState({product_name:\"\",product_price:0,product_quantity:0 })\r\n   M.toast({html: 'Added in list successfully',classes:\"white-text orange rounded\"})\r\n  } catch (error) {\r\n    M.toast({html: 'Couldnt be added',classes:\"white-text orange rounded\"})\r\n  }\r\n   \r\n\r\n   }\r\n\r\n}\r\n\r\n\r\n\r\n componentDidMount(){\r\n    M.AutoInit();\r\n}\r\n\r\n openModal = (products,product_category)=>{\r\n     console.log(\"inside editiordemodal\");\r\n    //  console.log(orderdata);\r\n    var elems = document.getElementById(\"editorderModel\");\r\n    var instance = M.Modal.init(elems);\r\n    console.log(\"openmodel\",products)\r\n    this.setState({productlist:products,\r\n      product_category_options:product_category})\r\n   \r\n\r\n    instance.open()\r\n    // orderselectionmodal\r\n}\r\ncloseModal = ()=>{\r\n    var elems = document.getElementById(\"editorderModel\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.close()\r\n}\r\n\r\n    render() {\r\n        const opts={};\r\n        opts['readOnly'] = 'readOnly';\r\n\r\n      const catlist = this.state.product_category_options;\r\n      if (catlist.length > 0) {\r\n        var categoryList = catlist.map((item, i) => {\r\n          return (\r\n            <option className=\"black-text\" key={i} value={item.category_id}>{item.category_name}</option>\r\n          )\r\n        }, this);\r\n      }\r\n\r\n\r\n\r\n        return(<>              {/* Edit product Table items */}\r\n          <EditProduct ref=\"editproduct\" rowNumber={this.state.rowNumber} status={this.state.orderStatusSelected}  orderId ={ this.state.orderid }\r\n          productDetails={this.state.selectItemDetails}\r\n           productcategory={this.state.product_category_options}\r\n           updateBtnClick={this.updateProduct}\r\n           />\r\n            <div id=\"editorderModel\" className=\"modal editorderModel modal-fixed-footer\">\r\n            <div className=\"modal-content\">\r\n\r\n            <h4 className=\"center orange-text\"> Edit Order </h4>\r\n            <Row>\r\n\r\n<Col xs={12}md={7} lg={7}>\r\n<div className=\"row\">\r\n<form className=\"col s12\">\r\n{this.state.error}\r\n<div className=\"row\">\r\n<div className=\"input-field col s6\">\r\n<input name=\"customer_id\" id=\"customer_id\" type=\"text\" className=\"autocomplete\" \r\nvalue={this.state.customer_id} readOnly \r\n// onChange={this.handleCustomerIDChange}\r\n/>\r\n\r\n<span className=\"helper-text\" data-error=\"wrong\" data-success=\"\">Customer Ezzid ex: Ezz000000</span>\r\n</div>\r\n\r\n</div>\r\n<div className=\"row\">\r\n<div className=\"input-field col s6\">\r\n\r\n<input name=\"order_date\" id=\"order_date\" type=\"text\"  className=\"datepicker\" \r\nvalue={this.state.order_date} onChange={this.handleFormChange}\r\n/>\r\n\r\n\r\n<span className=\"helper-text\" data-error=\"wrong\" data-success=\"\">Select the date </span>\r\n</div>\r\n<div className=\"input-field col s6\">\r\n<input name=\"received_date\" id=\"received_date\" type=\"text\" className=\"datepicker\"\r\nvalue={this.state.received_date} onChange={this.handleFormChange}\r\n/>\r\n\r\n<span className=\"helper-text\" data-error=\"wrong\" data-success=\"\">Select date, the order arrived at warehouse</span>\r\n</div>\r\n</div>\r\n<div className=\"row\">\r\n<div className=\"input-field col s6\">\r\n<input name=\"tracking_number\" id=\"tracking_number\" type=\"text\" className=\"\"\r\nvalue={this.state.tracking_number} onChange={this.handleFormChange}\r\n/>\r\n\r\n<span className=\"helper-text\" data-error=\"wrong\" data-success=\"\">Enter Tracking inbound Number</span>\r\n\r\n</div>\r\n<div className=\"input-field col s6\">\r\n<input name=\"shiper_order_number\" id=\"shiper_order_number\" type=\"text\" className=\"\"\r\nvalue={this.state.shiper_order_number} onChange={this.handleFormChange}\r\n/>\r\n\r\n<span className=\"helper-text\" data-error=\"wrong\" >Enter Shipper Order Number</span>\r\n</div> \r\n</div>\r\n{\r\n          this.state.showSpinner\r\n            ? < div className=\"center\">\r\n          \r\n            <Spinner animation=\"grow\" variant=\"primary\" size=\"sm\" />\r\n            <Spinner animation=\"grow\" variant=\"success\" size=\"sm\" />\r\n            <Spinner animation=\"grow\" variant=\"warning\" size=\"sm\" />\r\n          </div>\r\n            : null\r\n        }\r\n\r\n{this.state.orderStatusSelected !==\"YTA\" ?\r\n<div className=\"row\">\r\n<div className=\"input-field col s4\">\r\n<input name=\"weight\" id=\"weight\" type=\"number\" className=\"\"\r\nvalue={this.state.weight} onChange={this.handleFormChange}\r\n/>\r\n<label htmlFor=\"weight\" style={{marginLeft:'20%'}}>Weight</label>\r\n<span className=\"helper-text\" data-error=\"wrong\" >     Enter Weight in pounds</span>\r\n</div>\r\n<div className=\"input-field col s4\">\r\n<input name=\"height\" id=\"height\" type=\"number\" className=\"\"\r\nvalue={this.state.height} onChange={this.handleFormChange}\r\n/>\r\n<label htmlFor=\"height\" style={{marginLeft:'20%'}}>Height</label>\r\n<span className=\"helper-text\" data-error=\"wrong\" >      Enter Height in inches</span>\r\n</div>\r\n<div className=\"input-field col s4\">\r\n<input name=\"fedex_charge\" id=\"fedex_charge\" type=\"number\" className=\"\"\r\nvalue={this.state.fedex_charge} onChange={this.handleFormChange} {...opts} \r\n/>\r\n<label htmlFor=\"fedex_charge\" style={{marginLeft:'20%'}}>           Fedex Charge </label>\r\n<span className=\"helper-text\" data-error=\"wrong\" >Auto generated</span>\r\n</div>\r\n</div> : null}\r\n{this.state.orderStatusSelected !==\"YTA\" ?\r\n<div className=\"row\">\r\n<div className=\"input-field col s4\">\r\n<input name=\"width\" id=\"width\" type=\"number\" className=\"\"\r\nvalue={this.state.width} onChange={this.handleFormChange}\r\n/>\r\n<label htmlFor=\"width\" style={{marginLeft:'20%'}}>Width</label>\r\n<span className=\"helper-text\" data-error=\"wrong\" >         Enter Width in inches</span>\r\n</div>\r\n<div className=\"input-field col s4\">\r\n<input name=\"length\"  id=\"length\" type=\"number\" className=\"\"\r\nvalue={this.state.length} onChange={this.handleFormChange}\r\n/>\r\n<label htmlFor=\"length\" style={{marginLeft:'20%'}}>Length</label>\r\n<span className=\"helper-text\" data-error=\"wrong\" >       Enter Length in inches</span>\r\n</div>\r\n<div className=\"input-field col s4\">\r\n<input placeholder=\"\" name=\"actual_charge\" id=\"actual_charge\" type=\"number\"  className=\"\"\r\nvalue={this.state.actual_charge} disabled={this.state.orderStatusSelected === 'IM'} onChange={this.handleFormChange} \r\n/>\r\n<label htmlFor=\"actual_charge\" style={{marginLeft:'20%'}}>           Actual charges </label>\r\n<span className=\"helper-text\" data-error=\"wrong\" >Auto generated</span>\r\n</div>\r\n</div> : null}\r\n<div className=\"row\">\r\n<div className=\"col s6\">\r\n{/* Order Status Radio Buttons */}\r\n<h4>Order Status</h4>\r\n<p>\r\n<label>\r\n<input name=\"orderStatusSelected\" value=\"IM\" type=\"radio\" \r\nchecked={this.state.orderStatusSelected ===\"IM\"} onChange={this.handleFormChange}/>\r\n<span>Invoice Missing</span>\r\n</label>\r\n</p>\r\n<p>\r\n<label>\r\n<input name=\"orderStatusSelected\" value=\"YTA\" type=\"radio\" \r\nchecked={this.state.orderStatusSelected ===\"YTA\"} onChange={this.handleFormChange}/>\r\n<span>Order Yet to Arrive</span>\r\n</label>\r\n</p>\r\n<p>\r\n<label>\r\n<input name=\"orderStatusSelected\" value =\"RTM\" type=\"radio\" \r\nchecked={this.state.orderStatusSelected ===\"RTM\"} onChange={this.handleFormChange}\r\n/>\r\n<span>Ready to Manifest</span>\r\n</label>\r\n</p>\r\n<p>\r\n            <label>\r\n                <input name=\"orderStatusSelected\" value =\"WFC\" type=\"radio\" \r\n                 checked={this.state.orderStatusSelected ===\"WFC\"} onChange={this.handleFormChange}\r\n                />\r\n                <span>Wait for Consolidation</span>\r\n            </label>\r\n            </p>\r\n\r\n<p>\r\n<label>\r\n<input name=\"orderStatusSelected\" value =\"UID\" type=\"radio\" \r\nchecked={this.state.orderStatusSelected ===\"UID\"} onChange={this.handleFormChange}\r\n/>\r\n<span>Box UnIdentified</span>\r\n</label>\r\n</p>\r\n\r\n</div>\r\n<div className=\"col s6\">\r\n{/* Payment Tyoe Radio Buttons */}\r\n<h4>Payment Type</h4>\r\n<p>\r\n<label>\r\n<input name=\"paymentTypeSelected\" value=\"cash\" type=\"radio\"  \r\nchecked={this.state.paymentTypeSelected ===\"cash\"} onChange={this.handleFormChange}\r\n/>\r\n<span>Cash</span>\r\n</label>\r\n</p>\r\n<p>\r\n<label>\r\n<input name=\"paymentTypeSelected\" value=\"card\" type=\"radio\" \r\nchecked={this.state.paymentTypeSelected ===\"card\"} onChange={this.handleFormChange} />\r\n<span>Card</span>\r\n</label>\r\n</p>\r\n{/* {this.state.orderStatusSelected}\r\n{this.state.paymentTypeSelected}\r\n{this.state.order_date}\r\n{this.state.received_date}\r\n{ this.state.ordernumbermerge} */}\r\n\r\n</div>\r\n</div>\r\n</form>\r\n\r\n</div>\r\n</Col>\r\n{/* right side column starts here */}\r\n<Col xs={12}md={5} lg={5}>\r\n\r\n\r\n     <CustomerDetailCard \r\n     info = {this.state.customerinfo}\r\n      />\r\n\r\n <Row>\r\n <Col>\r\n <h4>Product Details</h4>\r\n </Col>\r\n {/* add product column for future use */}\r\n <Col>\r\n <Nav className=\"right\">\r\n<Nav.Link className=\"red-text modal-trigger \"  href=\"#addProductModal\">\r\nAdd<Image className=\"red-text ml-1\" src=\"assets/images/plus-circle-red.svg\"/></Nav.Link>\r\n</Nav>\r\n </Col>\r\n\r\n</Row>\r\n{/* product card to be shown here */}\r\n{/* <div className=\"productlistEditOrderDiv\">{this.state.productlisthtml}</div> */}\r\n<div className=\"productlistDiv \"><ProductItemsList orderid={this.state.orderid} products={this.state.productlist} rowclick={this.handletableClick}/></div>\r\n                    <div className=\"right\"><b>Total Price: </b>$\r\n                    {\r\n                    ( ()=>{\r\n                      var totalprice =0;\r\n                      this.state.productlist.forEach(function(item){\r\n                        totalprice = totalprice + parseInt(item.productPrice ) *parseInt(item.productQuantity ) \r\n                      })\r\n                      return totalprice\r\n                    })()\r\n                      \r\n                      }\r\n</div>\r\n</Col>\r\n\r\n{/* right side columns ends here */}\r\n\r\n</Row> \r\n        \r\n         \r\n     \r\n            </div>\r\n            <div className=\"modal-footer\">\r\n           \r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n            <Button id=\"closeEditOrderBtn\" variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Close</Button> \r\n            <Button id =\"updateOrderBtn\" variant=\"outline-primary\" className=\"mr-2 btn modal-close\" onClick={this.updateOrderDB}> Update</Button>\r\n        \r\n          </ButtonGroup>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          {/* Model for adding products STARTS here */}\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addProductModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n            <h4 className=\"center orange-text\"> Add Product </h4>\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"product_name\" id=\"product_name\" type=\"text\" value={this.state.product_name} onChange={this.handleFormChange} className=\"\" />\r\n                        <label htmlFor=\"product_name\" className=\"black-text\" >Product Name</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter a valid Product Name</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"product_price\" disabled={this.state.orderStatusSelected === \"IM\"} id=\"product_price\" min=\"0\" type=\"number\" value={this.state.product_price} onChange={this.handleFormChange} className=\"\" />\r\n                        <label htmlFor=\"product_price\" className=\"black-text\">Product Price</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter numbers</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"product_quantity\" id=\"product_quantity\" min=\"0\" type=\"number\" value={this.state.product_quantity} onChange={this.handleFormChange} className=\"\" />\r\n                        <label htmlFor=\"product_quantity\" className=\"black-text\">Quantity</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter number of products items</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n\r\n                  <Row>\r\n                    <Col>\r\n\r\n                      <div id=\"categroydiv\" className=\"input-field col s6 offset-s3 center\">\r\n                        {/* <p>Select Category</p> */}\r\n                        <select id='category_name_select' name=\"product_category\" className=\"browser-default\" onChange={this.handleFormChange}>\r\n                          <option value=\"\" disabled selected>Choose Category</option>\r\n\r\n                          {categoryList}\r\n\r\n                        </select>\r\n                        {/* <label>Select Category</label> */}\r\n\r\n                      </div>\r\n\r\n\r\n                    </Col>\r\n\r\n                  </Row>\r\n\r\n\r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\" >\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id=\"cancelItemAddBtn\" variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Cancel</Button>\r\n              <Button id=\"addItemBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addProductTolist}> Add</Button>\r\n\r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {/* Model for adding produts ENDS here */}            \r\n\r\n\r\n              </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditOrder;\r\n","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\EditBoxModal.js",["288","289","290","291","292"],"import React, {Component} from 'react';\r\nimport {Row, Col,ButtonGroup,Button,Spinner} from 'react-bootstrap';\r\nimport M from 'materialize-css';\r\nimport Axios from \"axios\";\r\n\r\n//css is in orderlist.css\r\n\r\nclass EditBox extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            boxid:this.props.boxid,\r\n            boxStatusSelected:\"WFC\",\r\n            Products:[]\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        M.AutoInit()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n\r\n        if (this.props.boxid !== prevProps.boxid) {\r\n\r\n                this.setState({\r\n                    boxid:this.props.boxid\r\n                })\r\n        }}\r\n    openModal = ()=>{\r\n        console.log(\"inside editboxmodal\");\r\n       //  console.log(orderdata);\r\n       var elems = document.getElementById(\"editboxModel\");\r\n       var instance = M.Modal.init(elems);\r\n       instance.open()\r\n       // orderselectionmodal\r\n   }\r\n   closeModal = ()=>{\r\n       var elems = document.getElementById(\"editboxModel\");\r\n       var instance = M.Modal.init(elems);\r\n       instance.close()\r\n   }\r\n\r\n\r\n\r\n   handleFormChange=(event)=>{\r\n    const name = event.target.name\r\n    console.log(name);\r\n    const value = event.target.value\r\n    console.log(value)\r\n    this.setState(\r\n            { [name] : value }\r\n        )\r\n\r\n        //console.log(this.state.boxStatusSelected, 'show status here')\r\n\r\n   }\r\n   //http://3.131.16.17/api/v1/ezzytrace/boxes_received/\r\n   updateBoxrDB = async()=>{\r\n       let localBoxStatus=this.state.boxStatusSelected;\r\n\r\n    \r\n    let token =localStorage.getItem(\"token\")\r\n    let config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token}\r\n        \r\n      };\r\n             Axios({\r\n                method:\"GET\",\r\n                url: `http://3.131.16.17/api/v1/ezzytrace/boxes_out/${this.state.boxid}/`\r\n            })\r\n            .then(function(response){\r\n                console.log(response.data.products);\r\n           // console.log(this.state.boxStatusSelected)\r\n                var product=response.data.products;\r\n                console.log(product);\r\n               // this.setState({Products: product});\r\n\r\n               product.map(key=>{\r\n                   console.log('i am inside map')\r\n                  // console.log(this.state.boxStatusSelected)\r\n                    Axios({\r\n                        method: \"patch\",\r\n                        url: `http://3.131.16.17/api/v1/ezzytrace/boxes_received/${key.order_id}/ `,\r\n                        data: {\r\n                          \r\n                            \"current_status\" : localBoxStatus\r\n                            \r\n                        },\r\n\r\n                    \r\n\r\n                       // headers: { 'Content-Type': 'application/json' , 'Authorization':'Token '+token}\r\n                    }).then(function(response){\r\n                        console.log(response);\r\n                        console.log('updation successfull');\r\n                        M.toast({html: 'Box updation Successfull',classes:\"white-text blue rounded\"});\r\n                    \r\n                    }).catch(function(response){\r\n                        console.log(response);\r\n                        console.log('failure');\r\n                        M.toast({html: 'Box updation Failed',classes:\"white-text red rounded\"});\r\n                    })\r\n                } )\r\n\r\n               \r\n\r\n    }).catch(function(response){\r\n        console.log(response);\r\n    })\r\n\r\n    Axios({\r\n        method:\"patch\",\r\n        url: `http://3.131.16.17/api/v1/ezzytrace/boxes_out/${this.state.boxid}/`,\r\n        data: {\r\n            \"box_status\" : \"DISC\"\r\n        }\r\n    }).then(function(response){\r\n        console.log(response);\r\n        console.log('discard success');\r\n        //M.toast({html: 'Box Discarded Successfully',classes:\"white-text blue rounded\"});\r\n    }).catch(function(response){\r\n        console.log(response);\r\n        console.error('discard error');\r\n        //M.toast({html: 'Box discard failed',classes:\"white-text red rounded\"});\r\n    })\r\n\r\n\r\n}\r\n//        try {\r\n//            const  boxupdate = {\"box_status\": this.state.boxStatusSelected}\r\n//            let urlboxUpdate = `http://3.131.16.17/api/v1/ezzytrace/boxes_out/${this.state.boxid}/`\r\n//     await Axios.patch(urlboxUpdate,boxupdate, config)\r\n//     M.toast({html: 'Box updation Successfull',classes:\"white-text blue rounded\"});\r\n//        } catch (error) {\r\n//         M.toast({html: 'Box updation failed'+error.response.status,classes:\"white-text blue rounded\"});\r\n//        }\r\n//    }\r\nrender(){\r\n    return(\r\n    \r\n      \r\n      <div id=\"editboxModel\" className=\"modal editboxModel  modal-fixed-footer\">\r\n      <div className=\"modal-content \">\r\n          <div className=\"\">\r\n\r\n        \r\n      <h4 className=\"center orange-text\"> Edit Box </h4>\r\n\r\n\r\n\r\n    <form >\r\n\r\n    \r\n      <div className=\"row \">\r\n        <div className=\"col  s6 l6\">\r\n            {/* Order Status Radio Buttons */}\r\n                <h4>Order Status</h4>\r\n                <p>\r\n            <label>\r\n                <input name=\"boxStatusSelected\" value=\"WFC\" type=\"radio\" \r\n                checked={this.state.boxStatusSelected ===\"WFC\"} onChange={this.handleFormChange}/>\r\n                <span>Waiting for Consolidation</span>\r\n            </label>\r\n            </p>\r\n            <p> \r\n            <label>\r\n                <input name=\"boxStatusSelected\" value=\"RTM\" type=\"radio\" \r\n                 checked={this.state.boxStatusSelected ===\"RTM\"} onChange={this.handleFormChange}/>\r\n                <span >Ready To Manifest</span>\r\n            </label>\r\n            </p>\r\n        \r\n        </div>\r\n        </div>\r\n\r\n\r\n        </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n     \r\n      <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n      <Button id=\"closeEditBoxBtn\" variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Close</Button> \r\n      <Button id =\"updateBoxBtn\" variant=\"outline-primary\" className=\"mr-2 btn modal-close\" \r\n       onClick={this.updateBoxrDB}\r\n      > Update</Button>\r\n  \r\n    </ButtonGroup>\r\n      </div>\r\n      </div>\r\n\r\n     \r\n    )\r\n}\r\n\r\n}\r\nexport default EditBox;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddCountry.js",["293","294"],"\r\nimport React,{Component,Fragment} from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport Axios from \"axios\"\r\nimport {Table,Row,Col,Image,Nav,ButtonGroup,Button} from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\n\r\n// import AddCountry from './CountryModal';\r\nimport './addcountry.css';\r\n\r\n\r\n\r\nclass CountryFrag extends Component{\r\n\r\nconstructor(props){\r\n    super (props);\r\n    this.state=({countryname:\"\",countrycode:\"\",countrytelecode:\"\",fexdexcode:\"\" , \r\n    countrytelelength:10,\r\n    countrydata:this.props.countrytable,error:\"\",newCountrycode:\"\",\r\n    editRow: false, main:\"\", keyId:\"\", thresh_value:\"\"\r\n  })\r\n  console.log(\"in add country\")\r\nconsole.log(this.props.countrytable)\r\n}   \r\nhandleCountryNameChange =  (e)=> {\r\n  e.preventDefault()\r\n    this.setState({countryname: e.target.value})\r\n }\r\n\r\n handleContryCodeChange= (e)=>{\r\n    this.setState({countrycode: e.target.value})\r\n }\r\n handleFedecCodeChange= (e)=>{\r\n    this.setState({fexdexcode: e.target.value})\r\n }\r\nhandleCountryTeleCode= (e) =>{\r\n  this.setState({countrytelecode:e.target.value})\r\n}\r\n\r\nhandleCountryTeleLength= (e) =>{\r\n  this.setState({countrytelelength:e.target.value})\r\n}\r\nhandleThresholdChange= (e) =>{\r\n  this.setState({thresh_value:e.target.value})\r\n}\r\n\r\n//EDIT OPTION START\r\nhandleEditOption = (e) => {\r\n  this.setState({editRow:true})\r\n  var elems = document.getElementById(\"addCountryModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n\r\n  let selectedRowIndex ;\r\n              e = e || window.event;\r\n              var data = [];\r\n              var target = e.srcElement || e.target;\r\n              // console.log(target.nodeName)\r\n              while (target && target.nodeName !== \"TR\") {\r\n                  target = target.parentNode;\r\n                  selectedRowIndex= target.sectionRowIndex\r\n                  console.log(\"Clicked row\",target.sectionRowIndex)\r\n                  // console.log(target.parentNode.index)\r\n              }\r\n              if (target) {\r\n                  var cells = target.getElementsByTagName(\"td\");\r\n                  for (var i = 0; i < cells.length; i++) {\r\n                      data.push(cells[i].innerHTML);\r\n                  }\r\n              }\r\n              // let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[0])]\r\n              console.log(data);              \r\n              this.setState({mainId: data[0], keyId: data[1]})\r\n              this.setState({\r\n                countrycode:data[1], countryname:data[2],\r\n                countrytelecode:data[3],fexdexcode:data[5],\r\n                countrytelelength: data[4], thresh_value: data[6]\r\n              })\r\n}\r\nopenCountryDetailsModal =  ()=>{\r\n  this.setState({editRow:false})\r\n\r\n  var elems = document.getElementById(\"addCountryModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n    \r\n}\r\ncloseModal = ()=>{\r\n  var elems = document.getElementById(\"addCountryModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.close();\r\n  this.setState({editRow:false})\r\n  this.setState({countryname:\"\",countrycode:\"\",countrytelecode:\"\",fexdexcode:\"\",thresh_value:\"\" })\r\n\r\n}\r\nupdateCountryDetailsDB = async () => {\r\n\r\n  // let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n  let url = base_url+`countries/${this.state.keyId}/`\r\n\r\n  // console.log(this.state.statename + this.state.statecode + this.state.countryname)\r\n  var countryformdata = new FormData()\r\n    countryformdata.append('country_id',this.state.countrycode)\r\n    countryformdata.append('name',this.state.countryname)\r\n    countryformdata.append('telecode',this.state.countrytelecode)\r\n    countryformdata.append('tele_length',this.state.countrytelelength.toString())\r\n    countryformdata.append('fedex_code',this.state.fexdexcode)\r\n    countryformdata.append('threshold_weight',this.state.thresh_value)\r\n    countryformdata.append('status',\"Active\")\r\n\r\n\r\n\r\n  // @Todo: APi to be called to save data for state\r\n\r\n  try {\r\n    let token = localStorage.getItem(\"token\")\r\n    var config = {\r\n      headers: { \r\n        'Content-Type': 'multipart/form-data' , \r\n        'Authorization':'Token '+token},\r\n      \r\n    };\r\n    const response = await Axios.put(url, countryformdata, config)\r\n\r\n    let itemIndex = parseInt(this.state.mainId) - 1\r\n    this.state.countrydata.splice(itemIndex, 1, response.data)\r\n    \r\n    // this.state.countrydata.unshift(response.data)\r\n    var elem = document.getElementById('addCountryModal')\r\n    var instance = M.Modal.getInstance(elem);\r\n    instance.close();\r\n    M.toast({ html: 'Updated Country Successfully.' , classes: \"white-text orange rounded\" })\r\n    this.setState({countryname:\"\",countrycode:\"\",countrytelecode:\"\",fexdexcode:\"\", thresh_value:\"\" })\r\n    this.setState({\r\n      error: \"\",\r\n      editRow: false\r\n    })\r\n  } catch (err) {\r\n    this.setState({\r\n      error: \"OH Snap! Something is Wrong.Please try again\",\r\n      editRow: false\r\n    })\r\n    M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n    console.log(err.message)\r\n  }\r\n\r\n}\r\n//EDIT OPTION END\r\n\r\n\r\naddcountryToDB = async (event)=>{\r\n    event.preventDefault();\r\n    console.log(this.state.countryname + this.state.countrycode+ this.state.countrytelecode +this.state.fexdexcode)\r\n    var countryformdata = new FormData()\r\n    countryformdata.append('country_id',this.state.countrycode)\r\n    countryformdata.append('name',this.state.countryname)\r\n    countryformdata.append('telecode',this.state.countrytelecode)\r\n    countryformdata.append('tele_length',this.state.countrytelelength.toString())\r\n    countryformdata.append('fedex_code',this.state.fexdexcode)\r\n    countryformdata.append('threshold_weight',this.state.thresh_value)\r\n    countryformdata.append('status',\"Active\")\r\n \r\n    let url = base_url+'countries/'\r\n    \r\n    try{\r\n      let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { \r\n        'Content-Type': 'multipart/form-data' , \r\n        'Authorization':'Token '+ token},        \r\n      };\r\n      const response = await Axios.post(url, countryformdata, config)\r\n      console.log(response)\r\n      this.state.countrydata.unshift(response.data)\r\n      var elem = document.getElementById('addCountryModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      this.setState({countryname:\"\",countrycode:\"\",countrytelecode:\"\",fexdexcode:\"\",thresh_value:\"\" })\r\n      // @Todo: APi to be called to save data\r\n      M.toast({html: 'Added Country Successfully',classes:\"white-text orange rounded\"})\r\n\r\n\r\n    }catch(err){\r\nthis.setState({\r\n  error:\"OH Snap! Something is Wrong.Please try again\"\r\n})\r\nM.toast({html: 'Please Try Again!',classes:\"white-text red rounded\"})\r\n\r\nconsole.log(err.message)\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\ncomponentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n}\r\nrender(){\r\n\r\n    var sr_no = 0\r\n    const countrytable = this.state.countrydata.map((country)=>{\r\n       sr_no=sr_no+1\r\n      return(\r\n        <Fragment key={sr_no}>\r\n       <tr  >\r\n        <td>{sr_no}</td>\r\n        <td>{country.country_id}</td>\r\n        <td>{country.name}</td>\r\n        <td>{country.telecode}</td>\r\n        <td>{country.tele_length}</td>\r\n        <td>{country.fedex_code}</td>\r\n        <td>{country.threshold_weight}</td>\r\n        <td onClick={this.handleEditOption}><a title = \"Edit\"><EditOutlined/></a></td>   \r\n        <td className=\"hide\">{country.id}</td>\r\n      </tr>\r\n        </Fragment>\r\n      \r\n      )\r\n    })\r\n\r\n    const table_render =  <Table hover> \r\n    <thead>\r\n      <tr>        \r\n        <th>Sr. No.</th>\r\n        <th>Country ID</th>\r\n        <th>Country Name</th>\r\n        <th>Country Tele Code</th>\r\n        <th>Tele length</th>\r\n        <th>Fedex Code</th>\r\n        <th>Threshold</th>\r\n        <th>Edit</th>                 \r\n\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    {countrytable}\r\n\r\n    </tbody>\r\n  </Table>\r\n\r\n    return (\r\n<Fragment>\r\n    <br></br>\r\n    <br></br>\r\n    {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n   \r\n\r\n\r\n\r\n     {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addCountryModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n            <h4 className=\"center orange-text\"> Add Country </h4>\r\n            <Row>\r\n              <Col xs={12} >\r\n                <p className=\"center red-text\">{this.state.error}</p>\r\n                <form>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input id=\"country_name\" type=\"text\" value={this.state.countryname} onChange={this.handleCountryNameChange} className=\"\" />\r\n                        <label htmlFor=\"country_name\" className=\"black-text\" >Country Name</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter a valid Country Name</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input id=\"country_code\" type=\"text\" value={this.state.countrycode} onChange={this.handleContryCodeChange} className=\"\" />\r\n                        <label htmlFor=\"country_code\" className=\"black-text\">Country Code</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter alphanumeric code</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input id=\"country_telecode\" type=\"text\" value={this.state.countrytelecode} onChange={this.handleCountryTeleCode} className=\"\" />\r\n                        <label htmlFor=\"country_telecode\" className=\"black-text\">Country TeleCode</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter Country telecode ex:0091 for India</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input id=\"fedex_code\" type=\"text\" value={this.state.fexdexcode} onChange={this.handleFedecCodeChange} className=\"\" />\r\n                        <label htmlFor=\"fexdex_code\" className=\"black-text\">FedEx Code</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter two digit FedEx code</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input id=\"country_tele_length\" type=\"number\" value={this.state.countrytelelength} onChange={this.handleCountryTeleLength} className=\"\" />\r\n                        <label htmlFor=\"country_tele_length\" className=\"black-text\">Phone number length</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter total digits</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input id=\"threshValue\" type=\"text\" value={this.state.thresh_value} onChange={this.handleThresholdChange} className=\"\" />\r\n                        <label htmlFor=\"threshValue\" className=\"black-text\">Threshold</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Threshold weight for the country</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id=\"cancelCountryBtn\" variant=\"outline-secondary\" className=\"mr-4 btn modal-close \" onClick={this.closeModal} >Cancel</Button>\r\n              {\r\n                this.state.editRow\r\n                  ? <Button id=\"updateCountryBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.updateCountryDetailsDB}>Update</Button>\r\n                  : <Button id=\"addCountryBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addcountryToDB}> Add</Button>\r\n              }\r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {/* {this.props.countrytable} */}\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n\r\n              <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text modal-trigger \" onClick={this.openCountryDetailsModal}>\r\n                  Add Country Details<Image className=\"red-text ml-1\" src=\"assets/images/plus-circle-red-m.svg\" /></Nav.Link>\r\n              </Nav>\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n</Fragment>\r\n\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default CountryFrag;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddSlab.js",["295"],"\r\nimport React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from 'axios';\r\n// import AddCountry from './CountryModal';\r\nimport './addSlab.css';\r\n\r\n\r\n\r\nclass SlabFrag extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      countryName: \"\", rangeInitial: \"\", rangeFinal: \"\",\r\n      unitCharge: \"\", markup: \"\", \r\n      slabdata: this.props.slabdata, \r\n      countrylist: this.props.countrylist, \r\n      countrycodelist: this.props.country_code_list, error: \"\",\r\n      countryId:\"\", mainId:\"\", keyId:\"\", editRow: false\r\n    })\r\n\r\n  }\r\n  handleCountryNameChange = (e) => {\r\n\r\n    let selected_countryName = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n\r\n    this.setState({ countryName: e.target.value})\r\n    this.setState({ countryId: selected_countryName})\r\n  }\r\n\r\n  handleRangeInitialChange = (e) => {\r\n    this.setState({ rangeInitial: e.target.value })\r\n  }\r\n\r\n  handleRangeFinalChange = (e) => {\r\n    this.setState({ rangeFinal: e.target.value })\r\n  }\r\n  handleUnitchargeChange = (e) => {\r\n    this.setState({ unitCharge: e.target.value })\r\n  }\r\n  handleMarkupChange = (e) => {\r\n    this.setState({ markup: e.target.value })\r\n  }\r\n\r\n\r\n//EDIT OPTION START\r\nhandleEditOption = (e) => {\r\n  this.setState({editRow:true})\r\n  var elems = document.getElementById(\"addSlabModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n\r\n  let selectedRowIndex ;\r\n              e = e || window.event;\r\n              var data = [];\r\n              var target = e.srcElement || e.target;\r\n              // console.log(target.nodeName)\r\n              while (target && target.nodeName !== \"TR\") {\r\n                  target = target.parentNode;\r\n                  selectedRowIndex= target.sectionRowIndex\r\n                  console.log(\"Clicked row\",target.sectionRowIndex)\r\n                  // console.log(target.parentNode.index)\r\n              }\r\n              if (target) {\r\n                  var cells = target.getElementsByTagName(\"td\");\r\n                  for (var i = 0; i < cells.length; i++) {\r\n                      data.push(cells[i].innerHTML);\r\n                  }\r\n              }\r\n              let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[5])]\r\n              // let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[3])]\r\n              \r\n              this.setState({editRowNumer: selectedRowIndex})\r\n              console.log(selectedRowIndex);\r\n              this.setState({mainId: data[0], keyId: data[7]})\r\n              this.setState({\r\n                rangeInitial: data[1], rangeFinal: data[2], \r\n                unitCharge: data[3], markup: data[4],\r\n                countryName: country_name\r\n              })\r\n              console.log(data);\r\n              // console.log(country_name);\r\n              console.log(data[5]);\r\n\r\n}\r\nopenAddSlabDetailsModal =  ()=>{\r\n  this.setState({editRow:false})\r\n  this.setState({error :\"\"})\r\n\r\n  var elems = document.getElementById(\"addSlabModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n    \r\n}\r\ncloseModal = ()=>{\r\n  var elems = document.getElementById(\"addSlabModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.close();\r\n  this.setState({editRow:false})\r\n  this.setState({error :\"\"})\r\n  this.setState({ countryName: \"\", rangeFinal: \"\", rangeInitial: \"\", unitCharge: \"\", markup: \"\" })\r\n\r\n}\r\nupdateSlabDetailsDB = async () => {\r\n\r\n  let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n  let url = base_url+`slabcodes/${this.state.keyId}/`\r\n\r\n  // console.log(this.state.statename + this.state.statecode + this.state.countryname)\r\n  var slabformdata = new FormData()\r\n  slabformdata.append(\"country\", country_code)\r\n  slabformdata.append(\"range_initial\", this.state.rangeInitial)\r\n  slabformdata.append(\"range_final\", this.state.rangeFinal)\r\n  slabformdata.append(\"unit_charge\", this.state.unitCharge)\r\n  slabformdata.append(\"markup\", this.state.markup)\r\n  slabformdata.append(\"status\", \"Active\")\r\n\r\n\r\n  // @Todo: APi to be called to save data for state\r\n\r\n  try {\r\n    let token = localStorage.getItem(\"token\")\r\n    var config = {\r\n      headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n      \r\n    };\r\n    const response = await Axios.put(url, slabformdata, config)\r\n\r\n    let itemIndex = parseInt(this.state.mainId) - 1\r\n    this.state.slabdata.splice(itemIndex, 1, response.data)    \r\n    \r\n    // this.state.slabdata.unshift(response.data)\r\n    var elem = document.getElementById('addSlabModal')\r\n    var instance = M.Modal.getInstance(elem);\r\n    instance.close();\r\n    M.toast({ html: 'Updated Slab Successfully.' , classes: \"white-text orange rounded\" })\r\n    this.setState({ countryName: \"\", rangeFinal: \"\", rangeInitial: \"\", unitCharge: \"\", markup: \"\" })\r\n\r\n    this.setState({\r\n      error: \"\",\r\n      editRow: false\r\n    })\r\n  } catch (err) {\r\n    this.setState({\r\n      error: \"OH Snap! Something is Wrong.Please try again\",\r\n      editRow: false\r\n    })\r\n    M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n    console.log(err.message)\r\n  }\r\n\r\n}\r\n//EDIT OPTION END\r\n\r\n\r\n  addSlabToDB = async () => {\r\n    let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n\r\n    var slabformdata = new FormData()\r\n    slabformdata.append(\"country\", country_code)\r\n    slabformdata.append(\"range_initial\", this.state.rangeInitial)\r\n    slabformdata.append(\"range_final\", this.state.rangeFinal)\r\n    slabformdata.append(\"unit_charge\", this.state.unitCharge)\r\n    slabformdata.append(\"markup\", this.state.markup)\r\n    slabformdata.append(\"status\", \"Active\")\r\n\r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n        \r\n      };\r\n      const response = await Axios.post(base_url+'slabcodes/', slabformdata, config)\r\n      this.state.slabdata.unshift(response.data)\r\n\r\n      var elem = document.getElementById('addSlabModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      this.setState({ countryName: \"\", rangeFinal: \"\", rangeInitial: \"\", unitCharge: \"\", markup: \"\" })\r\n      M.toast({ html: 'Added SLAB Successfully! Please see Updated Table', classes: \"white-text orange rounded\" })\r\n\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\"\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n  render() {\r\n\r\n\r\n\r\n    var uniquekey = 0\r\n    const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n      console.log(\"countrylist\", country)\r\n      return (\r\n        <option className=\"black-text\" key={uniquekey++} value={country}>{country}</option>\r\n      )\r\n    })\r\n\r\n    var sr_no=0\r\n    const statetable = this.state.slabdata.map((slab) => {\r\n      sr_no=sr_no+1; \r\n      return (\r\n        <Fragment key={sr_no}>\r\n          <tr  >\r\n            <td>{sr_no}</td>\r\n            <td>{slab.range_initial}</td>\r\n            <td>{slab.range_final}</td>\r\n            <td>{slab.unit_charge}</td>\r\n            <td>{slab.markup}</td>\r\n            <td>{slab.country}</td>\r\n            <td onClick={this.handleEditOption}><a title = \"Edit\"><EditOutlined/></a></td>  \r\n            <td className=\"hide\">{slab.id}</td>\r\n          </tr>\r\n        </Fragment>\r\n\r\n      )\r\n    })\r\n\r\n    const table_render = <Table hover >\r\n      <thead>\r\n        <tr>\r\n          <th>Sr.No.</th>\r\n          <th>Range Initial (LBS)</th>\r\n          <th>Range Final (LBS))</th>\r\n          <th>Unit charge</th>\r\n          <th>Markup</th>\r\n          <th>Country</th>\r\n          <th>Edit</th>                 \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {statetable}\r\n\r\n      </tbody>\r\n    </Table>\r\n\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <br></br>\r\n        <br></br>\r\n        {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addSlabModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n          <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update Slab Details\" : \"Add Slab Details \"}</h4>\r\n\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <p className=\"center red-text\">{this.state.error}</p>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n\r\n\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div id=''>\r\n                          {\r\n                            this.state.editRow\r\n                              ? <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" value={this.state.countryName} onChange={this.handleCountryNameChange}>\r\n                                <option value=\"\" disabled >Choose Country</option>\r\n                                {selectCounrtyOptions}\r\n                              </select>\r\n                              : <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" defaultValue={'DEFAULT'} onChange={this.handleCountryNameChange}>\r\n                                <option value=\"DEFAULT\" disabled >Choose Country</option>\r\n                                {selectCounrtyOptions}\r\n                              </select>\r\n                          }\r\n                          <label>Select Country</label>\r\n                        </div>\r\n                      </div>  \r\n                      </Col>\r\n                  </Row>\r\n\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"rangeinitial\" id=\"range_initial\" className=\"materialize-textarea\" type=\"text\" value={this.state.rangeInitial} onChange={this.handleRangeInitialChange} />\r\n                        <label htmlFor=\"range_initial\" className=\"black-text\">Enter Initial Range</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Lower LBS</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"rangefinal\" id=\"rangel_final\" type=\"text\" value={this.state.rangeFinal} onChange={this.handleRangeFinalChange} className=\"\" />\r\n                        <label htmlFor=\"range_final\" className=\"black-text\">Enter Final Range</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Upper LBS</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"unitcharge\" id=\"unit_charge\" type=\"text\" value={this.state.unitCharge} onChange={this.handleUnitchargeChange} className=\"\" />\r\n                        <label htmlFor=\"unit_charge\" className=\"black-text\">Enter Unit Charge</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"markup\" id=\"mark_up\" type=\"text\" value={this.state.markup} onChange={this.handleMarkupChange} className=\"\" />\r\n                        <label htmlFor=\"mark_up\" className=\"black-text\">Enter Markup</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id='cancelSlabbtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \" onClick={this.closeModal} >Cancel</Button>\r\n              {\r\n              this.state.editRow\r\n              ?<Button id=\"updateSlabBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick = {this.updateSlabDetailsDB}>Update</Button>\r\n              :<Button id=\"addSlabBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addSlabToDB}> Add</Button>\r\n              }   \r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n\r\n              <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text modal-trigger \" onClick={this.openAddSlabDetailsModal}>\r\n                  Add Slab Details<Image className=\"red-text mr-auto\" src=\"assets/images/plus-circle-red-m.svg\" /></Nav.Link>\r\n              </Nav>\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SlabFrag;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddCategory.js",["296","297"],"\r\nimport React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from 'axios';\r\nimport './addcategory.css';\r\n\r\n\r\nclass CategoryFrag extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      categoryId: \"\", categoryName: \"\", customDuty: \"\",\r\n      vat: \"\", countryId: \"\", categorydata: this.props.categorydata\r\n      , countrylist: this.props.countrylist, countrycodelist: this.props.country_code_list, error: \"\",\r\n      countryName:\"\", editRow: false, mainId:\"\", keyId:\"\"\r\n    })\r\n\r\n  }\r\n\r\n  handleCountryNameChange = (e) => {\r\n\r\n    let selected_countryName = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n\r\n    this.setState({ countryName: e.target.value})\r\n    this.setState({ countryId: selected_countryName})\r\n  }\r\n\r\n  handleCategoryIdChange = (e) => {\r\n    this.setState({ categoryId: e.target.value })\r\n  }\r\n  handleCategoryNameChange = (e) => {\r\n    this.setState({ categoryName: e.target.value })\r\n  }\r\n  handleCountryIdChange = (e) => {\r\n    this.setState({ countryId: this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)] })\r\n  }\r\n\r\n\r\n  handleCustomDutyChange = (e) => {\r\n    this.setState({ customDuty: e.target.value })\r\n  }\r\n  handleVatChange = (e) => {\r\n    this.setState({ vat: e.target.value })\r\n  }\r\n\r\n//EDIT OPTION START\r\nhandleEditOption = (e) => {\r\n  this.setState({editRow:true})\r\n  var elems = document.getElementById(\"addCategoryModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n\r\n  let selectedRowIndex ;\r\n              e = e || window.event;\r\n              var data = [];\r\n              var target = e.srcElement || e.target;\r\n              // console.log(target.nodeName)\r\n              while (target && target.nodeName !== \"TR\") {\r\n                  target = target.parentNode;\r\n                  selectedRowIndex= target.sectionRowIndex\r\n                  console.log(\"Clicked row\",target.sectionRowIndex)\r\n                  // console.log(target.parentNode.index)\r\n              }\r\n              if (target) {\r\n                  var cells = target.getElementsByTagName(\"td\");\r\n                  for (var i = 0; i < cells.length; i++) {\r\n                      data.push(cells[i].innerHTML);\r\n                  }\r\n              } \r\n              let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[5])]\r\n             \r\n              console.log(data);\r\n              this.setState({mainId: data[0], keyId: data[1]})\r\n              this.setState({\r\n                categoryId: data[1], categoryName: data[2], \r\n                customDuty: data[3], vat: data[4], \r\n                countryName: country_name\r\n              })\r\n\r\n}\r\nopenAddCategoryModal =  ()=>{\r\n  this.setState({editRow:false})\r\n\r\n  var elems = document.getElementById(\"addCategoryModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n        \r\n}\r\ncloseModal = ()=>{\r\n  var elems = document.getElementById(\"addCategoryModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.close();\r\n  this.setState({error: \"\", editRow:false})\r\n  this.setState({\r\n    categoryId: \"\", categoryName: \"\", customDuty: \"\",\r\n    vat: \"\", countryId: \"\", countryName:\"\"\r\n  })  \r\n}\r\nupdateCategoryDB = async () => {\r\n\r\n  let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n  let url = base_url+`categories/${this.state.keyId}/`\r\n\r\n  // let num = Math.floor(Math.random() * Math.floor(10000));\r\n\r\n  var categoryformdata = new FormData()\r\n  categoryformdata.append(\"category_id\", this.state.categoryId)\r\n  categoryformdata.append(\"category_name\", this.state.categoryName)\r\n  categoryformdata.append(\"custom_duty\", this.state.customDuty)\r\n  categoryformdata.append(\"vat\", this.state.vat)\r\n  categoryformdata.append(\"country\", country_code)\r\n  categoryformdata.append(\"status\", \"Active\")\r\n  \r\n\r\n\r\n  // @Todo: APi to be called to save data for state\r\n\r\n  try {\r\n    let token = localStorage.getItem(\"token\")\r\n    var config = {\r\n      headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n      \r\n    };\r\n    const response = await Axios.put(url, categoryformdata, config)\r\n\r\n    let itemIndex = parseInt(this.state.mainId) - 1\r\n    this.state.categorydata.splice(itemIndex, 1, response.data)\r\n\r\n    var elem = document.getElementById('addCategoryModal')\r\n    var instance = M.Modal.getInstance(elem);\r\n    instance.close();\r\n    M.toast({ html: 'Updated Category Details Successfully.' , classes: \"white-text orange rounded\" })\r\n    this.setState({\r\n      categoryId: \"\", categoryName: \"\", customDuty: \"\",\r\n      vat: \"\", countryId: \"\", countryName:\"\"\r\n    })\r\n    this.setState({\r\n      error: \"\",\r\n      editRow: false\r\n    })\r\n  } catch (err) {\r\n    this.setState({\r\n      error: \"OH Snap! Something is Wrong.Please try again\",\r\n      // editRow: false\r\n    })\r\n    M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n    console.log(err.message)\r\n  }\r\n\r\n}\r\n//EDIT OPTION END\r\n\r\n\r\n  addCategoryToDB = async () => {\r\n    console.log(this.state.countryId + this.state.categoryId + this.state.customDuty\r\n      + this.state.vat + this.state.categoryName)\r\n\r\n\r\n    var categoryformdata = new FormData()\r\n    categoryformdata.append(\"category_id\", this.state.categoryId)\r\n    categoryformdata.append(\"category_name\", this.state.categoryName)\r\n    categoryformdata.append(\"custom_duty\", this.state.customDuty)\r\n    categoryformdata.append(\"vat\", this.state.vat)\r\n    categoryformdata.append(\"country\", this.state.countryId)\r\n    categoryformdata.append(\"status\", \"Active\")\r\n\r\n    let url = base_url+'categories/'  \r\n\r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { \r\n        'Content-Type': 'multipart/form-data' , \r\n        'Authorization':'Token '+ token},        \r\n      };\r\n      const response = await Axios.post(url, categoryformdata, config)\r\n      this.state.categorydata.unshift(response.data)\r\n\r\n      var elem = document.getElementById('addCategoryModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      this.setState({\r\n        categoryId: \"\", categoryName: \"\", customDuty: \"\",\r\n        vat: \"\", countryId: \"\", error: \"\", countryName:\"\"\r\n      })\r\n      // @Todo: APi to be called to save data for SLAB\r\n      M.toast({ html: 'Added Category Successfully PENDING', classes: \"white-text orange rounded\" })\r\n\r\n\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\"\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n\r\n  render() {\r\n    var uniquekey = 0\r\n    const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n\r\n      return (\r\n        <option key={uniquekey++} value={country}>{country}</option>\r\n      )\r\n    })\r\n\r\n    var sr_no = 0;\r\n    const categorytable = this.state.categorydata.map((category) => {\r\n      sr_no = sr_no +1; \r\n      return (\r\n        <Fragment key={category.id}>\r\n          <tr>\r\n            <td>{sr_no}</td>\r\n            <td>{category.category_id}</td>\r\n            <td>{category.category_name}</td>\r\n            <td>{category.custom_duty}</td>\r\n            <td>{category.vat}</td>\r\n            <td>{category.country}</td>\r\n            <td onClick={this.handleEditOption}><a title = \"Edit\"><EditOutlined/></a></td>\r\n            <td className=\"hide\">{category.id}</td>\r\n          </tr>\r\n        </Fragment>\r\n\r\n      )\r\n    })\r\n\r\n    const table_render = <Table hover >\r\n      <thead>\r\n        <tr>\r\n          <th>Sr.No.</th>\r\n          <th>Category ID</th>\r\n          <th>Category Name</th>\r\n          <th>Custom Duty (%)</th>\r\n          <th>VAT (%)</th>\r\n          <th>Country</th>\r\n          <th>Edit</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {categorytable}\r\n\r\n      </tbody>\r\n    </Table>\r\n\r\n    return (\r\n      <Fragment>\r\n        <br></br>\r\n        <br></br>\r\n        {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addCategoryModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n\r\n          <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update Category Details\" : \"Add Category\"}</h4>\r\n\r\n            <h4 className=\"center orange-text\">   </h4>\r\n\r\n\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <p className=\"center red-text\">{this.state.error}</p>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div id=''>\r\n                        {\r\n                            this.state.editRow\r\n                            ? <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" value={this.state.countryName} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"\" disabled >Choose Country</option>\r\n                              {selectCounrtyOptions}\r\n\r\n                            </select>\r\n                            : <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" defaultValue={'DEFAULT'} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose Country</option>\r\n                              {selectCounrtyOptions}\r\n                            </select>\r\n                          }\r\n                          <label>Select Country</label>\r\n\r\n                        </div>\r\n                      </div>  </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"categoryid\" id=\"category_id\" className=\"materialize-textarea\" type=\"text\" value={this.state.categoryId} onChange={this.handleCategoryIdChange} />\r\n                        <label htmlFor=\"category_id\" className=\"black-text\">Enter Category ID</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Unique Category ID ex: CAT_001</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"categoryname\" id=\"category_name\" type=\"text\" value={this.state.categoryName} onChange={this.handleCategoryNameChange} className=\"\" />\r\n                        <label htmlFor=\"category_name\" className=\"black-text\">Enter Category Name</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Unique Category Name ex: ANT_AUTOMOBILES</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"customeduty\" id=\"custome_duty\" type=\"text\" value={this.state.customDuty} onChange={this.handleCustomDutyChange} className=\"\" />\r\n                        <label htmlFor=\"custome_duty\" className=\"black-text\">Enter Custom Duty </label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Custom Duty (in %) Ex: 20</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"vat\" id=\"vat\" type=\"text\" value={this.state.vat} onChange={this.handleVatChange} className=\"\" />\r\n                        <label htmlFor=\"vat\" className=\"black-text\">VAT </label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">VAT (in %) Ex: 15</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id='cancelCategoryBtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Cancel</Button>\r\n              {\r\n              this.state.editRow\r\n              ?<Button id=\"updateCategoryBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick = {this.updateCategoryDB}>Update</Button>\r\n              :<Button id=\"addCategoryBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addCategoryToDB}> Add</Button>\r\n              }   \r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n\r\n              <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text modal-trigger \" href=\"\" onClick={this.openAddCategoryModal}>\r\n                  Add Category Details<Image className=\"red-text mr-auto\" src=\"assets/images/plus-circle-red-m.svg\" /></Nav.Link>\r\n              </Nav>\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default CategoryFrag;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddState.js",["298","299","300","301"],"\r\nimport React, { Component, Fragment, useState } from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from 'axios';\r\nimport Error from './Error';\r\n// import AddCountry from './CountryModal';\r\nimport './addstate.css';\r\n\r\n\r\n\r\n\r\nclass StateFrag extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // let countries = this.props.countrylist.map((item)=>{\r\n    // //   \"  {\r\n    // //     \"country_id_name\": {\r\n    // //         \"Antigua\": \"AT\"\r\n    // //     },\r\n    // //     \"country_name\": \"Antigua\"\r\n    // // }\"\r\n    // item.country_name\r\n\r\n    // })\r\n\r\n    \r\n\r\n\r\n    this.state = ({\r\n      countryname: \"\", statecode: \"\", statename: \"\", countrylist: this.props.countrylist,\r\n      statedata: this.props.statedata, countrycodelist: this.props.country_code_list, error: \"\",\r\n      editRow: false, state_id: \"\", stateRealId:\"\"\r\n    })\r\n\r\n    console.log(\"statedata:\",this.props.statedata);\r\n\r\n  }\r\n  handleCountryNameChange = (e) => {\r\n    this.setState({ countryname: this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)] })\r\n\r\n    console.log(\"country selected \"+e.target.value, this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)])\r\n  }\r\n\r\n  handleStateCodeChange = (e) => {\r\n    this.setState({ statecode: e.target.value })\r\n  }\r\n  handleStateNameChange = (e) => {\r\n    this.setState({ statename: e.target.value })\r\n  }  \r\n\r\n  \r\n  //EDIT OPTION START\r\n  handleEditOption = (e) => {\r\n    // alert(\"done\")\r\n\r\n    this.setState({editRow:true})\r\n  \r\n\r\n    var elems = document.getElementById(\"addStateModal\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.open()\r\n\r\n    let selectedRowIndex ;\r\n                e = e || window.event;\r\n                var data = [];\r\n                var target = e.srcElement || e.target;\r\n                // console.log(target.nodeName)\r\n                while (target && target.nodeName !== \"TR\") {\r\n                    target = target.parentNode;\r\n                    selectedRowIndex= target.sectionRowIndex\r\n                    console.log(\"Clicked row\",target.sectionRowIndex)\r\n                    // console.log(target.parentNode.index)\r\n                }\r\n                if (target) {\r\n                    var cells = target.getElementsByTagName(\"td\");\r\n                    for (var i = 0; i < cells.length; i++) {\r\n                        data.push(cells[i].innerHTML);\r\n                    }\r\n                }\r\n                let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[3])]\r\n                this.setState({countryname: country_name, statecode: data[1], statename: data[2]})\r\n                this.setState({state_id: data[0]})\r\n                this.setState({stateRealId: data[5]})\r\n                \r\n                console.log(data);\r\n\r\n                console.log(this.state.countrycodelist)\r\n                console.log(data[3])\r\n                console.log(this.state.countrycodelist.indexOf(data[3]));\r\n                console.log(this.state.countrylist);\r\n\r\n                console.log(country_name);               \r\n\r\n  }   \r\n\r\n  openAddStateModal =  ()=>{\r\n    this.setState({editRow:false})\r\n\r\n    var elems = document.getElementById(\"addStateModal\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.open()\r\n      \r\n  }\r\n  closeModal = ()=>{\r\n    var elems = document.getElementById(\"addStateModal\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.close();\r\n    this.setState({editRow:false})\r\n  }\r\n\r\n  updateStateDB = async () => {\r\n\r\n    let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryname)]\r\n    let url = base_url+`states/${this.state.stateRealId}/`\r\n\r\n    console.log(this.state.statename + this.state.statecode + this.state.countryname)\r\n    var stateformdata = new FormData()\r\n    stateformdata.append(\"country\", country_code)\r\n    stateformdata.append(\"name\", this.state.statename)\r\n    stateformdata.append(\"state_code\", this.state.statecode)\r\n    stateformdata.append(\"status\", \"Active\")\r\n\r\n\r\n\r\n    // @Todo: APi to be called to save data for state\r\n\r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n        \r\n      };\r\n      const response = await Axios.put(url, stateformdata, config)\r\n\r\n      let itemIndex = parseInt(this.state.state_id) - 1\r\n      this.state.statedata.splice(itemIndex, 1, response.data)\r\n      \r\n      this.setState({ countryname: \"\", statecode: \"\", statename: \"\" })\r\n      var elem = document.getElementById('addStateModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      M.toast({ html: 'Updated state Successfully.' , classes: \"white-text orange rounded\" })\r\n\r\n      this.setState({\r\n        error: \"\",\r\n        editRow: false\r\n      })\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\",\r\n        editRow: false\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n      console.log(err.message)\r\n    }\r\n\r\n  }\r\n  //EDIT OPTION END\r\n\r\n\r\n  addStateToDB = async () => {\r\n    console.log(this.state.statename + this.state.statecode + this.state.countryname)\r\n    var stateformdata = new FormData()\r\n    stateformdata.append(\"country\", this.state.countryname)\r\n    stateformdata.append(\"name\", this.state.statename)\r\n    stateformdata.append(\"state_code\", this.state.statecode)\r\n    stateformdata.append(\"status\", \"Active\")\r\n\r\n\r\n\r\n    // @Todo: APi to be called to save data for state\r\n\r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n        \r\n      };\r\n      const response = await Axios.post(base_url+'states/', stateformdata,\r\n      config)\r\n      this.state.statedata.unshift(response.data)\r\n      this.setState({ countryname: \"\", statecode: \"\", statename: \"\" })\r\n      var elem = document.getElementById('addStateModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      M.toast({ html: 'Added state Successfully. Please see Updated Table', classes: \"white-text orange rounded\" })\r\n\r\n      this.setState({\r\n        error: \"\"\r\n      })\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\"\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n      console.log(err.message)\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n  render() {\r\n    var uniquekey = 0\r\n    const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n\r\n      return (\r\n        <option key={uniquekey++} value={country}>{country}</option>\r\n      )\r\n    })\r\n\r\n    var sr_no = 0;\r\n    const statetable = this.state.statedata.map((state) => {\r\n      // console.log(state.id)\r\n      sr_no=sr_no+1\r\n      return (\r\n        <Fragment key={sr_no}>\r\n          <tr  >\r\n            <td>{sr_no}</td>\r\n            <td>{state.state_code}</td>\r\n            <td>{state.name}</td>\r\n            <td>{state.country}</td>\r\n            <td onClick={this.handleEditOption}><a title = \"Edit\"><EditOutlined/></a></td>\r\n            <td className=\"hide\">{state.id}</td>\r\n          </tr>\r\n        </Fragment>\r\n\r\n      )\r\n    })\r\n\r\n    const table_render = <Table hover >\r\n      <thead>\r\n        <tr>\r\n          <th>Sr.No.</th>\r\n          <th>State Code</th>\r\n          <th>State Name</th>\r\n          <th>Country</th>\r\n          <th>Edit</th>\r\n\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {statetable}\r\n\r\n      </tbody>\r\n    </Table>\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <br></br>\r\n        <br></br>\r\n        {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addStateModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n            \r\n          <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update State\" : \"Add State \"}</h4>\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <p className=\"center red-text\">{this.state.error}</p>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      {/* <div className=\"input-field col s6 offset-s3 center\">\r\n                      <input id=\"country_name_select\" type=\"text\" value={this.state.countryname} onChange={this.handleCountryNameChange} className=\"\"/>\r\n                      <label htmlFor=\"country_name_select\" className=\"black-text\" >Country Name</label>\r\n                      <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Enter a valid Country Name</span>\r\n                      </div> */}\r\n\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div id=''>\r\n                        {this.state.editRow\r\n                        ?<select id=\"selectCountry\" className=\"browser-default country_name_select\" value={this.state.countryname} onChange={this.handleCountryNameChange}>\r\n                        <option value=\"\" disabled >Choose your Country </option>\r\n                        {selectCounrtyOptions}\r\n\r\n                      </select>\r\n                        :<select id=\"selectCountry\" className=\"browser-default country_name_select\" onChange={this.handleCountryNameChange}>\r\n                            <option value=\"\" disabled >Choose your Country </option>\r\n                            {selectCounrtyOptions}\r\n\r\n                          </select>}\r\n                          <label>Select Country</label>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input id=\"state_name\" type=\"text\" value={this.state.statename} onChange={this.handleStateNameChange} className=\"\" />\r\n                        <label htmlFor=\"state_name\" className=\"black-text\">Enter State Name</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input id=\"state_code\" type=\"text\" value={this.state.statecode} onChange={this.handleStateCodeChange} className=\"\" />\r\n                        <label htmlFor=\"state_code\" className=\"black-text\">Enter State Code</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id='cancelStatebtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \" onClick={this.closeModal} >Cancel</Button>\r\n              {this.state.editRow?<Button id=\"updateStateBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick = {this.updateStateDB}>Update</Button>:<Button id=\"addStateBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addStateToDB}> Add</Button>}         \r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>        \r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {/* {this.props.statetable} */}\r\n\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n\r\n              <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text \" href=\"\" onClick={this.openAddStateModal}>\r\n                  Add State Details<Image className=\"red-text ml-1\" src=\"assets/images/plus-circle-red-m.svg\" /></Nav.Link>\r\n              </Nav>\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default StateFrag;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddFedexConsolidate.js",["302","303"],"\r\nimport React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from 'axios';\r\nimport './addfedexconsolidate.css';\r\n\r\n\r\nexport default class FedexConsolidateFrag extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      fedexConsolidatedInvoice_id:\"\",  \r\n      to: \"\", cc1: \"\", cc2: \"\",cc3: \"\",\r\n      bcc1: \"\", bcc2: \"\",bcc3: \"\",\r\n      fedexConsolidatedata: this.props.fedexConsolidatedata,\r\n      countrylist: this.props.countrylist, countrycodelist: this.props.country_code_list, error: \"\",\r\n      editRow: false, countryName:\"\", mainId:\"\"\r\n    })\r\n\r\n  }\r\n\r\n  handleCountryNameChange = (e) => {\r\n\r\n    let selected_countryId = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n\r\n    this.setState({ countryName: e.target.value})\r\n    this.setState({ countryId: selected_countryId})\r\n  }\r\n\r\n  handleTo = (e) => {\r\n    this.setState({ to: e.target.value })\r\n  }\r\n  handleCC1 = (e) => {\r\n    this.setState({ cc1: e.target.value })\r\n  }\r\n  handleCC2 = (e) => {\r\n    this.setState({ cc2: e.target.value })\r\n  }\r\n  handleCC3 = (e) => {\r\n    this.setState({ cc3: e.target.value })\r\n  }\r\n  handleBCC1 = (e) => {\r\n    this.setState({ bcc1: e.target.value })\r\n  }\r\n  handleBCC2 = (e) => {\r\n    this.setState({ bcc2: e.target.value })\r\n  }\r\n  handleBCC3 = (e) => {\r\n    this.setState({ bcc3: e.target.value })\r\n  }\r\n  \r\n\r\n  //EDIT OPTION START\r\n  handleEditOption = (e) => {\r\n    this.setState({editRow:true})\r\n    var elems = document.getElementById(\"addFedexDetailsModal\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.open()\r\n\r\n    let selectedRowIndex ;\r\n                e = e || window.event;\r\n                var data = [];\r\n                var target = e.srcElement || e.target;\r\n                // console.log(target.nodeName)\r\n                while (target && target.nodeName !== \"TR\") {\r\n                    target = target.parentNode;\r\n                    selectedRowIndex= target.sectionRowIndex\r\n                    console.log(\"Clicked row\",target.sectionRowIndex)\r\n                    // console.log(target.parentNode.index)\r\n                }\r\n                if (target) {\r\n                    var cells = target.getElementsByTagName(\"td\");\r\n                    for (var i = 0; i < cells.length; i++) {\r\n                        data.push(cells[i].innerHTML);\r\n                    }\r\n                }\r\n                let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[9])]\r\n                // let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[3])]\r\n                \r\n                console.log(data);\r\n                this.setState({\r\n                  fedexConsolidatedInvoice_id: data[1], to: data[2], \r\n                  cc1: data[3], cc2: data[4],cc3: data[5],\r\n                  bcc1: data[6], bcc2: data[7],bcc3: data[8],\r\n                  countryName: country_name\r\n                })\r\n                this.setState({mainId: data[0]})\r\n                // console.log(country_name);\r\n\r\n  }\r\n  openFedexDetailsModal =  ()=>{\r\n    this.setState({editRow:false})\r\n\r\n    var elems = document.getElementById(\"addFedexDetailsModal\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.open()\r\n      \r\n  }\r\n  closeModal = ()=>{\r\n    var elems = document.getElementById(\"addFedexDetailsModal\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.close();\r\n    this.setState({editRow:false})\r\n    this.setState({\r\n      fedexConsolidatedInvoice_id:\"\",  \r\n      to: \"\", cc1: \"\", cc2: \"\",cc3: \"\",\r\n      bcc1: \"\", bcc2: \"\",bcc3: \"\",\r\n      countryId: \"\",error:\"\"\r\n    })\r\n  }\r\n  updateFedexDetailsDB = async () => {\r\n\r\n    let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n    let url = base_url+`fedex_consolidate/${this.state.fedexConsolidatedInvoice_id}/`\r\n\r\n    // console.log(this.state.statename + this.state.statecode + this.state.countryname)\r\n    var fedexConsolidateformdata = new FormData()\r\n    fedexConsolidateformdata.append(\"country_id\", country_code)\r\n    fedexConsolidateformdata.append(\"fedex_consolidated_invoice_id\", this.state.fedexConsolidatedInvoice_id)\r\n    fedexConsolidateformdata.append(\"to\", this.state.to)\r\n    fedexConsolidateformdata.append(\"cc_1\", this.state.cc1)\r\n    fedexConsolidateformdata.append(\"cc_2\", this.state.cc2)\r\n    fedexConsolidateformdata.append(\"cc_3\", this.state.cc3)\r\n    fedexConsolidateformdata.append(\"bcc_1\", this.state.bcc1)\r\n    fedexConsolidateformdata.append(\"bcc_2\", this.state.bcc2)\r\n    fedexConsolidateformdata.append(\"bcc_3\", this.state.bcc3)\r\n\r\n\r\n\r\n    // @Todo: APi to be called to save data for state\r\n\r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n        \r\n      };\r\n      const response = await Axios.put(url, fedexConsolidateformdata, config)\r\n\r\n      let itemIndex = parseInt(this.state.mainId) - 1\r\n      this.state.fedexConsolidatedata.splice(itemIndex, 1, response.data)      \r\n      \r\n      // this.state.fedexConsolidatedata.unshift(response.data)\r\n      var elem = document.getElementById('addFedexDetailsModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      M.toast({ html: 'Updated Fedex Details Successfully.' , classes: \"white-text orange rounded\" })\r\n      this.setState({\r\n        fedexConsolidatedInvoice_id:\"\",  \r\n        to: \"\", cc1: \"\", cc2: \"\",cc3: \"\",\r\n        bcc1: \"\", bcc2: \"\",bcc3: \"\",\r\n        countryId: \"\",countryName:\"\"\r\n      })\r\n      this.setState({\r\n        error: \"\",\r\n        editRow: false\r\n      })\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\",\r\n        editRow: false\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n      console.log(err.message)\r\n    }\r\n\r\n  }\r\n  //EDIT OPTION END\r\n\r\n  \r\n  addFedexDetailsToDB = async () => {\r\n\r\n    let num = Math.floor(Math.random() * Math.floor(10000));\r\n\r\n    var fedexConsolidateformdata = new FormData()\r\n    fedexConsolidateformdata.append(\"country_id\", this.state.countryId)\r\n    fedexConsolidateformdata.append(\"fedex_consolidated_invoice_id\", num.toString())\r\n    fedexConsolidateformdata.append(\"to\", this.state.to)\r\n    fedexConsolidateformdata.append(\"cc_1\", this.state.cc1)\r\n    fedexConsolidateformdata.append(\"cc_2\", this.state.cc2)\r\n    fedexConsolidateformdata.append(\"cc_3\", this.state.cc3)\r\n    fedexConsolidateformdata.append(\"bcc_1\", this.state.bcc1)\r\n    fedexConsolidateformdata.append(\"bcc_2\", this.state.bcc2)\r\n    fedexConsolidateformdata.append(\"bcc_3\", this.state.bcc3)\r\n\r\n    let url = base_url+'fedex_consolidate/'  \r\n    \r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n\r\n      var config = {\r\n        headers: { \r\n        'Content-Type': 'multipart/form-data' , \r\n        'Authorization':'Token '+ token},        \r\n      };\r\n      \r\n      const response = await Axios.post(url, fedexConsolidateformdata, config)\r\n      this.state.fedexConsolidatedata.unshift(response.data)\r\n\r\n      var elem = document.getElementById('addFedexDetailsModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      this.setState({\r\n        fedexConsolidatedInvoice_id:\"\",  \r\n        to: \"\", cc1: \"\", cc2: \"\",cc3: \"\",\r\n        bcc1: \"\", bcc2: \"\",bcc3: \"\",\r\n        countryId: \"\",error:\"\"\r\n      })\r\n      // @Todo: APi to be called to save data for SLAB\r\n      M.toast({ html: 'Added Fedex Details Successfully ', classes: \"white-text orange rounded\" })\r\n\r\n\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\"\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n\r\n  render() {\r\n    var uniquekey = 0\r\n\r\n    const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n\r\n      return (\r\n        <option key={uniquekey++} value={country}>{country}</option>\r\n      )\r\n    })\r\n\r\n    var sr_no=0\r\n    const fedextable = this.state.fedexConsolidatedata.map((fedex) => {\r\n      sr_no=sr_no+1 \r\n      return (\r\n        <Fragment key={sr_no}>\r\n          <tr>\r\n            <td>{sr_no}</td>            \r\n            <td>{fedex.fedex_consolidated_invoice_id}</td>\r\n            <td>{fedex.to}</td>            \r\n            <td>{fedex.cc_1}</td>\r\n            <td>{fedex.cc_2}</td>\r\n            <td>{fedex.cc_3}</td>            \r\n            <td>{fedex.bcc_1}</td>\r\n            <td>{fedex.bcc_2}</td>\r\n            <td>{fedex.bcc_3}</td> \r\n            <td>{fedex.country_id}</td>\r\n            <td><a title = \"Edit\" onClick={this.handleEditOption}><EditOutlined/></a></td>    \r\n            <td className=\"hide\">{fedex.id}</td>\r\n          </tr>\r\n        </Fragment>\r\n\r\n      )\r\n    })\r\n\r\n    const table_render = <Table hover >\r\n      <thead>\r\n        <tr>\r\n          <th>Sr.No.</th>\r\n          <th>Fedex Invoice ID</th>\r\n          <th>To.</th>\r\n          <th>CC 1</th>\r\n          <th>CC 2</th>\r\n          <th>CC 3</th>\r\n          <th>BCC 1</th>\r\n          <th>BCC 2</th>\r\n          <th>BCC 3</th> \r\n          <th>Country ID</th> \r\n          <th>Edit</th>                 \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {fedextable}\r\n\r\n      </tbody>\r\n    </Table>\r\n\r\n    return (\r\n      <Fragment>\r\n        <br></br>\r\n        <br></br>\r\n        {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addFedexDetailsModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n\r\n          <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update Fedex Details\" : \"Add Fedex Details\"}</h4>\r\n\r\n            <h4 className=\"center orange-text\"> </h4>\r\n\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <p className=\"center red-text\">{this.state.error}</p>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div >\r\n                        {\r\n                            this.state.editRow\r\n                            ? <select id=\"countryName_select\" name=\"country_name\" className=\"browser-default countryName_select\" value={this.state.countryName} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"\" disabled >Choose WareHouse Country</option>\r\n                              {selectCounrtyOptions}\r\n\r\n                            </select>\r\n                            : <select id=\"countryName_select\" name=\"country_name\" className=\"browser-default countryName_select\" defaultValue={'DEFAULT'} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose WareHouse Country</option>\r\n                              {selectCounrtyOptions}\r\n\r\n                            </select>\r\n                          }\r\n                          <label>Select Country</label>\r\n\r\n                        </div>\r\n                      </div>  \r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"fedexconsolidateTo\" id=\"fedexconsolidate_To\" className=\"materialize-textarea\" type=\"email\" value={this.state.to}\r\n                         onChange={this.handleTo}  />\r\n                        <label htmlFor=\"fedexconsolidate_To\" className=\"black-text\">To</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row> \r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"fedexconsolidateCC1\" id=\"fedexconsolidate_cc1\" className=\"materialize-textarea\" type=\"email\" value={this.state.cc1}\r\n                         onChange={this.handleCC1}  />\r\n                        <label htmlFor=\"fedexconsolidate_cc1\" className=\"black-text\">CC 1</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>        \r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"fedexconsolidateCC2\" id=\"fedexconsolidate_cc2\" className=\"materialize-textarea\" type=\"email\" value={this.state.cc2}\r\n                         onChange={this.handleCC2}  />\r\n                        <label htmlFor=\"fedexconsolidate_To\" className=\"black-text\">CC 2</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>        \r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"fedexconsolidateCC3\" id=\"fedexconsolidate_cc3\" className=\"materialize-textarea\" type=\"email\" value={this.state.cc3}\r\n                         onChange={this.handleCC3}  />\r\n                        <label htmlFor=\"fedexconsolidate_To\" className=\"black-text\">CC 3</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>        \r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"fedexconsolidateBCC1\" id=\"fedexconsolidate_bcc1\" className=\"materialize-textarea\" type=\"email\" value={this.state.bcc1}\r\n                         onChange={this.handleBCC1}  />\r\n                        <label htmlFor=\"fedexconsolidate_bcc1\" className=\"black-text\">BCC 1</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>        \r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"fedexconsolidateBCC2\" id=\"fedexconsolidate_bcc2\" className=\"materialize-textarea\" type=\"email\" value={this.state.bcc2}\r\n                         onChange={this.handleBCC2}  />\r\n                        <label htmlFor=\"fedexconsolidate_bcc2\" className=\"black-text\">BCC 2</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>        \r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"fedexconsolidateCC3\" id=\"fedexconsolidate_bcc3\" className=\"materialize-textarea\" type=\"email\" value={this.state.bcc3}\r\n                         onChange={this.handleBCC3}  />\r\n                        <label htmlFor=\"fedexconsolidate_bcc3\" className=\"black-text\">BCC 3</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>      \r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id='cancelFedexBtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \" >Cancel</Button>\r\n              {\r\n              this.state.editRow\r\n              ?<Button id=\"updateFedexBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick = {this.updateFedexDetailsDB}>Update</Button>\r\n              :<Button id=\"addFedexBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addFedexDetailsToDB}> Add</Button>\r\n              } \r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n\r\n              <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text modal-trigger \" href=\"\" onClick={this.openFedexDetailsModal}>\r\n                  Add Fedex Consolidate Details<Image className=\"red-text mr-auto\" src=\"assets/images/plus-circle-red-m.svg\" /></Nav.Link>\r\n              </Nav>\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddBillingDetails.js",["304","305"],"\r\nimport React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from 'axios';\r\nimport './addbillingdetails.css';\r\n\r\n\r\nexport default class BillingFrag extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      countryId: \"\", ownerId: \"\",\r\n      billingdata: this.props.billingdata,\r\n      countrylist: this.props.countrylist, countrycodelist: this.props.country_code_list, error: \"\",\r\n      ownerList: this.props.ownerList,\r\n      cashBillingId:\"\", mainId:\"\", countryName: \"\",\r\n      editRow: false\r\n    })\r\n\r\n  }\r\n\r\n  handleCountryNameChange = (e) => {\r\n\r\n    let selected_countryName = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n\r\n    this.setState({ countryName: e.target.value})\r\n    this.setState({ countryId: selected_countryName})\r\n  }\r\n  \r\n  handleOwnerIDChange = (e) => {\r\n\r\n    this.setState({ ownerId: e.target.value})\r\n\r\n  }\r\n  \r\n\r\n  //EDIT OPTION START\r\n  handleEditOption = (e) => {\r\n    this.setState({editRow:true})\r\n    var elems = document.getElementById(\"addBillingDetailsModal\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.open()\r\n\r\n    let selectedRowIndex ;\r\n                e = e || window.event;\r\n                var data = [];\r\n                var target = e.srcElement || e.target;\r\n                // console.log(target.nodeName)\r\n                while (target && target.nodeName !== \"TR\") {\r\n                    target = target.parentNode;\r\n                    selectedRowIndex= target.sectionRowIndex\r\n                    console.log(\"Clicked row\",target.sectionRowIndex)\r\n                    // console.log(target.parentNode.index)\r\n                }\r\n                if (target) {\r\n                    var cells = target.getElementsByTagName(\"td\");\r\n                    for (var i = 0; i < cells.length; i++) {\r\n                        data.push(cells[i].innerHTML);\r\n                    }\r\n                }\r\n                let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[2])]\r\n                \r\n                // this.setState({editRowNumer: selectedRowIndex})\r\n                // console.log(selectedRowIndex);\r\n                // this.setState({countryName: country_name, warehouseId: data[5], portNumber: data[3], IPaddress: data[2]})\r\n                this.setState({countryName: country_name, ownerId: data[3]})\r\n                this.setState({cashBillingId: data[1]})\r\n                this.setState({mainId: data[0]})\r\n                console.log(data);\r\n                console.log(data[1]);\r\n                console.log(data[5]);\r\n                // console.log(cashBillingId);\r\n\r\n                // console.log(country_name);\r\n                // console.log(data[5]);\r\n\r\n  }\r\n  openAddBillingDetailsModal =  ()=>{\r\n    this.setState({editRow:false})\r\n\r\n    var elems = document.getElementById(\"addBillingDetailsModal\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.open()\r\n          \r\n  }\r\n  closeModal = ()=>{\r\n    var elems = document.getElementById(\"addBillingDetailsModal\");\r\n    var instance = M.Modal.init(elems);\r\n    instance.close();\r\n    this.setState({editRow:false})\r\n    this.setState({\r\n      countryId: \"\", ownerId: \"\", error: \"\", countryName:\"\"\r\n    })\r\n  }\r\n  updateBillingDetailsDB = async () => {\r\n\r\n    // let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n    let url = base_url+`cash_billing/${this.state.cashBillingId}/`\r\n\r\n    // let num = Math.floor(Math.random() * Math.floor(10000));\r\n\r\n    var billingformdata = new FormData()\r\n    billingformdata.append(\"cash_billing_id\", this.state.cashBillingId)\r\n    billingformdata.append(\"country_id\", this.state.countryId)\r\n    billingformdata.append(\"owner_id\", this.state.ownerId)\r\n\r\n\r\n\r\n    // @Todo: APi to be called to save data for state\r\n\r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n        \r\n      };\r\n      const response = await Axios.put(url, billingformdata, config)\r\n\r\n      let itemIndex = parseInt(this.state.mainId) - 1\r\n      this.state.billingdata.splice(itemIndex, 1, response.data)\r\n\r\n      // this.state.billingdata.unshift(response.data)\r\n      var elem = document.getElementById('addBillingDetailsModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      M.toast({ html: 'Updated Billing Details Successfully.' , classes: \"white-text orange rounded\" })\r\n      this.setState({\r\n        countryId: \"\", ownerId: \"\",countryName:\"\"\r\n      })\r\n      this.setState({\r\n        error: \"\",\r\n        editRow: false\r\n      })\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\",\r\n        editRow: false\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n      console.log(err.message)\r\n    }\r\n\r\n  }\r\n  //EDIT OPTION END\r\n\r\n  addBillingDetailsToDB = async () => {\r\n    // console.log(this.state.countryId + this.state.categoryId + this.state.customDuty\r\n    //   + this.state.vat + this.state.categoryName)\r\n\r\n    let num = Math.floor(Math.random() * Math.floor(10000));\r\n\r\n    var billingformdata = new FormData()\r\n    billingformdata.append(\"cash_billing_id\", num.toString())\r\n    billingformdata.append(\"country_id\", this.state.countryId)\r\n    billingformdata.append(\"owner_id\", this.state.ownerId)\r\n\r\n    let url = base_url+\"cash_billing/\"  \r\n    \r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n\r\n      var config = {\r\n        headers: { \r\n        'Content-Type': 'multipart/form-data' , \r\n        'Authorization':'Token '+ token},        \r\n      };\r\n      \r\n      const response = await Axios.post(url, billingformdata, config)\r\n      this.state.billingdata.unshift(response.data)\r\n\r\n      var elem = document.getElementById('addBillingDetailsModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      this.setState({\r\n        countryId: \"\", ownerId: \"\", error: \"\", countryName:\"\"\r\n      })\r\n      // @Todo: APi to be called to save data for SLAB\r\n      M.toast({ html: 'Added Billing Details successfully ', classes: \"white-text orange rounded\" })\r\n\r\n\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\"\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n\r\n  render() {\r\n    var uniquekey = 0\r\n    var ownerIDkey = 0\r\n\r\n    const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n\r\n      return (\r\n        <option key={uniquekey++} value={country}>{country}</option>\r\n      )\r\n    })\r\n\r\n\r\n    const selectOwnerIDOptions = this.state.ownerList.map((owner) => {\r\n\r\n      return (\r\n        <option key={ownerIDkey++} value={owner}>{owner}</option>\r\n      )\r\n    })\r\n\r\n    var sr_no = 0;\r\n    const billingtable = this.state.billingdata.map((billing) => {\r\n      sr_no=sr_no+1\r\n      return (\r\n        <Fragment key={sr_no}>\r\n          <tr>\r\n            <td>{sr_no}</td>\r\n            <td>{billing.cash_billing_id}</td>\r\n            <td>{billing.country_id}</td>\r\n            <td>{billing.owner_id}</td>            \r\n            <td onClick={this.handleEditOption}><a title = \"Edit\"><EditOutlined/></a></td>     \r\n            <td className=\"hide\">{billing.id}</td>\r\n          </tr>\r\n        </Fragment>\r\n\r\n      )\r\n    })\r\n\r\n    const table_render = <Table hover >\r\n      <thead>\r\n        <tr>\r\n          <th>Sr.No.</th>\r\n          <th>Cash Billing ID</th>\r\n          <th>Country ID</th>\r\n          <th>Owner ID</th>\r\n          <th>Edit</th>                           \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {billingtable}\r\n\r\n      </tbody>\r\n    </Table>\r\n\r\n    return (\r\n      <Fragment>\r\n        <br></br>\r\n        <br></br>\r\n        {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addBillingDetailsModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n           \r\n          <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update Billing Details\" : \"Add Billing Details\"}</h4>\r\n\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <p className=\"center red-text\">{this.state.error}</p>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div id=''>\r\n                          {\r\n                            this.state.editRow\r\n                            ? <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" value={this.state.countryName} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"\" disabled >Choose Country</option>\r\n                              {selectCounrtyOptions}\r\n                            </select>\r\n                            : <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" defaultValue={'DEFAULT'} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose Country</option>\r\n                              {selectCounrtyOptions}\r\n                            </select>\r\n                          }\r\n                          <label>Select Country</label>\r\n\r\n                        </div>\r\n                      </div>  \r\n                    </Col>\r\n                  </Row>                  \r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div id=''>\r\n                          {\r\n                          this.state.editRow\r\n                            ? <select id=\"ownerid_select\" name=\"ownerid\" className=\"browser-default ownerID_select\" value={this.state.ownerId} onChange={this.handleOwnerIDChange}>\r\n                              <option value=\"\" disabled >Choose Owner</option>\r\n                              {selectOwnerIDOptions}\r\n                            </select>\r\n                            : <select id=\"ownerid_select\" name=\"ownerid\" className=\"browser-default ownerID_select\" defaultValue={'DEFAULT'} onChange={this.handleOwnerIDChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose Owner</option>\r\n                              {selectOwnerIDOptions}\r\n                            </select>\r\n                            }\r\n                          <label>Select Owner</label>\r\n\r\n                        </div>\r\n                      </div> \r\n                      </Col>\r\n                  </Row>                  \r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id='cancelBillingBtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \" onClick={this.closeModal} >Cancel</Button>\r\n              {\r\n              this.state.editRow\r\n              ?<Button id=\"updateBillingBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick = {this.updateBillingDetailsDB}>Update</Button>\r\n              :<Button id=\"addBillingBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addBillingDetailsToDB}> Add</Button>\r\n              }                 \r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n\r\n              <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text modal-trigger \" href=\"\" onClick={this.openAddBillingDetailsModal}>\r\n                  Add Billing Details<Image className=\"red-text mr-auto\" src=\"assets/images/plus-circle-red-m.svg\"  /></Nav.Link>\r\n              </Nav>\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddWarehouse.js",["306","307"],"\r\nimport React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from \"axios\";\r\nimport './addWarehouse.css';\r\n\r\n\r\nclass WarehouseFrag extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      warehouseId: \"\", warehouseName: \"\", address: \"\",\r\n      countryId: \"\", warehouseState: \"\", city: \"\", zipcode: \"\", \r\n      warehousedata: this.props.warehousedata,\r\n      countrylist: this.props.countrylist, countrycodelist: this.props.country_code_list,\r\n      statedata: this.props.statedata, stateCode_list: [], stateName_list:[],\r\n      statelist: [], stateSelectOptions: [],\r\n      countryName:\"\", mainId:\"\", keyId:\"\", stateCode:\"\", warehouseStateId:\"\", stateCodeDict:{}, tempStateList: {},\r\n      editRow: false\r\n    })\r\n\r\n    console.log(\"in constructor\")\r\n    console.log(this.state.countrylist)\r\n    console.log(this.state.countrycodelist)\r\n    console.log(\"statedata: \",this.state.statedata)\r\n   \r\n  }\r\n\r\n  handleCountryNameChange = async (e) => {\r\n    // this.setState({countryname: e.target.value})\r\n    // @TODO: on changing countryname state list should also Change\r\n\r\n    this.setState({ countryName: e.target.value })\r\n    console.log(\"country selected:- \" + e.target.value)\r\n    // this.setState({countryname:e.target.value})\r\n\r\n\r\n    let selected_countryId = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n    console.log(selected_countryId)\r\n\r\n    const states = this.state.statedata[this.state.countrylist.indexOf(e.target.value)].slice()\r\n    console.log(states)\r\n\r\n    this.setState({ countryId: selected_countryId, statelist: states })\r\n    // this.setState({statelist:states})\r\n    console.log(this.state.countryId)\r\n    console.log(\"state list\")\r\n    console.log(this.state.statelist)\r\n    // this.state.statelist\r\n\r\n\r\n    /////TESTTTTTTT  \r\n\r\n    this.setState({ tempStateList: states })\r\n    console.log(this.state.tempStateList)\r\n    console.log(typeof this.state.tempStateList)\r\n    \r\n    /////TESTTTTTTTT END\r\n\r\n  }\r\n\r\n  handleWareHouseIdChange = (e) => {\r\n    this.setState({ warehouseId: e.target.value })\r\n  }\r\n  handleWareHouseNameChange = (e) => {\r\n    this.setState({ warehouseName: e.target.value })\r\n  }\r\n  handleAddressChange = (e) => {\r\n    this.setState({ address: e.target.value })\r\n  }\r\n  handleUnitchargeChange = (e) => {\r\n    this.setState({ unitCharge: e.target.value })\r\n  }\r\n  handleStateChange = (e) => {\r\n    console.log(\"state of ware house\", e.target.value)\r\n    this.setState({ warehouseState: e.target.value })\r\n    console.log(this.state.warehouseState);\r\n  }\r\n\r\n  handleCityChange = (e) => {\r\n    this.setState({ city: e.target.value })\r\n  }\r\n  handleZipCodeChange = (e) => {\r\n    this.setState({ zipcode: e.target.value })\r\n  }\r\n\r\n//EDIT OPTION START\r\nhandleEditOption = (e) => {\r\n  this.setState({editRow:true})\r\n  var elems = document.getElementById(\"addWareHouseModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n\r\n  let selectedRowIndex ;\r\n              e = e || window.event;\r\n              var data = [];\r\n              var target = e.srcElement || e.target;\r\n              // console.log(target.nodeName)\r\n              while (target && target.nodeName !== \"TR\") {\r\n                  target = target.parentNode;\r\n                  selectedRowIndex= target.sectionRowIndex\r\n                  console.log(\"Clicked row\",target.sectionRowIndex)\r\n                  // console.log(target.parentNode.index)\r\n              }\r\n              if (target) {\r\n                  var cells = target.getElementsByTagName(\"td\");\r\n                  for (var i = 0; i < cells.length; i++) {\r\n                      data.push(cells[i].innerHTML);\r\n                  }\r\n              }\r\n\r\n              console.log(data);\r\n\r\n              let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[6])]\r\n              console.log(\"Country name\", country_name);\r\n\r\n              const statesOnEdit = this.state.statedata[this.state.countrylist.indexOf(country_name)].slice()\r\n              console.log(`States for the country ${country_name}:`)\r\n              console.log(statesOnEdit);\r\n\r\n              let stateNameCodeDict = {}\r\n              for (var key in statesOnEdit) {              \r\n                stateNameCodeDict[statesOnEdit[key].state_code] = statesOnEdit[key].state_name\r\n              }\r\n             console.log(\"stateNameCodeDict: \",stateNameCodeDict );\r\n\r\n             console.log(`state name for state code ${data[5]} is`,stateNameCodeDict[data[5]] );\r\n             \r\n             let selStateName = stateNameCodeDict[data[5]]\r\n             console.log(selStateName); \r\n\r\n              this.setState({mainId: data[0], keyId: data[1]})\r\n              this.setState({\r\n                countryName: country_name, warehouseState: selStateName, city: data[4], \r\n                warehouseId: data[1], warehouseName: data[2], \r\n                address: data[3], zipcode: data[7]\r\n              })\r\n\r\n              console.log(this.state.warehouseId);\r\n              console.log(this.state.warehouseName);\r\n              console.log(this.state.address);\r\n              console.log(this.state.city);\r\n              console.log(this.state.zipcode);\r\n              console.log(this.state.countryName);\r\n              console.log(this.state.warehouseState);\r\n\r\n}\r\nopenAddWarehouseDetailsModal =  ()=>{\r\n  this.setState({editRow:false})\r\n\r\n  var elems = document.getElementById(\"addWareHouseModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n    \r\n}\r\ncloseModal = ()=>{\r\n  var elems = document.getElementById(\"addWareHouseModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.close();\r\n  this.setState({editRow:false})\r\n  this.setState({\r\n    warehouseId: \"\", warehouseName: \"\", address: \"\",\r\n    countryId: \"\", countryName:\"\", warehouseState: \"\", city: \"\", \r\n    warehouseStateId:\"\", zipcode: \"\", error:\"\"\r\n  })\r\n}\r\nupdateWarehouseDetailsDB = async () => {\r\n\r\n  let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n  let url = base_url+`warehouses/${this.state.keyId}/`\r\n\r\n  // console.log(this.state.statename + this.state.statecode + this.state.countryname)\r\n  var warehouseformdata = new FormData()\r\n  warehouseformdata.append(\"warehouse_id\", this.state.warehouseId)\r\n  warehouseformdata.append(\"name\", this.state.warehouseName)\r\n  warehouseformdata.append(\"address\", this.state.address)\r\n  warehouseformdata.append(\"city\", this.state.city)\r\n  warehouseformdata.append(\"zipcode\", this.state.zipcode)\r\n  warehouseformdata.append(\"country\", country_code)\r\n  warehouseformdata.append(\"state\", this.state.warehouseState)\r\n  warehouseformdata.append(\"status\", \"Active\")\r\n\r\n  // @Todo: APi to be called to save data for state\r\n\r\n  try {\r\n    let token = localStorage.getItem(\"token\")\r\n    var config = {\r\n      headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n      \r\n    };\r\n    const response = await Axios.put(url, warehouseformdata, config)\r\n    \r\n    let itemIndex = parseInt(this.state.mainId) - 1\r\n    this.state.warehousedata.splice(itemIndex, 1, response.data)\r\n    \r\n    // this.state.warehousedata.unshift(response.data)\r\n    var elem = document.getElementById('addWareHouseModal')\r\n    var instance = M.Modal.getInstance(elem);\r\n    instance.close();\r\n    M.toast({ html: 'Updated Warehouse Successfully.' , classes: \"white-text orange rounded\" })\r\n    this.setState({\r\n      warehouseId: \"\", warehouseName: \"\", address: \"\", countryName:\"\",\r\n      countryId: \"\", warehouseState: \"\", city: \"\", zipcode: \"\"\r\n    })\r\n    this.setState({\r\n      error: \"\",\r\n      editRow: false\r\n    })\r\n  } catch (err) {\r\n    this.setState({\r\n      error: \"OH Snap! Something is Wrong.Please try again\",\r\n      editRow: false\r\n    })\r\n    M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n    console.log(err.message)\r\n  }\r\n\r\n}\r\n//EDIT OPTION END\r\n\r\n  addWareHouseToDB = async () => {\r\n    // console.log(this.state.countryname + this.state.markup + this.state.rangeFinal)\r\n\r\n    let state_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.warehouseState)]\r\n    console.log(state_code);\r\n\r\n    var warehouseformdata = new FormData()\r\n    warehouseformdata.append(\"warehouse_id\", this.state.warehouseId)\r\n    warehouseformdata.append(\"name\", this.state.warehouseName)\r\n    warehouseformdata.append(\"address\", this.state.address)\r\n    warehouseformdata.append(\"city\", this.state.city)\r\n    warehouseformdata.append(\"zipcode\", this.state.zipcode)\r\n    warehouseformdata.append(\"country\", this.state.countryId)\r\n    warehouseformdata.append(\"state\", this.state.warehouseState)\r\n    warehouseformdata.append(\"status\", \"Active\")\r\n\r\n    console.log(this.state.warehouseState);\r\n\r\n    try {\r\n\r\n      let token = localStorage.getItem(\"token\")\r\n      let url = base_url+'warehouses/'  \r\n\r\n      var config = {\r\n        headers: { \r\n        'Content-Type': 'multipart/form-data' , \r\n        'Authorization':'Token '+ token},        \r\n      };\r\n      const response = await Axios.post(url, warehouseformdata, config)\r\n      this.state.warehousedata.unshift(response.data)\r\n\r\n      var elem = document.getElementById('addWareHouseModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      this.setState({\r\n        warehouseId: \"\", warehouseName: \"\", address: \"\",\r\n        countryId: \"\", warehouseState: \"\", city: \"\", zipcode: \"\",\r\n        warehouseStateId:\"\", \r\n        error:\"\"\r\n      })\r\n      // @Todo: APi to be called to save data for SLAB\r\n      M.toast({ html: 'Added WareHouse Successfully ', classes: \"white-text orange rounded\" })\r\n\r\n\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\"\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n\r\n  render() {\r\n    var uniquekey = 0\r\n    var statekey = 0\r\n    const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n     \r\n      return (\r\n        <option key={uniquekey++} value={country}>{country}</option>\r\n      )\r\n    })\r\n    const selectStateOptions = this.state.statelist.map((state) => {\r\n      console.log(\"state\", state)\r\n\r\n      return (\r\n\r\n        <option key={\"_\" + statekey++} value={state.state_id}>{state.state_name}</option>\r\n      )\r\n    })\r\n  \r\n    var sr_no=0\r\n    const warehousetable = this.state.warehousedata.map((warehouse) => {\r\n      sr_no=sr_no+1\r\n      return (\r\n        <Fragment key={sr_no}>\r\n          <tr>\r\n            <td>{sr_no}</td>\r\n            <td>{warehouse.warehouse_id}</td>\r\n            <td>{warehouse.name}</td>\r\n            <td>{warehouse.address}</td>\r\n            <td>{warehouse.city}</td>\r\n            <td>{warehouse.state_name}</td>\r\n            <td>{warehouse.country}</td>\r\n            <td>{warehouse.zipcode}</td>\r\n            <td onClick={this.handleEditOption}><a title = \"Edit\"><EditOutlined/></a></td>  \r\n            <td className=\"hide\">{warehouse.id}</td>\r\n            <td className=\"hide\"></td>\r\n          </tr>\r\n        </Fragment>\r\n\r\n      )\r\n    })\r\n    const table_render = <Table hover >\r\n      <thead>\r\n        <tr>\r\n          <th>Sr.No.</th>\r\n          <th>Warehouse ID</th>\r\n          <th>Warehouse Name</th>\r\n          <th>Address</th>\r\n          <th>City</th>\r\n          <th>State</th>\r\n          <th>Country</th>\r\n          <th>Zipcode</th>\r\n          <th>Edit</th>                 \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {warehousetable}\r\n      </tbody>\r\n    </Table>\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <br></br>\r\n        <br></br>\r\n        {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addWareHouseModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n          <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update Warehouse Details\" : \"Add Warehouse Details \"}</h4>\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <p className=\"center red-text\">{this.state.error}</p>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div >\r\n\r\n                        {\r\n                          this.state.editRow\r\n                            ? <select id=\"country_name_select\" name=\"country\" className=\"browser-default \" value={this.state.countryName} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"\" disabled >Choose Warehouse Country </option>\r\n                              {selectCounrtyOptions}\r\n                            </select>\r\n                            : <select id=\"country_name_select\" name=\"country\" className=\"browser-default \" defaultValue={'DEFAULT'} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose Warehouse Country </option>\r\n                              {selectCounrtyOptions}\r\n                            </select>\r\n                            }\r\n                          <label>Select Country</label>\r\n\r\n                        </div>\r\n                      </div>  </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div>\r\n\r\n                          {\r\n                            this.state.editRow\r\n                              ? <select id=\"state_name_select\" name=\"stateName\" className=\"browser-default \" value={this.state.warehouseState} onChange={this.handleStateChange}>\r\n                                <option value=\"\" disabled >Choose WareHouse state </option>\r\n                                {selectStateOptions}\r\n                              </select>\r\n                              : <select id=\"state_name_select\" name=\"stateName\" className=\"browser-default \" defaultValue={'DEFAULT'} onChange={this.handleStateChange}>\r\n                                <option value=\"DEFAULT\" disabled >Choose WareHouse state </option>\r\n                                {selectStateOptions}\r\n                              </select>\r\n                          }\r\n                          <label>Select state</label>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"warehousecity\" id=\"warehouse_city\" type=\"text\" value={this.state.city} onChange={this.handleCityChange} className=\"\" />\r\n                        <label htmlFor=\"warehousecity\" className=\"black-text\">Enter Warehouse City</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Warehouse City Ex: Miami</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"warehouseid\" id=\"warehouse_id\" className=\"materialize-textarea\" type=\"text\" value={this.state.warehouseId}\r\n                         onChange={this.handleWareHouseIdChange} />\r\n                        <label htmlFor=\"warehouse_id\" className=\"black-text\">Enter Warehouse ID</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Unique Warehouse ID ex: WAR_001</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"warehousename\" id=\"warehouse_name\" type=\"text\" value={this.state.warehouseName} onChange={this.handleWareHouseNameChange} className=\"\" />\r\n                        <label htmlFor=\"warehouse_name\" className=\"black-text\">Enter WareHouse Name</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Unique WareHouse Name ex: EzzyShip Warehouse_1</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"warehouseaddress\" id=\"warehouse_address\" type=\"text\" value={this.state.address} onChange={this.handleAddressChange} className=\"\" />\r\n                        <label htmlFor=\"warehouse_address\" className=\"black-text\">Enter WareHouse Address</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Warehouse Address Ex: 112281 SW 133nd CT, Miami,FL</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  \r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"warehousezipcode\" id=\"warehouse_zipcode\" type=\"text\" value={this.state.zipcode} onChange={this.handleZipCodeChange} className=\"\" />\r\n                        <label htmlFor=\"warehouse_zipcode\" className=\"black-text\">Enter Warehouse Zipcode</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Warehouse Zipcode Ex: 33186</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id='cancelWareHouseBtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Cancel</Button>\r\n              {\r\n              this.state.editRow\r\n              ?<Button id=\"updateWareHouseBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick = {this.updateWarehouseDetailsDB}>Update</Button>\r\n              :<Button id=\"addWareHouseBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addWareHouseToDB}> Add</Button>\r\n              }   \r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n              <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text modal-trigger \" onClick={this.openAddWarehouseDetailsModal}>\r\n                  Add WareHouse Details<Image className=\"red-text mr-auto\" src=\"assets/images/plus-circle-red-m.svg\"  /></Nav.Link>\r\n              </Nav>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default WarehouseFrag;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddWarehouseOwner.js",["308","309","310","311"],"\r\nimport React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants';\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from 'axios';\r\nimport './addwarehouseowner.css';\r\n\r\n\r\nexport default class WarehouseOwnerFrag extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      warehouseId: \"\", \r\n      warehouseOwnerName: \"\", \r\n      warehouseState: \"\",\r\n      city: \"\", \r\n      countryId: \"\", \r\n      ownerAddressLine1: \"\",  \r\n      ownerAddressLine2: \"\",  \r\n      ownerEmailID:\"\",\r\n      ownerContactNumber:\"\",\r\n      warehouseOwnerDetails: this.props.warehouse_ownerdata ,      \r\n      warehouseIdList:this.props.warehouseIDList,\r\n      countrylist: this.props.countrylist,       \r\n      countrycodelist: this.props.country_code_list, \r\n      statedata: this.props.statedata,\r\n      statelist: [], \r\n      stateSelectOptions: [],\r\n      error: \"\",\r\n      editRow: false,\r\n      warehouseCountry:\"\",\r\n      ownerId:\"\",\r\n      mainId:\"\",\r\n      //change name address1:[],\r\n      // address2:[],\r\n    })\r\n\r\n    console.log(\"in constructor\")\r\n    console.log(this.state.warehouseIdList)\r\n    console.log(this.state.countrylist)\r\n    console.log(this.state.countrycodelist)\r\n    console.log(this.state.statedata)\r\n\r\n  }\r\n\r\n  handleCountryNameChange = (e) => {\r\n\r\n    let selected_countryId = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n\r\n    const states = this.state.statedata[this.state.countrylist.indexOf(e.target.value)].slice()\r\n\r\n    this.setState({ warehouseCountry: e.target.value})\r\n    this.setState({ countryId: selected_countryId})\r\n    this.setState({ statelist: states})\r\n  }\r\n  \r\n  handleWarehouseIdChange = async (e) => {\r\n    console.log(\"WarehouseID selected:- \" + e.target.value)\r\n\r\n    // let selected_warehouseId = this.state.warehouseIdList[this.state.warehouseOwnerDetails.indexOf(e.target.value)]\r\n\r\n    \r\n\r\n    this.setState({ warehouseId: e.target.value})\r\n\r\n  }\r\n  handleCountryIdChange = (e) => {\r\n    console.log(\"country selected:- \" + e.target.value)\r\n    // this.setState({countryname:e.target.value})\r\n    let selected_countryId = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n    const states = this.state.statedata[this.state.countrylist.indexOf(e.target.value)].slice()\r\n\r\n    this.setState({ countryId: selected_countryId, statelist: states })\r\n    // this.setState({statelist:states})\r\n    console.log(\"state list\")\r\n    console.log(this.state.statelist)\r\n  }\r\n\r\n  handleStateChange = (e) => {\r\n    console.log(\"state of ware house\", e.target.value)\r\n    this.setState({ warehouseState: e.target.value })\r\n  }\r\n\r\n  handleCityChange = (e) => {\r\n    this.setState({ city: e.target.value })\r\n  }\r\n  handleWarehouseOwnerName = (e) => {\r\n    this.setState({ warehouseOwnerName: e.target.value })\r\n  }\r\n  handleOwnerAddressLine1 = (e) => {\r\n    this.setState({ ownerAddressLine1: e.target.value })\r\n    // this.state.address1.push(this.state.ownerAddressLine1);\r\n  }\r\n  handleOwnerAddressLine2 = (e) => {\r\n    this.setState({ ownerAddressLine2: e.target.value })\r\n  }\r\n  handleOwnerEmailID = (e) => {\r\n    this.setState({ ownerEmailID: e.target.value })\r\n  }\r\n\r\n  handleContactNumber = (e) => {\r\n    this.setState({ ownerContactNumber: e.target.value })\r\n  }\r\n\r\n//EDIT OPTION START\r\nhandleEditOption = (e) => {\r\n  this.setState({editRow:true})\r\n  var elems = document.getElementById(\"addWarehouseOwnerModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n\r\n  let selectedRowIndex ;\r\n              e = e || window.event;\r\n              var data = [];\r\n              var target = e.srcElement || e.target;\r\n              // console.log(target.nodeName)\r\n              while (target && target.nodeName !== \"TR\") {\r\n                  target = target.parentNode;\r\n                  selectedRowIndex= target.sectionRowIndex\r\n                  console.log(\"Clicked row\",target.sectionRowIndex)\r\n                  // console.log(target.parentNode.index)\r\n              }\r\n              if (target) {\r\n                  var cells = target.getElementsByTagName(\"td\");\r\n                  for (var i = 0; i < cells.length; i++) {\r\n                      data.push(cells[i].innerHTML);\r\n                  }\r\n              }\r\n              let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[2])]\r\n              // let state_name = this.state.statedata[this.state.countrycodelist.indexOf(data[3])]  \r\n              // let owner_id = this.state.statedata[this.state.countrycodelist.indexOf(data[3])]  \r\n                            \r\n              // console.log(this.state.address1);\r\n              console.log(data);\r\n\r\n              this.setState({mainId: data[0], ownerId: data[11]  });\r\n              // let add1 = this.state.address1[data[0]]\r\n              // console.log(add1);\r\n              this.setState({\r\n                  warehouseId: data[1],\r\n                  warehouseCountry: country_name,\r\n                  city: data[3],\r\n                  warehouseOwnerName: data[4],\r\n                  ownerAddressLine1: data[5],\r\n                  ownerAddressLine2: data[6],\r\n                  ownerEmailID: data[7],\r\n                  ownerContactNumber: data[8],                                  \r\n                })\r\n              // this.setState({\r\n              //   warehouseId: data[1],\r\n              //   countryId: data[2],\r\n              //   city: data[3],\r\n              //   warehouseOwnerName: data[4],\r\n              //   ownerAddressLine1: \"\",\r\n              //   ownerAddressLine2: \"\",\r\n              //   ownerEmailID: data[6],\r\n              //   ownerContactNumber: data[7],\r\n              //   warehouseCountry:country_name,\r\n              // })\r\n              console.log(data[3]);\r\n              // console.log(country_name);\r\n              // console.log(data[5]);\r\n\r\n}\r\nopenWarehouseOwnerModal =  ()=>{\r\n  this.setState({editRow:false})\r\n\r\n  var elems = document.getElementById(\"addWarehouseOwnerModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n        \r\n}\r\ncloseModal = ()=>{\r\n  var elems = document.getElementById(\"addWarehouseOwnerModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.close();\r\n  this.setState({editRow:false, error:\"\"})\r\n  this.setState({\r\n    warehouseId: \"\",\r\n    countryId: \"\",\r\n    city: \"\",\r\n    warehouseOwnerName: \"\",\r\n    ownerAddressLine1: \"\",\r\n    ownerAddressLine2: \"\",\r\n    ownerEmailID: \"\",\r\n    ownerContactNumber: \"\",\r\n    warehouseCountry:\"\",\r\n    warehouseState:\"\",\r\n    ownerId:\"\"\r\n  })\r\n}\r\nupdateOwnerDetailsDB = async () => {\r\n\r\n  let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.warehouseCountry)]\r\n  let url = base_url+`warehouse_owner/${this.state.ownerId}/`\r\n\r\n\r\n    var warehouseOwnerformdata = new FormData()\r\n    warehouseOwnerformdata.append(\"warehouse_id\", this.state.warehouseId)\r\n    warehouseOwnerformdata.append(\"owner_id\", this.state.ownerId)\r\n    warehouseOwnerformdata.append(\"country_id\", country_code)\r\n    // warehouseOwnerformdata.append(\"state\", this.state.state)\r\n    warehouseOwnerformdata.append(\"city\", this.state.city)\r\n    warehouseOwnerformdata.append(\"name\", this.state.warehouseOwnerName)\r\n    warehouseOwnerformdata.append(\"address1\", this.state.ownerAddressLine1)\r\n    warehouseOwnerformdata.append(\"address2\", this.state.ownerAddressLine2)\r\n    warehouseOwnerformdata.append(\"email\", this.state.ownerEmailID)\r\n    warehouseOwnerformdata.append(\"phone_number\", this.state.ownerContactNumber)\r\n\r\n\r\n\r\n  // @Todo: APi to be called to save data for state\r\n\r\n  try {\r\n    let token = localStorage.getItem(\"token\")\r\n    var config = {\r\n      headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n      \r\n    };\r\n    const response = await Axios.put(url, warehouseOwnerformdata, config)\r\n\r\n    let itemIndex = parseInt(this.state.mainId) - 1\r\n    this.state.warehouseOwnerDetails.splice(itemIndex, 1, response.data)\r\n\r\n    var elem = document.getElementById('addWarehouseOwnerModal')\r\n    var instance = M.Modal.getInstance(elem);\r\n    instance.close();\r\n    M.toast({ html: 'Updated Owner Details Successfully.' , classes: \"white-text orange rounded\" })\r\n    this.setState({\r\n      warehouseId: \"\",\r\n      countryId: \"\",\r\n      city: \"\",\r\n      warehouseOwnerName: \"\",\r\n      ownerAddressLine1: \"\",\r\n      ownerAddressLine2: \"\",\r\n      ownerEmailID: \"\",\r\n      ownerContactNumber: \"\",\r\n      warehouseCountry:\"\",\r\n      warehouseState:\"\"\r\n    })\r\n    this.setState({\r\n      error: \"\",\r\n      editRow: false\r\n    })\r\n  } catch (err) {\r\n    this.setState({\r\n      error: \"OH Snap! Something is Wrong.Please try again\",\r\n      editRow: false\r\n    })\r\n    M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n    console.log(err.message)\r\n  }\r\n\r\n}\r\n//EDIT OPTION END\r\n\r\n   addWarehouseOwnerToDB = async () => {\r\n\r\n    console.log(\"warehouse_id\", this.state.warehouseId)\r\n    console.log(\"country\", this.state.countryId)\r\n    // warehouseOwnerformdata.append(\"state\", this.state.state)\r\n    console.log(\"city\", this.state.city)\r\n    console.log(\"name\", this.state.warehouseOwnerName)\r\n    console.log(\"address_line_1\", this.state.ownerAddressLine1)\r\n    console.log(\"address_line_2\", this.state.ownerAddressLine2)\r\n    console.log(\"email_address\", this.state.ownerEmailID)\r\n    console.log(\"contact_number\", this.state.ownerContactNumber)\r\n\r\n    let url = base_url+'warehouse_owner/'  \r\n\r\n    // const {data} = await Axios.get(url)\r\n    // console.log(data)\r\n    // this.setState({ ownerDetails: data })   \r\n    // console.log(this.state.ownerDetails);\r\n\r\n    var warehouseOwnerformdata = new FormData()\r\n    warehouseOwnerformdata.append(\"warehouse_id\", this.state.warehouseId)\r\n    warehouseOwnerformdata.append(\"owner_id\", this.state.warehouseOwnerName+this.state.warehouseId)\r\n    warehouseOwnerformdata.append(\"country_id\", this.state.countryId)\r\n    // warehouseOwnerformdata.append(\"state\", this.state.state)\r\n    warehouseOwnerformdata.append(\"city\", this.state.city)\r\n    warehouseOwnerformdata.append(\"name\", this.state.warehouseOwnerName)\r\n    warehouseOwnerformdata.append(\"address1\", this.state.ownerAddressLine1)\r\n    warehouseOwnerformdata.append(\"address2\", this.state.ownerAddressLine2)\r\n    warehouseOwnerformdata.append(\"email\", this.state.ownerEmailID)\r\n    warehouseOwnerformdata.append(\"phone_number\", this.state.ownerContactNumber)\r\n    // warehouseOwnerformdata.append(\"status\", \"Active\")\r\n\r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { \r\n        'Content-Type': 'multipart/form-data' , \r\n        'Authorization':'Token '+token},\r\n        \r\n      };\r\n\r\n      const response = await Axios.post(url, warehouseOwnerformdata, config)\r\n      this.state.warehouseOwnerDetails.unshift(response.data)\r\n\r\n      var elem = document.getElementById('addWarehouseOwnerModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      this.setState({\r\n        warehouseId: \"\",\r\n        countryId: \"\",\r\n        city: \"\",\r\n        warehouseOwnerName: \"\",\r\n        ownerAddressLine1: \"\",\r\n        ownerAddressLine2: \"\",\r\n        ownerEmailID: \"\",\r\n        ownerContactNumber: \"\",\r\n        warehouseCountry:\"\",\r\n        warehouseState:\"\",\r\n        error: \"\"\r\n      })\r\n      M.toast({ html: 'Added Owner Successfully ', classes: \"white-text orange rounded\" })\r\n\r\n\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\"\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n\r\n    }\r\n\r\n \r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n\r\n  render() {\r\n    var warehouseIDkey = 0\r\n    var countrykey = 0\r\n    var statekey = 0\r\n\r\n    const selectWarehouseIDOptions = this.state.warehouseIdList.map((wID) => {\r\n\r\n      return (\r\n        <option key={warehouseIDkey++} value={wID}>{wID}</option>\r\n      )\r\n    })\r\n\r\n    const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n\r\n      return (\r\n        <option key={countrykey++} value={country}>{country}</option>\r\n      )\r\n    })\r\n\r\n    const selectStateOptions = this.state.statelist.map((state) => {\r\n      console.log(\"state\", state)\r\n      return (\r\n\r\n        <option key={\"_\" + statekey++} value={state.state_id}>{state.state_name}</option>\r\n      )\r\n    })\r\n\r\n    var sr_no= 0;\r\n    let address;\r\n    const WarehouseOwnerTable = this.state.warehouseOwnerDetails.map((owner) => {\r\n      sr_no=sr_no+1;\r\n      // address = owner.address2 === null ? owner.address1 : owner.address1 + \" \" + owner.address2;\r\n      // this.state.address1.push(owner.address1);\r\n      // this.state.address2 = owner.address2 ;\r\n      \r\n      return (\r\n        <Fragment key = {sr_no}>\r\n          <tr >\r\n            <td>{sr_no}</td>\r\n            <td>{owner.warehouse_id}</td>\r\n            <td>{owner.country_id}</td>\r\n            {/* <td>{}</td> */}\r\n            <td>{owner.city}</td>\r\n            <td>{owner.name}</td>\r\n            {/* <td>{address}</td> */}\r\n            <td>{owner.address1}</td>\r\n            <td>{owner.address2}</td>\r\n            {/* <td>{owner.address2 === null ? owner.address1 : owner.address1 + owner.address2}</td> */}\r\n            <td>{owner.email}</td>\r\n            <td>{owner.phone_number}</td>\r\n            <td onClick={this.handleEditOption}><a title=\"Edit\"><EditOutlined /></a></td>\r\n            <td className=\"hide\">{owner.id}</td>\r\n            <td className=\"hide\">{owner.owner_id}</td>\r\n          </tr>\r\n        </Fragment>\r\n\r\n      )\r\n    })\r\n\r\n    const table_render = <Table hover >\r\n      <thead>\r\n        <tr>\r\n          <th>Sr.No.</th>\r\n          <th>Warehouse ID</th>\r\n          <th>Country ID</th>\r\n          {/* <th>State Name</th> */}\r\n          <th>City</th>\r\n          <th>Owner Name</th>\r\n          <th>Address Line 1</th>\r\n          <th>Address Line 2</th>\r\n          {/* <th>Owner Address</th> */}\r\n          <th>Owner EmailID</th>\r\n          <th>Owner Phone No.</th>\r\n          <th>Edit</th>\r\n         \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n            {WarehouseOwnerTable}\r\n      </tbody>\r\n    </Table>\r\n\r\n    return (\r\n      <Fragment>\r\n        <br></br>\r\n        <br></br>\r\n       \r\n      \r\n\r\n\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addWarehouseOwnerModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n            \r\n            \r\n          <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update Owner Details\" : \"Add New Warehouse Owner\"}</h4>\r\n\r\n\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <p className=\"center red-text\">{this.state.error}</p>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div id=''>\r\n                          {\r\n                            this.state.editRow\r\n                            ? <select id=\"warehouse_id_select\" name=\"warehouseid\" className=\"browser-default warehouseID_select\" value={this.state.warehouseId} onChange={this.handleWarehouseIdChange}>\r\n                              <option value=\"\" disabled >Choose WarehouseID </option>\r\n                              {selectWarehouseIDOptions}\r\n\r\n                            </select>\r\n                            : <select id=\"warehouse_id_select\" name=\"warehouseid\" className=\"browser-default warehouseID_select\" defaultValue={'DEFAULT'} onChange={this.handleWarehouseIdChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose WarehouseID </option>\r\n                              {selectWarehouseIDOptions}\r\n\r\n                            </select>\r\n                          }\r\n                          <label>Select WarehouseID</label>\r\n\r\n                        </div>\r\n                      </div>  \r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div >\r\n                        {\r\n                            this.state.editRow\r\n                            ? <select id=\"warehouseCountry_select\" name=\"country_name\" className=\"browser-default country_name_select\" value={this.state.warehouseCountry} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"\" disabled >Choose WareHouse Country </option>\r\n                              {selectCounrtyOptions}\r\n\r\n                            </select>\r\n                            : <select id=\"warehouseCountry_select\" name=\"country_name\" className=\"browser-default country_name_select\" defaultValue={'DEFAULT'} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose WareHouse Country </option>\r\n                              {selectCounrtyOptions}\r\n\r\n                            </select>\r\n                          }\r\n                          <label>Select Country</label>\r\n\r\n                        </div>\r\n                      </div>  </Col>\r\n                  </Row>\r\n\r\n                  {/* <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div>\r\n                        {\r\n                          this.state.editRow\r\n                            ? <select id=\"warehouseState_select\" name=\"\" className=\"browser-default \" value={this.state.warehouseState} onChange={this.handleStateChange}>\r\n                              <option value=\"\" disabled >Choose WareHouse state</option>\r\n                              {selectStateOptions}\r\n                            </select>\r\n                            : <select id=\"warehouseState_select\" name=\"\" className=\"browser-default \" defaultValue={'DEFAULT'} onChange={this.handleStateChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose WareHouse state</option>\r\n                              {selectStateOptions}\r\n                            </select>\r\n                        }\r\n                          <label>Select state</label>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row> */}\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"warehousecity\" id=\"warehouse_city\" type=\"text\" className=\"\" value={this.state.city} \r\n                        onChange={this.handleCityChange} />\r\n                        <label htmlFor=\"warehouse_city\" className=\"black-text\">Enter Warehouse City</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Warehouse City Ex: Miami</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"warehouseOwnerName\" id=\"warehouseOwner_Name\" className=\"materialize-textarea\" type=\"text\" value={this.state.warehouseOwnerName} \r\n                         onChange={this.handleWarehouseOwnerName} />\r\n                        <label htmlFor=\"warehouseOwner_Name\" className=\"black-text\">Enter Warehouse Owner Name</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"owner_AddressLine1\" id=\"ownerAddressLine1\" className=\"materialize-textarea\" type=\"text\" value={this.state.ownerAddressLine1} \r\n                         onChange={this.handleOwnerAddressLine1} />\r\n                        <label htmlFor=\"ownerAddressLine1\" className=\"black-text\">Address Line 1</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"owner_AddressLine2\" id=\"ownerAddressLine2\" className=\"materialize-textarea\" type=\"text\" value={this.state.ownerAddressLine2} \r\n                         onChange={this.handleOwnerAddressLine2}  />\r\n                        <label htmlFor=\"ownerAddressLine2\" className=\"black-text\">Address Line 2</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"owner_EmailID\" id=\"ownerEmailID\" className=\"materialize-textarea\" type=\"email\" value={this.state.ownerEmailID}\r\n                         onChange={this.handleOwnerEmailID}  />\r\n                        <label htmlFor=\"ownerEmailID\" className=\"black-text\">Enter Email ID</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name-=\"owner_ContactNumber\" id=\"ownerContactNumber\" className=\"materialize-textarea\" type=\"text\"  value={this.state.ownerContactNumber}\r\n                          onChange={this.handleContactNumber} />\r\n                        <label htmlFor=\"ownerContactNumber\" className=\"black-text\">Enter Contact Number</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  \r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id='cancelOwnerBtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Cancel</Button>\r\n              {\r\n              this.state.editRow\r\n              ?<Button id=\"updateOwnerBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick = {this.updateOwnerDetailsDB}>Update</Button>\r\n              :<Button id=\"addOwnerBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addWarehouseOwnerToDB}> Add</Button>\r\n              }     \r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n\r\n              <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text modal-trigger \" href=\"\" onClick={this.openWarehouseOwnerModal}>\r\n                  Add Owners Details<Image className=\"red-text mr-auto\" src=\"assets/images/plus-circle-red-m.svg\"  /></Nav.Link>\r\n              </Nav>\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddPrinterIP.js",["312"],"\r\nimport React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from 'axios';\r\nimport './addprinterIP.css';\r\n\r\n\r\nexport default class PrinterFrag extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            countryId: \"\", warehouseId: \"\", portNumber: \"\", IPaddress: \"\",\r\n            printerIPdata: this.props.printerIPdata,\r\n            countrylist: this.props.countrylist, countrycodelist: this.props.country_code_list,\r\n            warehouseIDlist: this.props.warehouseIDList,\r\n            error: \"\",\r\n            editRow: false, printerId: \"\", countryName: \"\", editRowNumer: \"\", mainId:\"\"\r\n        })\r\n\r\n    }\r\n\r\n    handleCountryNameChange = (e) => {\r\n\r\n        let selected_countryName = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n    \r\n        this.setState({ countryName: e.target.value})\r\n        this.setState({ countryId: selected_countryName})\r\n    }\r\n\r\n    handleWarehouseIdChange = async (e) => {\r\n        // console.log(\"WarehouseID selected:- \" + e.target.value) \r\n        this.setState({ warehouseId: e.target.value })\r\n    }\r\n\r\n    handlePortNumber = (e) => {\r\n        this.setState({ portNumber: e.target.value })\r\n    }\r\n    handleIPaddress = (e) => {\r\n        this.setState({ IPaddress: e.target.value })\r\n    }\r\n\r\n    //EDIT OPTION START\r\n    handleEditOption = (e) => {\r\n        this.setState({ editRow: true })\r\n        var elems = document.getElementById(\"addPrinterDetailsModal\");\r\n        var instance = M.Modal.init(elems);\r\n        instance.open()\r\n\r\n        let selectedRowIndex;\r\n        e = e || window.event;\r\n        var data = [];\r\n        var target = e.srcElement || e.target;\r\n        // console.log(target.nodeName)\r\n        while (target && target.nodeName !== \"TR\") {\r\n            target = target.parentNode;\r\n            selectedRowIndex = target.sectionRowIndex\r\n            console.log(\"Clicked row\", target.sectionRowIndex)\r\n            // console.log(target.parentNode.index)\r\n        }\r\n        if (target) {\r\n            var cells = target.getElementsByTagName(\"td\");\r\n            for (var i = 0; i < cells.length; i++) {\r\n                data.push(cells[i].innerHTML);\r\n            }\r\n        }\r\n        let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[4])]\r\n        // let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[3])]\r\n\r\n        this.setState({ editRowNumer: selectedRowIndex })\r\n        console.log(selectedRowIndex);\r\n        this.setState({ mainId: data[0] })\r\n        this.setState({ printerId: data[1] })\r\n        this.setState({ countryName: country_name, warehouseId: data[5], portNumber: data[3], IPaddress: data[2] })\r\n        console.log(data);\r\n        console.log(country_name);\r\n        console.log(data[5]);\r\n\r\n    }\r\n    openAddPrinterDetailsModal = () => {\r\n        this.setState({ editRow: false })\r\n\r\n        var elems = document.getElementById(\"addPrinterDetailsModal\");\r\n        var instance = M.Modal.init(elems);\r\n        instance.open()\r\n\r\n    }\r\n    closeModal = () => {\r\n        var elems = document.getElementById(\"addPrinterDetailsModal\");\r\n        var instance = M.Modal.init(elems);\r\n        instance.close();\r\n        this.setState({ editRow: false })\r\n        this.setState({\r\n            countryId: \"\", countryName: \"\", warehouseId: \"\",\r\n            portNumber: \"\", IPaddress: \"\",\r\n            error: \"\"\r\n        })\r\n    }\r\n    updatePrinterDetailsDB = async () => {\r\n\r\n        let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n        let url = base_url+`printer_ip/${this.state.printerId}/`\r\n\r\n        // console.log(this.state.statename + this.state.statecode + this.state.countryname)\r\n        var printerformdata = new FormData()\r\n        printerformdata.append(\"printer_id\", this.state.printerId)\r\n        printerformdata.append(\"ip_address\", this.state.IPaddress)\r\n        printerformdata.append(\"port_number\", this.state.portNumber)\r\n        printerformdata.append(\"country_id\", country_code)\r\n        printerformdata.append(\"warehouse_id\", this.state.warehouseId)\r\n\r\n\r\n        // @Todo: APi to be called to save data for state\r\n\r\n        try {\r\n            let token = localStorage.getItem(\"token\")\r\n            var config = {\r\n                headers: { 'Content-Type': 'multipart/form-data', 'Authorization': 'Token ' + token },\r\n\r\n            };\r\n            const response = await Axios.put(url, printerformdata, config)\r\n\r\n            let itemIndex = parseInt(this.state.mainId) - 1\r\n            this.state.printerIPdata.splice(itemIndex, 1, response.data)\r\n\r\n            // this.state.printerIPdata.unshift(response.data)\r\n            var elem = document.getElementById('addPrinterDetailsModal')\r\n            var instance = M.Modal.getInstance(elem);\r\n            instance.close();\r\n            M.toast({ html: 'Updated Printer Successfully.', classes: \"white-text orange rounded\" })\r\n            this.setState({\r\n                countryId: \"\", countryName: \"\", warehouseId: \"\",\r\n                portNumber: \"\", IPaddress: \"\",\r\n                error: \"\"\r\n            })\r\n            this.setState({\r\n                error: \"\",\r\n                editRow: false\r\n            })\r\n        } catch (err) {\r\n            this.setState({\r\n                error: \"OH Snap! Something is Wrong.Please try again\",\r\n                editRow: false\r\n            })\r\n            M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n            console.log(err.message)\r\n        }\r\n\r\n    }\r\n    //EDIT OPTION END\r\n\r\n    addPrinterDetailsToDB = async () => {\r\n   \r\n        let num = Math.floor(Math.random() * Math.floor(10000));\r\n\r\n        var printerformdata = new FormData()\r\n        printerformdata.append(\"printer_id\", num.toString())\r\n        printerformdata.append(\"ip_address\", this.state.IPaddress)\r\n        printerformdata.append(\"port_number\", this.state.portNumber)\r\n        printerformdata.append(\"country_id\", this.state.countryId)\r\n        printerformdata.append(\"warehouse_id\", this.state.warehouseId)\r\n\r\n        let url = base_url+'printer_ip/'\r\n\r\n        try {\r\n            let token = localStorage.getItem(\"token\")\r\n\r\n            var config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': 'Token ' + token\r\n                },\r\n            };\r\n\r\n            const response = await Axios.post(url, printerformdata, config)\r\n            this.state.printerIPdata.unshift(response.data)\r\n            var elem = document.getElementById('addPrinterDetailsModal')\r\n            var instance = M.Modal.getInstance(elem);\r\n            instance.close();\r\n            this.setState({\r\n                countryId: \"\", countryName: \"\", warehouseId: \"\",\r\n                portNumber: \"\", IPaddress: \"\",\r\n                error: \"\"\r\n            })\r\n            // @Todo: APi to be called to save data for SLAB\r\n            M.toast({ html: 'Added Printer Details successfully ', classes: \"white-text orange rounded\" })\r\n\r\n\r\n        } catch (err) {\r\n            this.setState({\r\n                error: \"OH Snap! Something is Wrong.Please try again\"\r\n            })\r\n            M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        // Auto initialize all the things!\r\n        M.AutoInit();\r\n    }\r\n\r\n\r\n    render() {\r\n        var uniquekey = 0\r\n        var warehouseIDkey = 0\r\n\r\n        const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n\r\n            return (\r\n                <option key={uniquekey++} value={country}>{country}</option>\r\n            )\r\n        })\r\n\r\n\r\n        const selectWarehouseIDOptions = this.state.warehouseIDlist.map((wID) => {\r\n\r\n            return (\r\n                <option key={warehouseIDkey++} value={wID}>{wID}</option>\r\n            )\r\n        })\r\n\r\n        var sr_no = 0;  \r\n        const printerIPtable = this.state.printerIPdata.map((printer) => {\r\n        sr_no=sr_no+1            \r\n            return (\r\n                <Fragment key={sr_no}>\r\n                    <tr>\r\n                        <td>{sr_no}</td>\r\n                        <td>{printer.printer_id}</td>\r\n                        <td>{printer.ip_address}</td>\r\n                        <td>{printer.port_number}</td>\r\n                        <td>{printer.country_id}</td>\r\n                        <td>{printer.warehouse_id}</td>\r\n                        <td><a title=\"Edit\" onClick={this.handleEditOption}><EditOutlined /></a></td>\r\n                        <td className=\"hide\">{printer.id}</td>\r\n\r\n                    </tr>\r\n                </Fragment>\r\n\r\n            )\r\n        })\r\n\r\n        const table_render = <Table hover >\r\n            <thead>\r\n                <tr>\r\n                    <th>Sr.No.</th>\r\n                    <th>Printer ID</th>\r\n                    <th>IP Address</th>\r\n                    <th>Port No.</th>\r\n                    <th>Country ID</th>\r\n                    <th>Warehouse ID</th>\r\n                    <th>Edit</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {printerIPtable}\r\n\r\n            </tbody>\r\n        </Table>\r\n\r\n        return (\r\n            <Fragment>\r\n                <br></br>\r\n                <br></br>\r\n                {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n                {/* <!-- Modal Trigger --> */}\r\n                <div id=\"addPrinterDetailsModal\" className=\"modal modal-fixed-footer\">\r\n                    <div className=\"modal-content\">\r\n\r\n                        <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update Printer Details\" : \"Add Printer Details \"}</h4>\r\n\r\n                        <Row>\r\n                            <Col xs={12} >\r\n                                <form>\r\n                                    <p className=\"center red-text\">{this.state.error}</p>\r\n\r\n                                    <Row>\r\n                                        <Col className=\" rowdivPading \" xs={12}>\r\n                                            <div className=\"input-field col s6 offset-s3 center\">\r\n                                                <div id=''>\r\n\r\n                                                    {\r\n                                                        this.state.editRow\r\n                                                        ? <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" value={this.state.countryName} onChange={this.handleCountryNameChange}>\r\n                                                            <option value=\"\" disabled >Choose Country</option>\r\n                                                            {selectCounrtyOptions}\r\n\r\n                                                        </select>\r\n                                                        : <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" defaultValue={'DEFAULT'} onChange={this.handleCountryNameChange}>\r\n                                                            <option value=\"DEFAULT\" disabled >Choose Country</option>\r\n                                                            {selectCounrtyOptions}\r\n\r\n                                                        </select>\r\n                                                    }\r\n                                                    <label>Select Country</label>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col className=\" rowdivPading \" xs={12}>\r\n                                            <div className=\"input-field col s6 offset-s3 center\">\r\n                                                <div id=''>\r\n                                                    {\r\n                                                        this.state.editRow\r\n                                                        ? <select id=\"warehouse_id_select\" name=\"warehouseId_select\" className=\"browser-default warehouse_id_select\" value={this.state.warehouseId} onChange={this.handleWarehouseIdChange}>\r\n                                                            <option value=\"\" disabled >Choose Warehouse ID</option>\r\n                                                            {selectWarehouseIDOptions}\r\n                                                        </select>\r\n                                                        : <select id=\"warehouse_id_select\" name=\"warehouseId_select\" className=\"browser-default warehouse_id_select\" defaultValue={'DEFAULT'} onChange={this.handleWarehouseIdChange}>\r\n                                                            <option value=\"DEFAULT\" disabled >Choose Warehouse ID</option>\r\n                                                            {selectWarehouseIDOptions}\r\n                                                        </select>\r\n                                                    }\r\n                                                    <label>Select Warehouse ID</label>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col className=\" rowdivPading \">\r\n                                            <div className=\"input-field col s6 offset-s3 center\">\r\n                                                <input name=\"IPaddress\" id=\"IP_address\" type=\"text\" className=\"\" value={this.state.IPaddress}\r\n                                                    onChange={this.handleIPaddress} />\r\n                                                <label htmlFor=\"IP_address\" className=\"black-text\">Enter IP Address</label>\r\n                                                <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col className=\" rowdivPading \">\r\n                                            <div className=\"input-field col s6 offset-s3 center\">\r\n                                                <input name=\"portNumber\" id=\"port_number\" type=\"text\" className=\"\" value={this.state.portNumber}\r\n                                                    onChange={this.handlePortNumber} />\r\n                                                <label htmlFor=\"port_number\" className=\"black-text\">Enter Port Number</label>\r\n                                                <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n                        <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                            <Button id='cancelPrinterBtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \" onClick={this.closeModal} >Cancel</Button>\r\n                            {\r\n                                this.state.editRow\r\n                                    ? <Button id=\"updatePrinterBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.updatePrinterDetailsDB}>Update</Button>\r\n                                    : <Button id=\"addPrinterBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addPrinterDetailsToDB}> Add</Button>\r\n                            }\r\n                        </ButtonGroup>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                    <Row>\r\n                        <Col xs={12} md={12} lg={12} >\r\n                            <div className=\"tableheight\">\r\n                                {table_render}\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col >\r\n\r\n                            <Nav className=\"right\">\r\n                                <Nav.Link className=\"red-text modal-trigger \" href=\"\" onClick={this.openAddPrinterDetailsModal}>\r\n                                    Add Printer Details<Image className=\"red-text mr-auto\" src=\"assets/images/plus-circle-red-m.svg\" /></Nav.Link>\r\n                            </Nav>\r\n\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\OperatorPanel\\CustomerDetailCard.js",["313","314"],"import React, {Component,} from 'react';\r\nimport {Redirect, useHistory } from 'react-router-dom';\r\nimport {Card,Image,Row,Col} from 'react-bootstrap';\r\n\r\n\r\nimport \"./createorder.css\";\r\n\r\n\r\nclass CustomerDetailCard extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n  this.state = ({title:\"***\",name:\"********\",\r\n              email:\"**********\",address:\"********\",phone:\"********\"\r\n\r\n              })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n      if (this.props.info.ezz_id !== prevProps.info.ezz_id) {\r\n        \r\n         this.setState({title:this.props.info.title,name:this.props.info.name,\r\n            email:this.props.info.email,address: this.props.info.address,phone:this.props.info.phone_number\r\n        \r\n        })\r\n\r\n      }\r\n    }\r\n\r\n\r\n    render(){ \r\n        return(\r\n            <Row>\r\n            <Col>\r\n            \r\n            <Card className=\"\" id=\"customerbasicdetailsCard\">\r\n        <Card.Body>\r\n            <Card.Text>\r\n                <Row>\r\n                    <Col xs={8}>\r\n        <h6 >Name:</h6><p className=\"inline\">{this.state.title + \" \" + this.state.name}</p>\r\n                    </Col>\r\n                    <Col className=\"\">\r\n                    <Image src=\"assets/images/avatar-big.svg\"/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={8}>\r\n                        <h6 >Address:</h6><p>{this.state.address}</p>\r\n                    </Col>\r\n                    <Col xs={4} className=\"right\">\r\n                    <h6 >Phone:</h6><p>{this.state.phone}</p>\r\n                    </Col>\r\n                    <Col className=\"\">\r\n                    <h6 >Email:</h6><p>{this.state.email}</p>\r\n                    </Col>\r\n                </Row>\r\n               \r\n            \r\n            </Card.Text>\r\n               \r\n\r\n\r\n               </Card.Body> \r\n        </Card>\r\n            </Col>\r\n        </Row>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomerDetailCard;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddPromotionalData.js",["315","316","317","318","319","320","321","322","323","324","325"],"\r\nimport React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from 'axios';\r\nimport './addpromotional.css';\r\n\r\n\r\nclass DiscountFrag extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n\r\n        countryId: \"\",\r\n        discountName: \"\", discountValue: \"\", startDate: \"\", endDate: \"\", \r\n        discountData: this.props.discountdata,\r\n        countryNameList: this.props.country_name,\r\n        countrylist: this.props.countrylist, countrycodelist: this.props.country_code_list, error: \"\",\r\n        countryName:\"\", editRow: false, mainId:\"\", keyId:\"\"\r\n    })\r\n\r\n    // console.log('discounttttt',this.state.discountData);\r\n    // console.log('country_name_list',this.state.countryNameList);\r\n  }\r\n\r\n  handleCountryNameChange = (e) => {\r\n\r\n    let selected_countryName = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n\r\n    this.setState({ countryName: e.target.value})\r\n    this.setState({ countryId: selected_countryName})\r\n  }\r\n\r\n  handleDiscountNameChange = (e) => {\r\n    this.setState({ discountName: e.target.value })\r\n  // console.log('function to add add discount');\r\n  }\r\n\r\n  // handleStartDate = e => {    \r\n  //   var context = this;\r\n  //   var elems_startDate = document.getElementById('start_date');\r\n  //   var options_recieved={\r\n  //       //selectMonths: true, // Enable Month Selection\r\n  //       selectYears: 1, // Creates a dropdown of 10 years to control year\r\n  //       format:'yyyy-mm-dd',\r\n  //       autoClose :true,\r\n  //       defaultDate:new Date(),\r\n  //       setDefaultDate :true,\r\n  //       onSelect: function(date) {\r\n  //         let selecteddata =  date.getFullYear() +'-'+ (date.getMonth() + 1) +'-'+date.getDate()\r\n  //         context.setState({ discountStartDate: selecteddata});\r\n  //         //  console.log(\"recived\"+ selecteddata); // Selected date is logged\r\n  //       },\r\n  //     }\r\n  //   var instances = M.Datepicker.init(elems_startDate, options_recieved);   \r\n  //   console.log('START DATE', this.state.discountStartDate); \r\n  //   console.log('START DATE', e.target.value); \r\n  // }\r\n\r\n  handleEndDate = e => {\r\n    var context = this;\r\n    var elems_endDate = document.getElementById('start_end');\r\n    var options_recieved={\r\n        //selectMonths: true, // Enable Month Selection\r\n        selectYears: 1, // Creates a dropdown of 10 years to control year\r\n        format:'yyyy-mm-dd',\r\n        autoClose :true,\r\n        defaultDate:new Date(),\r\n        setDefaultDate :true,\r\n        onSelect: function(date) {\r\n          let selecteddata =  date.getFullYear() +'-'+ (date.getMonth() + 1) +'-'+date.getDate()\r\n          context.setState({ discountEndDate: selecteddata});\r\n          //  console.log(\"recived\"+ selecteddata); // Selected date is logged\r\n        },\r\n      }\r\n    var instances = M.Datepicker.init(elems_endDate, options_recieved);\r\n    console.log('START DATE', this.state.discountEndDate); \r\n  }\r\n\r\n  handleDiscountChange = (e) => {\r\n      this.setState({ discountValue: e.target.value })\r\n    // console.log('function to add add discount');\r\n  }\r\n\r\n//EDIT OPTION START\r\nhandleEditOption = (e) => {\r\n  this.setState({editRow:true})\r\n  var elems = document.getElementById(\"addDiscountModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n\r\n  let selectedRowIndex ;\r\n              e = e || window.event;\r\n              var data = [];\r\n              var target = e.srcElement || e.target;\r\n              // console.log(target.nodeName)\r\n              while (target && target.nodeName !== \"TR\") {\r\n                  target = target.parentNode;\r\n                  selectedRowIndex= target.sectionRowIndex\r\n                  console.log(\"Clicked row\",target.sectionRowIndex)\r\n                  // console.log(target.parentNode.index)\r\n              }\r\n              if (target) {\r\n                  var cells = target.getElementsByTagName(\"td\");\r\n                  for (var i = 0; i < cells.length; i++) {\r\n                      data.push(cells[i].innerHTML);\r\n                  }\r\n              } \r\n              \r\n              // let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[1])]\r\n              \r\n              let country_name = country_name[data[1]]\r\n              \r\n             \r\n              console.log(data);\r\n              this.setState({mainId: data[0], keyId: data[1]})\r\n              this.setState({\r\n                discountName: data[2],\r\n                discountValue: data[3], \r\n                countryName: country_name\r\n              })\r\n\r\n}\r\n\r\nopenAddDiscountModal =  ()=>{\r\n  this.setState({editRow:false})\r\n\r\n  var elems = document.getElementById(\"addDiscountModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n        \r\n}\r\ncloseModal = ()=>{\r\n  var elems = document.getElementById(\"addDiscountModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.close();\r\n  this.setState({error: \"\", editRow:false})\r\n  this.setState({\r\n      countryId: \"\", countryName:\"\"\r\n  })  \r\n}\r\n\r\nupdateDiscountDB = async () => {\r\n  // console.log(\"UPDATE FUNCT\")\r\n\r\n  let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n  let url = base_url+`promotions/${this.state.keyId}/`\r\n\r\n  // let num = Math.floor(Math.random() * Math.floor(10000));\r\n\r\n    var discountformdata = new FormData()\r\n    discountformdata.append(\"country\", this.state.countryId)\r\n    discountformdata.append('discount_percentage',this.state.discountValue)\r\n    \r\n    this.state.discountName == \"\"\r\n    ?discountformdata.append('discount_name',this.state.countryName+' '+'Discount')\r\n    :discountformdata.append('discount_name',this.state.discountName)\r\n\r\n    try {\r\n      let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n        \r\n      };\r\n      const response = await Axios.put(url, discountformdata, config)\r\n  \r\n      let itemIndex = parseInt(this.state.mainId) - 1\r\n      this.state.discountData.splice(itemIndex, 1, response.data)\r\n  \r\n      var elem = document.getElementById('addDiscountModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      M.toast({ html: 'Updated Discount Details Successfully.' , classes: \"white-text orange rounded\" })\r\n      this.setState({\r\n        discountName: \"\", discountValue: \"\",\r\n        countryId: \"\", countryName:\"\"\r\n      })\r\n      this.setState({\r\n        error: \"\",\r\n        editRow: false\r\n      })\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\",\r\n        // editRow: false\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n  \r\n      console.log(err.message)\r\n    }\r\n\r\n}\r\n//EDIT OPTION END\r\n\r\n\r\n  addDiscountToDB = async () => {\r\n    // console.log('ADD FUNCT');\r\n\r\n    var discountformdata = new FormData()\r\n    discountformdata.append(\"country\", this.state.countryId)\r\n    discountformdata.append('discount_percentage',this.state.discountValue)\r\n    discountformdata.append('start_date',this.state.startDate)\r\n    discountformdata.append('end_date',this.state.endDate)\r\n    \r\n    this.state.discountName == \"\"\r\n    ?discountformdata.append('discount_name',this.state.countryName+' '+'Discount')\r\n    :discountformdata.append('discount_name',this.state.discountName)\r\n    \r\n    \r\n    let url = base_url+'promotions/'\r\n\r\n    try{\r\n      let token = localStorage.getItem('token')\r\n      var config = {\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': 'Token'+token,\r\n        }    \r\n      };\r\n\r\n      const response = await Axios.post(url, discountformdata, config)\r\n      this.state.discountData.push(response.data)\r\n      console.log('push response data', response.data);\r\n\r\n      var elem = document.getElementById('addDiscountModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      this.setState({\r\n        countryId: \"\",\r\n        discountName: \"\", discountValue: \"\",\r\n        startDate: \"\",endDate: \"\",\r\n        error: \"\"\r\n      })\r\n\r\n      M.toast({ html: 'Added Discount Successfully.', classes: \"white-text orange rounded\" })\r\n\r\n    }catch(err) {\r\n      console.log('ERRRR',err);\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\"\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  handleDateChange = ev => {\r\n      alert(\"date\")\r\n      const target = ev.target\r\n      const name = target.name\r\n      console.log(ev.target.name)\r\n      console.log(ev.target.value)\r\n    this.setState({\r\n      [name]: target.value\r\n    });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n\r\n    let context = this\r\n\r\n    var elems_startDate = document.getElementById('start_date');\r\n\r\n    var options_startDate = {\r\n      //selectMonths: true, // Enable Month Selection\r\n      selectYears: 10, // Creates a dropdown of 10 years to control year\r\n      format: 'yyyy-mm-dd',\r\n      autoClose: true,\r\n      defaultDate: new Date(),\r\n      setDefaultDate: true,\r\n      onSelect: function (date) {\r\n        let selecteddata = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n        context.setState({ startDate: selecteddata });\r\n        // console.log(\"order\",selecteddata); // Selected date is logged\r\n      },\r\n    }\r\n    var instances = M.Datepicker.init(elems_startDate, options_startDate);\r\n\r\n    var elems_endDate = document.getElementById('end_date');\r\n\r\n    var options_endDate = {\r\n      //selectMonths: true, // Enable Month Selection\r\n      selectYears: 10, // Creates a dropdown of 10 years to control year\r\n      format: 'yyyy-mm-dd',\r\n      autoClose: true,\r\n      defaultDate: new Date(),\r\n      setDefaultDate: true,\r\n      onSelect: function (date) {\r\n        let selecteddata = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n        context.setState({ endDate: selecteddata });\r\n        // console.log(\"order\",selecteddata); // Selected date is logged\r\n      },\r\n    }\r\n    var instances = M.Datepicker.init(elems_endDate, options_endDate);\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    var uniquekey = 0\r\n    const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n\r\n      return (\r\n        <option key={uniquekey++} value={country}>{country}</option>\r\n      )\r\n    })\r\n\r\n    const discount_table = this.state.discountData.map((discount, index) => {\r\n      return (\r\n        <Fragment key={discount.id}>\r\n          <tr>\r\n            <td>{index+1}</td>\r\n            <td>{ this.state.countryNameList[discount.country] }</td>\r\n            <td>{discount.discount_name}</td>\r\n            <td>{discount.start_date}</td>\r\n            <td>{discount.end_date}</td>\r\n            <td>{discount.discount_percentage}</td>\r\n            <td onClick={this.handleEditOption}><a title = \"Edit\"><EditOutlined/></a></td>\r\n          </tr>\r\n        </Fragment>\r\n\r\n      )\r\n    })\r\n\r\n    const table_render = <Table hover >\r\n      <thead>\r\n        <tr>\r\n          <th>Sr. No.</th>\r\n          <th>Country</th>\r\n          <th>Promotion Name</th>\r\n          <th>Start Date</th>\r\n          <th>End Date</th>\r\n          <th>Discount (%)</th>\r\n          <th>Edit</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {discount_table}\r\n      </tbody>\r\n    </Table>\r\n\r\n    return (\r\n      <Fragment>\r\n        <br></br>\r\n        <br></br>\r\n        {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addDiscountModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n\r\n          <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update Discount Details\" : \"Add Discount Details\"}</h4>\r\n\r\n            <h4 className=\"center orange-text\">   </h4>\r\n\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <p className=\"center red-text\">{this.state.error}</p>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div id=''>\r\n                        {\r\n                            this.state.editRow\r\n                            ? <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" value={this.state.countryName} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"\" disabled >Choose Country</option>\r\n                              {selectCounrtyOptions}\r\n\r\n                            </select>\r\n                            : <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" defaultValue={'DEFAULT'} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose Country</option>\r\n                              {selectCounrtyOptions}\r\n                            </select>\r\n                          }\r\n                          <label>Select Country</label>\r\n\r\n                        </div>\r\n                      </div>  \r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"discount_name\" id=\"discount_name\" type=\"text\" \r\n                          value={this.state.discountName} onChange={this.handleDiscountNameChange} className=\"\" />\r\n                        <label htmlFor=\"discount_name\" className=\"black-text\">Promotion Name</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Optional</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"startDate\" id=\"start_date\" type=\"text\" className=\"datepicker\" \r\n                          value = { this.state.startDate } onChange={this.handleDateChange} />\r\n                        <label htmlFor=\"start_date\" className=\"black-text\">Start Date</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"endDate\" id=\"end_date\" type=\"text\"  className=\"\" \r\n                          value = { this.state.endDate } onChange={this.handleDateChange} />\r\n                        <label htmlFor=\"end_date\" className=\"black-text\">End Date</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"></span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"discount\" id=\"discountValue\" type=\"text\" \r\n                          value={this.state.discountValue} onChange={this.handleDiscountChange} className=\"\" />\r\n                        <label htmlFor=\"discountValue\" className=\"black-text\">Enter Discount Value</label>\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Discount %</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id='cancelDiscountBtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Cancel</Button>\r\n              {\r\n              this.state.editRow\r\n              ?<Button id=\"updateDiscountBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick = {this.updateDiscountDB}>Update</Button>\r\n              :<Button id=\"addDiscountBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addDiscountToDB}> Add</Button>\r\n              }   \r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n\r\n              <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text modal-trigger \" href=\"\" onClick={this.openAddDiscountModal}>\r\n                  Add Discount Details<Image className=\"red-text mr-auto\" src=\"assets/images/plus-circle-red-m.svg\" /></Nav.Link>\r\n              </Nav>\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default DiscountFrag;","C:\\Users\\DELL\\Desktop\\React20\\ezzyadmin\\ezzytrace\\src\\components\\AdminPanel\\AddLanguageTemplate.js",["326","327","328","329","330","331"],"\r\nimport React, { Component, Fragment } from 'react';\r\nimport { base_url } from '../../globalConstants'\r\nimport { Table, Row, Col, Image, Nav, ButtonGroup, Button } from 'react-bootstrap';\r\nimport M from \"materialize-css\";\r\nimport { EditOutlined } from \"@material-ui/icons\";\r\nimport Axios from 'axios';\r\nimport './addlanguage.css';\r\n\r\n\r\nclass LanguageFrag extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      languageData: this.props.languageData, selectedCountry: \"\",\r\n      defaultLangauage: \"\", defaultLangauageList: this.props.default_langList,\r\n      countrylist: this.props.countrylist, countrycodelist: this.props.country_code_list, error: \"\",\r\n      countryName:\"\", editRow: false, mainId:\"\", keyId:\"\"\r\n    })\r\n\r\n  }\r\n\r\n  handleCountryNameChange = (e) => {\r\n\r\n    let selected_countryName = this.state.countrycodelist[this.state.countrylist.indexOf(e.target.value)]\r\n\r\n    this.setState({ countryName: e.target.value})\r\n    this.setState({ countryId: selected_countryName})\r\n  }\r\n\r\n  handleLanguageChange = e => {\r\n    this.setState({\r\n      defaultLangauage: e.target.value\r\n    })\r\n  }\r\n\r\n//EDIT OPTION START\r\nhandleEditOption = (e) => {\r\n  this.setState({editRow:true})\r\n  var elems = document.getElementById(\"addLanguageModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n\r\n  let selectedRowIndex ;\r\n              e = e || window.event;\r\n              var data = [];\r\n              var target = e.srcElement || e.target;\r\n              // console.log(target.nodeName)\r\n              while (target && target.nodeName !== \"TR\") {\r\n                  target = target.parentNode;\r\n                  selectedRowIndex= target.sectionRowIndex\r\n                  console.log(\"Clicked row\",target.sectionRowIndex)\r\n                  // console.log(target.parentNode.index)\r\n              }\r\n              if (target) {\r\n                  var cells = target.getElementsByTagName(\"td\");\r\n                  for (var i = 0; i < cells.length; i++) {\r\n                      data.push(cells[i].innerHTML);\r\n                  }\r\n              } \r\n              let country_name = this.state.countrylist[this.state.countrycodelist.indexOf(data[5])]\r\n             \r\n              console.log(data);\r\n              this.setState({mainId: data[0], keyId: data[4]})\r\n              this.setState({\r\n                countryName: country_name,\r\n                selectedCountry: data[1],\r\n                defaultLangauage: data[2]\r\n              })\r\n\r\n}\r\nopenAddLanguageModal =  ()=>{\r\n  this.setState({editRow:false})\r\n\r\n  var elems = document.getElementById(\"addLanguageModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.open()\r\n        \r\n}\r\ncloseModal = ()=>{\r\n  var elems = document.getElementById(\"addLanguageModal\");\r\n  var instance = M.Modal.init(elems);\r\n  instance.close();\r\n  this.setState({error: \"\", editRow:false})\r\n  this.setState({\r\n    countryId: \"\", countryName:\"\"\r\n  })  \r\n}\r\nupdateLanguageDB = async () => {\r\n\r\n  // let country_code = this.state.countrycodelist[this.state.countrylist.indexOf(this.state.countryName)]\r\n  let url = base_url+`countries/${this.state.keyId}/`\r\n\r\n  // let num = Math.floor(Math.random() * Math.floor(10000));\r\n\r\n  var languageformdata = new FormData()\r\n  languageformdata.append('default_language', this.state.defaultLangauage)\r\n\r\n  try{\r\n    let token = localStorage.getItem(\"token\")\r\n      var config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' , 'Authorization':'Token '+token},\r\n        \r\n      };\r\n      const response = await Axios.patch(url, languageformdata, config)\r\n\r\n      let itemIndex = parseInt(this.state.mainId) - 1\r\n      this.state.languageData.splice(itemIndex, 1, response.data)\r\n  \r\n      var elem = document.getElementById('addLanguageModal')\r\n      var instance = M.Modal.getInstance(elem);\r\n      instance.close();\r\n      M.toast({ html: 'Updated Language Details Successfully.' , classes: \"white-text orange rounded\" })\r\n      this.setState({        \r\n        countryId: \"\", countryName:\"\",\r\n        defaultLangauage:\"\"\r\n      })\r\n      this.setState({\r\n        error: \"\",\r\n        editRow: false\r\n      })\r\n\r\n  }catch(err){\r\n      this.setState({\r\n        error: \"OH Snap! Something is Wrong.Please try again\",\r\n        // editRow: false\r\n      })\r\n      M.toast({ html: 'Please Try Again!', classes: \"white-text red rounded\" });\r\n\r\n      console.log(err.message)\r\n\r\n  }\r\n}\r\n//EDIT OPTION END\r\n\r\n\r\n  addLanguageToDB = async () => {\r\n    console.log('add lang');\r\n\r\n\r\n    // var languageformdata = new FormData()\r\n\r\n    // let url = base_url+'categories/'  \r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n\r\n  render() {\r\n    var uniquekey = 0\r\n    const selectCounrtyOptions = this.state.countrylist.map((country) => {\r\n\r\n      return (\r\n        <option key={uniquekey++} value={country}>{country}</option>\r\n      )\r\n    })\r\n\r\n    var sr_no = 0;\r\n    const languagetable = this.state.languageData.map((language, index) => {\r\n      return (\r\n        <Fragment key={language.id}>\r\n          <tr>\r\n            <td>{index+1}</td>\r\n            <td>{language.name}</td>\r\n            <td>{language.default_language}</td>\r\n            <td onClick={this.handleEditOption}><a title = \"Edit\"><EditOutlined/></a></td>\r\n            <td className=\"hide\">{language.country_id}</td>\r\n          </tr>\r\n        </Fragment>\r\n\r\n      )\r\n    })\r\n\r\n    const table_render = <Table hover >\r\n      <thead>\r\n        <tr>\r\n          <th>Sr.No.</th>\r\n          <th>Country</th>\r\n          <th>Default Language</th>\r\n          {/* <th>Other Language</th> */}\r\n          <th>Edit</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {languagetable}\r\n      </tbody>\r\n    </Table>\r\n\r\n    return (\r\n      <Fragment>\r\n        <br></br>\r\n        <br></br>\r\n        {/* <div className=\"\">\r\n    <AddCountry ref=\"child\"/>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        {/* <!-- Modal Trigger --> */}\r\n        <div id=\"addLanguageModal\" className=\"modal modal-fixed-footer\">\r\n          <div className=\"modal-content\">\r\n\r\n          <h4 className=\"center orange-text\"> {this.state.editRow ? \"Update Language Details\" : \"Add Language\"}</h4>\r\n\r\n            <h4 className=\"center orange-text\">   </h4>\r\n\r\n\r\n            <Row>\r\n              <Col xs={12} >\r\n                <form>\r\n                  <p className=\"center red-text\">{this.state.error}</p>\r\n\r\n                  {/* <Row>\r\n                    <Col className=\" rowdivPading \" xs={12}>\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <div id=''>\r\n                        {\r\n                            this.state.editRow\r\n                            ? <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" value={this.state.countryName} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"\" disabled >Choose Country</option>\r\n                              {selectCounrtyOptions}\r\n\r\n                            </select>\r\n                            : <select id=\"country_name_select\" name=\"country_name\" className=\"browser-default country_name_select\" defaultValue={'DEFAULT'} onChange={this.handleCountryNameChange}>\r\n                              <option value=\"DEFAULT\" disabled >Choose Country</option>\r\n                              {selectCounrtyOptions}\r\n                            </select>\r\n                          }\r\n                          <label>Select Country</label>\r\n\r\n                        </div>\r\n                      </div>  </Col>\r\n                  </Row> */}\r\n\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"country\" id=\"countryName\" type=\"text\" value={this.state.selectedCountry}\r\n                          disabled className=\"\" />\r\n                        {/* <label htmlFor=\"countryName\" className=\"black-text\">Country</label> */}\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\">Country</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\" rowdivPading \">\r\n                      <div className=\"input-field col s6 offset-s3 center\">\r\n                        <input name=\"language\" id=\"def_language\" type=\"text\" value={this.state.defaultLangauage} className=\"\" \r\n                          onChange={this.handleLanguageChange} />\r\n                        {/* <label htmlFor=\"def_language\" className=\"black-text\">Enter Default Language</label> */}\r\n                        <span className=\"helper-text left\" data-error=\"wrong\" data-success=\"\"> Language</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {/* <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a> */}\r\n\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button id='cancelLanguageBtn' variant=\"outline-secondary\" className=\"mr-4 btn modal-close \"  >Cancel</Button>\r\n              {\r\n              this.state.editRow\r\n              ?<Button id=\"updateLanguageBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick = {this.updateLanguageDB}>Update</Button>\r\n              :<Button id=\"addLanguageBtn\" variant=\"outline-primary\" className=\"mr-2 btn\" onClick={this.addLanguageToDB}> Add</Button>\r\n              }   \r\n            </ButtonGroup>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <Row>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <div className=\"tableheight\">\r\n                {table_render}\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n          <Row>\r\n            <Col >\r\n\r\n              {/* <Nav className=\"right\">\r\n                <Nav.Link className=\"red-text modal-trigger \" href=\"\" onClick={this.openAddLanguageModal}>\r\n                  Add Language Details<Image className=\"red-text mr-auto\" src=\"assets/images/plus-circle-red-m.svg\" /></Nav.Link>\r\n              </Nav> */}\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default LanguageFrag;",{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":3,"column":8,"nodeType":"338","messageId":"339","endLine":3,"endColumn":13},{"ruleId":"336","severity":1,"message":"340","line":8,"column":20,"nodeType":"338","messageId":"339","endLine":8,"endColumn":23},{"ruleId":"336","severity":1,"message":"341","line":8,"column":24,"nodeType":"338","messageId":"339","endLine":8,"endColumn":27},{"ruleId":"336","severity":1,"message":"342","line":8,"column":28,"nodeType":"338","messageId":"339","endLine":8,"endColumn":32},{"ruleId":"336","severity":1,"message":"343","line":8,"column":33,"nodeType":"338","messageId":"339","endLine":8,"endColumn":42},{"ruleId":"344","severity":1,"message":"345","line":163,"column":7,"nodeType":"346","endLine":163,"endColumn":43},{"ruleId":"344","severity":1,"message":"345","line":167,"column":13,"nodeType":"346","endLine":167,"endColumn":91},{"ruleId":"344","severity":1,"message":"345","line":85,"column":7,"nodeType":"346","endLine":85,"endColumn":43},{"ruleId":"344","severity":1,"message":"345","line":89,"column":13,"nodeType":"346","endLine":89,"endColumn":91},{"ruleId":"336","severity":1,"message":"347","line":2,"column":9,"nodeType":"338","messageId":"339","endLine":2,"endColumn":17},{"ruleId":"336","severity":1,"message":"348","line":2,"column":19,"nodeType":"338","messageId":"339","endLine":2,"endColumn":29},{"ruleId":"349","severity":1,"message":"350","line":96,"column":25,"nodeType":"351","messageId":"352","endLine":96,"endColumn":36},{"ruleId":"336","severity":1,"message":"353","line":275,"column":13,"nodeType":"338","messageId":"339","endLine":275,"endColumn":21},{"ruleId":"354","severity":1,"message":"355","line":386,"column":11,"nodeType":"356","messageId":"357","endLine":401,"endColumn":12},{"ruleId":"336","severity":1,"message":"358","line":472,"column":13,"nodeType":"338","messageId":"339","endLine":472,"endColumn":27},{"ruleId":"359","severity":1,"message":"360","line":494,"column":13,"nodeType":"338","messageId":"361","endLine":494,"endColumn":22},{"ruleId":"359","severity":1,"message":"360","line":509,"column":13,"nodeType":"338","messageId":"361","endLine":509,"endColumn":22},{"ruleId":"336","severity":1,"message":"362","line":509,"column":13,"nodeType":"338","messageId":"339","endLine":509,"endColumn":22},{"ruleId":"336","severity":1,"message":"363","line":686,"column":15,"nodeType":"338","messageId":"339","endLine":686,"endColumn":23},{"ruleId":"336","severity":1,"message":"364","line":688,"column":15,"nodeType":"338","messageId":"339","endLine":688,"endColumn":35},{"ruleId":"336","severity":1,"message":"365","line":690,"column":15,"nodeType":"338","messageId":"339","endLine":690,"endColumn":39},{"ruleId":"336","severity":1,"message":"366","line":712,"column":19,"nodeType":"338","messageId":"339","endLine":712,"endColumn":36},{"ruleId":"336","severity":1,"message":"366","line":874,"column":13,"nodeType":"338","messageId":"339","endLine":874,"endColumn":30},{"ruleId":"354","severity":1,"message":"355","line":891,"column":6,"nodeType":"356","messageId":"357","endLine":898,"endColumn":4},{"ruleId":"336","severity":1,"message":"367","line":1003,"column":22,"nodeType":"338","messageId":"339","endLine":1003,"endColumn":28},{"ruleId":"368","severity":1,"message":"369","line":5,"column":5,"nodeType":"370","messageId":"371","endLine":8,"endColumn":6},{"ruleId":"336","severity":1,"message":"372","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":22},{"ruleId":"336","severity":1,"message":"367","line":144,"column":9,"nodeType":"338","messageId":"339","endLine":144,"endColumn":15},{"ruleId":"336","severity":1,"message":"367","line":184,"column":9,"nodeType":"338","messageId":"339","endLine":184,"endColumn":15},{"ruleId":"359","severity":1,"message":"373","line":223,"column":13,"nodeType":"338","messageId":"361","endLine":223,"endColumn":26},{"ruleId":"336","severity":1,"message":"367","line":276,"column":9,"nodeType":"338","messageId":"339","endLine":276,"endColumn":15},{"ruleId":"336","severity":1,"message":"374","line":563,"column":13,"nodeType":"338","messageId":"339","endLine":563,"endColumn":14},{"ruleId":"336","severity":1,"message":"375","line":564,"column":13,"nodeType":"338","messageId":"339","endLine":564,"endColumn":14},{"ruleId":"349","severity":1,"message":"350","line":720,"column":19,"nodeType":"351","messageId":"352","endLine":720,"endColumn":30},{"ruleId":"336","severity":1,"message":"367","line":887,"column":11,"nodeType":"338","messageId":"339","endLine":887,"endColumn":17},{"ruleId":"376","severity":1,"message":"377","line":1041,"column":11,"nodeType":"378","endLine":1041,"endColumn":34},{"ruleId":"376","severity":1,"message":"377","line":1042,"column":7,"nodeType":"378","endLine":1042,"endColumn":31},{"ruleId":"376","severity":1,"message":"377","line":1043,"column":7,"nodeType":"378","endLine":1043,"endColumn":31},{"ruleId":"376","severity":1,"message":"377","line":1044,"column":7,"nodeType":"378","endLine":1044,"endColumn":32},{"ruleId":"376","severity":1,"message":"377","line":1045,"column":7,"nodeType":"378","endLine":1045,"endColumn":29},{"ruleId":"376","severity":1,"message":"377","line":1046,"column":7,"nodeType":"378","endLine":1046,"endColumn":35},{"ruleId":"344","severity":1,"message":"379","line":1234,"column":39,"nodeType":"346","endLine":1237,"endColumn":96},{"ruleId":"336","severity":1,"message":"380","line":3,"column":31,"nodeType":"338","messageId":"339","endLine":3,"endColumn":41},{"ruleId":"336","severity":1,"message":"381","line":4,"column":61,"nodeType":"338","messageId":"339","endLine":4,"endColumn":65},{"ruleId":"336","severity":1,"message":"382","line":4,"column":67,"nodeType":"338","messageId":"339","endLine":4,"endColumn":76},{"ruleId":"336","severity":1,"message":"383","line":4,"column":78,"nodeType":"338","messageId":"339","endLine":4,"endColumn":91},{"ruleId":"336","severity":1,"message":"384","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":21},{"ruleId":"336","severity":1,"message":"385","line":5,"column":31,"nodeType":"338","messageId":"339","endLine":5,"endColumn":42},{"ruleId":"336","severity":1,"message":"386","line":5,"column":55,"nodeType":"338","messageId":"339","endLine":5,"endColumn":66},{"ruleId":"336","severity":1,"message":"387","line":7,"column":10,"nodeType":"338","messageId":"339","endLine":7,"endColumn":15},{"ruleId":"336","severity":1,"message":"388","line":28,"column":9,"nodeType":"338","messageId":"339","endLine":28,"endColumn":13},{"ruleId":"336","severity":1,"message":"389","line":39,"column":9,"nodeType":"338","messageId":"339","endLine":39,"endColumn":22},{"ruleId":"336","severity":1,"message":"390","line":40,"column":9,"nodeType":"338","messageId":"339","endLine":40,"endColumn":23},{"ruleId":"391","severity":1,"message":"392","line":55,"column":33,"nodeType":"393","messageId":"394","endLine":55,"endColumn":35},{"ruleId":"395","severity":1,"message":"396","line":62,"column":34,"nodeType":"397","messageId":"398","endLine":62,"endColumn":36},{"ruleId":"336","severity":1,"message":"399","line":78,"column":9,"nodeType":"338","messageId":"339","endLine":78,"endColumn":19},{"ruleId":"336","severity":1,"message":"367","line":110,"column":9,"nodeType":"338","messageId":"339","endLine":110,"endColumn":15},{"ruleId":"336","severity":1,"message":"400","line":128,"column":13,"nodeType":"338","messageId":"339","endLine":128,"endColumn":35},{"ruleId":"401","severity":1,"message":"402","line":167,"column":6,"nodeType":"403","endLine":167,"endColumn":8,"suggestions":"404"},{"ruleId":"395","severity":1,"message":"396","line":301,"column":53,"nodeType":"397","messageId":"398","endLine":301,"endColumn":55},{"ruleId":"395","severity":1,"message":"396","line":375,"column":60,"nodeType":"397","messageId":"398","endLine":375,"endColumn":62},{"ruleId":"395","severity":1,"message":"396","line":406,"column":58,"nodeType":"397","messageId":"398","endLine":406,"endColumn":60},{"ruleId":"336","severity":1,"message":"380","line":3,"column":31,"nodeType":"338","messageId":"339","endLine":3,"endColumn":41},{"ruleId":"336","severity":1,"message":"342","line":4,"column":61,"nodeType":"338","messageId":"339","endLine":4,"endColumn":65},{"ruleId":"336","severity":1,"message":"382","line":4,"column":67,"nodeType":"338","messageId":"339","endLine":4,"endColumn":76},{"ruleId":"336","severity":1,"message":"383","line":4,"column":78,"nodeType":"338","messageId":"339","endLine":4,"endColumn":91},{"ruleId":"336","severity":1,"message":"385","line":5,"column":25,"nodeType":"338","messageId":"339","endLine":5,"endColumn":36},{"ruleId":"336","severity":1,"message":"386","line":5,"column":49,"nodeType":"338","messageId":"339","endLine":5,"endColumn":60},{"ruleId":"336","severity":1,"message":"405","line":6,"column":8,"nodeType":"338","messageId":"339","endLine":6,"endColumn":9},{"ruleId":"336","severity":1,"message":"406","line":17,"column":12,"nodeType":"338","messageId":"339","endLine":17,"endColumn":16},{"ruleId":"336","severity":1,"message":"407","line":17,"column":18,"nodeType":"338","messageId":"339","endLine":17,"endColumn":25},{"ruleId":"395","severity":1,"message":"396","line":161,"column":60,"nodeType":"397","messageId":"398","endLine":161,"endColumn":62},{"ruleId":"395","severity":1,"message":"396","line":244,"column":62,"nodeType":"397","messageId":"398","endLine":244,"endColumn":64},{"ruleId":"391","severity":1,"message":"408","line":244,"column":86,"nodeType":"393","messageId":"409","endLine":244,"endColumn":88},{"ruleId":"395","severity":1,"message":"396","line":273,"column":60,"nodeType":"397","messageId":"398","endLine":273,"endColumn":62},{"ruleId":"336","severity":1,"message":"380","line":1,"column":38,"nodeType":"338","messageId":"339","endLine":1,"endColumn":48},{"ruleId":"336","severity":1,"message":"410","line":8,"column":8,"nodeType":"338","messageId":"339","endLine":8,"endColumn":24},{"ruleId":"395","severity":1,"message":"396","line":124,"column":26,"nodeType":"397","messageId":"398","endLine":124,"endColumn":28},{"ruleId":"336","severity":1,"message":"367","line":267,"column":9,"nodeType":"338","messageId":"339","endLine":267,"endColumn":15},{"ruleId":"336","severity":1,"message":"367","line":303,"column":9,"nodeType":"338","messageId":"339","endLine":303,"endColumn":15},{"ruleId":"359","severity":1,"message":"373","line":342,"column":13,"nodeType":"338","messageId":"361","endLine":342,"endColumn":26},{"ruleId":"336","severity":1,"message":"367","line":392,"column":9,"nodeType":"338","messageId":"339","endLine":392,"endColumn":15},{"ruleId":"395","severity":1,"message":"411","line":640,"column":15,"nodeType":"397","messageId":"398","endLine":640,"endColumn":17},{"ruleId":"412","severity":1,"message":"413","line":754,"column":40,"nodeType":"414","messageId":"415","endLine":754,"endColumn":42},{"ruleId":"412","severity":1,"message":"413","line":754,"column":109,"nodeType":"414","messageId":"415","endLine":754,"endColumn":111},{"ruleId":"395","severity":1,"message":"411","line":1000,"column":85,"nodeType":"397","messageId":"398","endLine":1000,"endColumn":87},{"ruleId":"391","severity":1,"message":"392","line":1047,"column":33,"nodeType":"393","messageId":"394","endLine":1047,"endColumn":35},{"ruleId":"376","severity":1,"message":"377","line":1284,"column":12,"nodeType":"378","endLine":1284,"endColumn":36},{"ruleId":"376","severity":1,"message":"377","line":1285,"column":12,"nodeType":"378","endLine":1285,"endColumn":40},{"ruleId":"376","severity":1,"message":"377","line":1286,"column":12,"nodeType":"378","endLine":1286,"endColumn":36},{"ruleId":"344","severity":1,"message":"379","line":1427,"column":41,"nodeType":"346","endLine":1430,"endColumn":96},{"ruleId":"391","severity":1,"message":"408","line":1758,"column":44,"nodeType":"393","messageId":"409","endLine":1758,"endColumn":46},{"ruleId":"336","severity":1,"message":"380","line":1,"column":35,"nodeType":"338","messageId":"339","endLine":1,"endColumn":45},{"ruleId":"336","severity":1,"message":"416","line":30,"column":11,"nodeType":"338","messageId":"339","endLine":30,"endColumn":15},{"ruleId":"395","severity":1,"message":"411","line":36,"column":81,"nodeType":"397","messageId":"398","endLine":36,"endColumn":83},{"ruleId":"336","severity":1,"message":"343","line":4,"column":56,"nodeType":"338","messageId":"339","endLine":4,"endColumn":65},{"ruleId":"417","severity":1,"message":"418","line":48,"column":30,"nodeType":"419","messageId":"420","endLine":48,"endColumn":72},{"ruleId":"359","severity":1,"message":"421","line":231,"column":16,"nodeType":"338","messageId":"361","endLine":231,"endColumn":19},{"ruleId":"336","severity":1,"message":"422","line":264,"column":13,"nodeType":"338","messageId":"339","endLine":264,"endColumn":33},{"ruleId":"359","severity":1,"message":"421","line":313,"column":16,"nodeType":"338","messageId":"361","endLine":313,"endColumn":19},{"ruleId":"359","severity":1,"message":"421","line":349,"column":16,"nodeType":"338","messageId":"361","endLine":349,"endColumn":19},{"ruleId":"359","severity":1,"message":"421","line":417,"column":16,"nodeType":"338","messageId":"361","endLine":417,"endColumn":19},{"ruleId":"336","severity":1,"message":"423","line":41,"column":7,"nodeType":"338","messageId":"339","endLine":41,"endColumn":14},{"ruleId":"395","severity":1,"message":"411","line":93,"column":95,"nodeType":"397","messageId":"398","endLine":93,"endColumn":97},{"ruleId":"336","severity":1,"message":"424","line":158,"column":13,"nodeType":"338","messageId":"339","endLine":158,"endColumn":24},{"ruleId":"336","severity":1,"message":"425","line":163,"column":13,"nodeType":"338","messageId":"339","endLine":163,"endColumn":23},{"ruleId":"376","severity":1,"message":"377","line":171,"column":21,"nodeType":"378","endLine":171,"endColumn":43},{"ruleId":"376","severity":1,"message":"377","line":179,"column":17,"nodeType":"378","endLine":179,"endColumn":39},{"ruleId":"368","severity":1,"message":"369","line":7,"column":1,"nodeType":"370","messageId":"371","endLine":9,"endColumn":2},{"ruleId":"336","severity":1,"message":"426","line":2,"column":37,"nodeType":"338","messageId":"339","endLine":2,"endColumn":44},{"ruleId":"349","severity":1,"message":"350","line":21,"column":25,"nodeType":"351","messageId":"352","endLine":21,"endColumn":36},{"ruleId":"336","severity":1,"message":"427","line":88,"column":6,"nodeType":"338","messageId":"339","endLine":88,"endColumn":14},{"ruleId":"336","severity":1,"message":"366","line":125,"column":17,"nodeType":"338","messageId":"339","endLine":125,"endColumn":34},{"ruleId":"336","severity":1,"message":"366","line":197,"column":21,"nodeType":"338","messageId":"339","endLine":197,"endColumn":38},{"ruleId":"336","severity":1,"message":"428","line":206,"column":21,"nodeType":"338","messageId":"339","endLine":206,"endColumn":40},{"ruleId":"354","severity":1,"message":"355","line":229,"column":12,"nodeType":"356","messageId":"357","endLine":239,"endColumn":13},{"ruleId":"354","severity":1,"message":"355","line":379,"column":7,"nodeType":"356","messageId":"357","endLine":393,"endColumn":8},{"ruleId":"336","severity":1,"message":"340","line":2,"column":9,"nodeType":"338","messageId":"339","endLine":2,"endColumn":12},{"ruleId":"336","severity":1,"message":"341","line":2,"column":14,"nodeType":"338","messageId":"339","endLine":2,"endColumn":17},{"ruleId":"336","severity":1,"message":"426","line":2,"column":37,"nodeType":"338","messageId":"339","endLine":2,"endColumn":44},{"ruleId":"336","severity":1,"message":"429","line":66,"column":9,"nodeType":"338","messageId":"339","endLine":66,"endColumn":15},{"ruleId":"391","severity":1,"message":"392","line":81,"column":31,"nodeType":"393","messageId":"394","endLine":81,"endColumn":33},{"ruleId":"336","severity":1,"message":"430","line":62,"column":19,"nodeType":"338","messageId":"339","endLine":62,"endColumn":35},{"ruleId":"344","severity":1,"message":"379","line":217,"column":45,"nodeType":"346","endLine":217,"endColumn":63},{"ruleId":"344","severity":1,"message":"379","line":228,"column":49,"nodeType":"346","endLine":228,"endColumn":67},{"ruleId":"336","severity":1,"message":"430","line":63,"column":19,"nodeType":"338","messageId":"339","endLine":63,"endColumn":35},{"ruleId":"344","severity":1,"message":"379","line":236,"column":49,"nodeType":"346","endLine":236,"endColumn":67},{"ruleId":"336","severity":1,"message":"431","line":2,"column":38,"nodeType":"338","messageId":"339","endLine":2,"endColumn":46},{"ruleId":"336","severity":1,"message":"432","line":8,"column":8,"nodeType":"338","messageId":"339","endLine":8,"endColumn":13},{"ruleId":"336","severity":1,"message":"430","line":74,"column":21,"nodeType":"338","messageId":"339","endLine":74,"endColumn":37},{"ruleId":"344","severity":1,"message":"379","line":231,"column":49,"nodeType":"346","endLine":231,"endColumn":67},{"ruleId":"336","severity":1,"message":"430","line":70,"column":21,"nodeType":"338","messageId":"339","endLine":70,"endColumn":37},{"ruleId":"344","severity":1,"message":"379","line":264,"column":17,"nodeType":"346","endLine":264,"endColumn":67},{"ruleId":"336","severity":1,"message":"430","line":54,"column":21,"nodeType":"338","messageId":"339","endLine":54,"endColumn":37},{"ruleId":"344","severity":1,"message":"379","line":235,"column":49,"nodeType":"346","endLine":235,"endColumn":67},{"ruleId":"336","severity":1,"message":"430","line":106,"column":19,"nodeType":"338","messageId":"339","endLine":106,"endColumn":35},{"ruleId":"344","severity":1,"message":"379","line":319,"column":49,"nodeType":"346","endLine":319,"endColumn":67},{"ruleId":"336","severity":1,"message":"430","line":121,"column":19,"nodeType":"338","messageId":"339","endLine":121,"endColumn":35},{"ruleId":"336","severity":1,"message":"433","line":361,"column":11,"nodeType":"338","messageId":"339","endLine":361,"endColumn":29},{"ruleId":"336","severity":1,"message":"434","line":370,"column":9,"nodeType":"338","messageId":"339","endLine":370,"endColumn":16},{"ruleId":"344","severity":1,"message":"379","line":392,"column":49,"nodeType":"346","endLine":392,"endColumn":65},{"ruleId":"344","severity":1,"message":"379","line":244,"column":29,"nodeType":"346","endLine":244,"endColumn":77},{"ruleId":"336","severity":1,"message":"347","line":2,"column":9,"nodeType":"338","messageId":"339","endLine":2,"endColumn":17},{"ruleId":"336","severity":1,"message":"348","line":2,"column":19,"nodeType":"338","messageId":"339","endLine":2,"endColumn":29},{"ruleId":"336","severity":1,"message":"362","line":78,"column":9,"nodeType":"338","messageId":"339","endLine":78,"endColumn":18},{"ruleId":"336","severity":1,"message":"430","line":101,"column":19,"nodeType":"338","messageId":"339","endLine":101,"endColumn":35},{"ruleId":"435","severity":1,"message":"436","line":114,"column":34,"nodeType":"338","messageId":"437","endLine":114,"endColumn":46},{"ruleId":"336","severity":1,"message":"438","line":148,"column":7,"nodeType":"338","messageId":"339","endLine":148,"endColumn":19},{"ruleId":"395","severity":1,"message":"396","line":157,"column":29,"nodeType":"397","messageId":"398","endLine":157,"endColumn":31},{"ruleId":"439","severity":1,"message":"440","line":158,"column":72,"nodeType":"397","messageId":"441","endLine":158,"endColumn":73},{"ruleId":"395","severity":1,"message":"396","line":207,"column":29,"nodeType":"397","messageId":"398","endLine":207,"endColumn":31},{"ruleId":"439","severity":1,"message":"440","line":208,"column":72,"nodeType":"397","messageId":"441","endLine":208,"endColumn":73},{"ruleId":"359","severity":1,"message":"360","line":300,"column":9,"nodeType":"338","messageId":"361","endLine":300,"endColumn":18},{"ruleId":"336","severity":1,"message":"362","line":300,"column":9,"nodeType":"338","messageId":"339","endLine":300,"endColumn":18},{"ruleId":"344","severity":1,"message":"379","line":324,"column":49,"nodeType":"346","endLine":324,"endColumn":67},{"ruleId":"336","severity":1,"message":"442","line":4,"column":27,"nodeType":"338","messageId":"339","endLine":4,"endColumn":32},{"ruleId":"336","severity":1,"message":"443","line":4,"column":34,"nodeType":"338","messageId":"339","endLine":4,"endColumn":37},{"ruleId":"336","severity":1,"message":"430","line":51,"column":19,"nodeType":"338","messageId":"339","endLine":51,"endColumn":35},{"ruleId":"336","severity":1,"message":"444","line":158,"column":11,"nodeType":"338","messageId":"339","endLine":158,"endColumn":31},{"ruleId":"336","severity":1,"message":"445","line":165,"column":9,"nodeType":"338","messageId":"339","endLine":165,"endColumn":14},{"ruleId":"344","severity":1,"message":"379","line":173,"column":49,"nodeType":"346","endLine":173,"endColumn":67},"no-native-reassign",["446"],"no-negated-in-lhs",["447"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Redirect' is defined but never used.","'useHistory' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'instance' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'instances_auto' is assigned a value but never used.","no-redeclare","'instances' is already defined.","redeclared","'instances' is assigned a value but never used.","'response' is assigned a value but never used.","'response_newdiscrded' is assigned a value but never used.","'response_existingupdated' is assigned a value but never used.","'response_products' is assigned a value but never used.","'header' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'EditOutlined' is defined but never used.","'remarksOnHold' is already defined.","'l' is assigned a value but never used.","'r' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useContext' is defined but never used.","'Form' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'ButtonGroup' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'Print' is defined but never used.","'elem' is assigned a value but never used.","'calculateTime' is assigned a value but never used.","'calculatedTime' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'boxDetails' is assigned a value but never used.","'captureAmount_response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDetails'. Either include it or remove the dependency array.","ArrayExpression",["448"],"'M' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'ProductItemsList' is defined but never used.","Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'mani' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'key' is already defined.","'response_countrylist' is assigned a value but never used.","'context' is assigned a value but never used.","'orderautoid' is assigned a value but never used.","'previousid' is assigned a value but never used.","'Spinner' is defined but never used.","'order_id' is assigned a value but never used.","'response_addProduct' is assigned a value but never used.","'config' is assigned a value but never used.","'selectedRowIndex' is assigned a value but never used.","'useState' is defined but never used.","'Error' is defined but never used.","'selectStateOptions' is assigned a value but never used.","'address' is defined but never used.","no-use-before-define","'country_name' was used before it was defined.","usedBeforeDefined","'country_code' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Image' is defined but never used.","'Nav' is defined but never used.","'selectCounrtyOptions' is assigned a value but never used.","'sr_no' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"449","fix":"450"},"Update the dependencies array to be: [fetchDetails]",{"range":"451","text":"452"},[6187,6189],"[fetchDetails]"]